<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1446" onload="init(evt)" viewBox="0 0 1200 1446" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1446" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1429.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1429.00"> </text><svg id="frames" x="10" width="1180" total_samples="108"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.93%)</title><rect x="0.0000%" y="1365" width="0.9259%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.93%)</title><rect x="0.0000%" y="1349" width="0.9259%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::new (1 samples, 0.93%)</title><rect x="0.9259%" y="1125" width="0.9259%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1135.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.93%)</title><rect x="0.9259%" y="1109" width="0.9259%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1119.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.93%)</title><rect x="0.9259%" y="1093" width="0.9259%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1103.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="0.9259%" y="1077" width="0.9259%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1087.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="0.9259%" y="1061" width="0.9259%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1071.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (1 samples, 0.93%)</title><rect x="0.9259%" y="1045" width="0.9259%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1055.50"></text></g><g><title>local_file_transfer`opentelemetry::trace::tracer::SpanBuilder::start_with_context (1 samples, 0.93%)</title><rect x="0.9259%" y="1029" width="0.9259%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1039.50"></text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::evicted_queue::EvictedQueue&lt;T&gt;::new (1 samples, 0.93%)</title><rect x="0.9259%" y="1013" width="0.9259%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="1.1759%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (7 samples, 6.48%)</title><rect x="1.8519%" y="1077" width="6.4815%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="7"/><text x="2.1019%" y="1087.50">libsyste..</text></g><g><title>local_file_transfer`tokio::runtime::coop::poll_proceed (1 samples, 0.93%)</title><rect x="8.3333%" y="1045" width="0.9259%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="8.5833%" y="1055.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::budget (1 samples, 0.93%)</title><rect x="8.3333%" y="1029" width="0.9259%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="1"/><text x="8.5833%" y="1039.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="8.3333%" y="1013" width="0.9259%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="1"/><text x="8.5833%" y="1023.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::budget::_{{closure}} (1 samples, 0.93%)</title><rect x="8.3333%" y="997" width="0.9259%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="8.5833%" y="1007.50"></text></g><g><title>local_file_transfer`tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.93%)</title><rect x="8.3333%" y="981" width="0.9259%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="8.5833%" y="991.50"></text></g><g><title>local_file_transfer`tokio::runtime::coop::Budget::decrement (1 samples, 0.93%)</title><rect x="8.3333%" y="965" width="0.9259%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="8.5833%" y="975.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::StateCell::poll (1 samples, 0.93%)</title><rect x="9.2593%" y="1029" width="0.9259%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="1"/><text x="9.5093%" y="1039.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.93%)</title><rect x="9.2593%" y="1013" width="0.9259%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="1"/><text x="9.5093%" y="1023.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.93%)</title><rect x="9.2593%" y="997" width="0.9259%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="1"/><text x="9.5093%" y="1007.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (1 samples, 0.93%)</title><rect x="9.2593%" y="981" width="0.9259%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="9.5093%" y="991.50"></text></g><g><title>local_file_transfer`std::panic::catch_unwind (1 samples, 0.93%)</title><rect x="9.2593%" y="965" width="0.9259%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="9.5093%" y="975.50"></text></g><g><title>local_file_transfer`std::panicking::try (1 samples, 0.93%)</title><rect x="9.2593%" y="949" width="0.9259%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="9.5093%" y="959.50"></text></g><g><title>local_file_transfer`std::panicking::try::do_call (1 samples, 0.93%)</title><rect x="9.2593%" y="933" width="0.9259%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="9.5093%" y="943.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::driver (1 samples, 0.93%)</title><rect x="10.1852%" y="1029" width="0.9259%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="1"/><text x="10.4352%" y="1039.50"></text></g><g><title>local_file_transfer`tokio::runtime::driver::Handle::time (1 samples, 0.93%)</title><rect x="10.1852%" y="1013" width="0.9259%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="1"/><text x="10.4352%" y="1023.50"></text></g><g><title>local_file_transfer`tokio::runtime::driver::IoHandle::unpark (3 samples, 2.78%)</title><rect x="11.1111%" y="997" width="2.7778%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="3"/><text x="11.3611%" y="1007.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Handle::unpark (3 samples, 2.78%)</title><rect x="11.1111%" y="981" width="2.7778%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="3"/><text x="11.3611%" y="991.50">lo..</text></g><g><title>local_file_transfer`mio::waker::Waker::wake (3 samples, 2.78%)</title><rect x="11.1111%" y="965" width="2.7778%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="3"/><text x="11.3611%" y="975.50">lo..</text></g><g><title>local_file_transfer`mio::sys::unix::waker::kqueue::Waker::wake (3 samples, 2.78%)</title><rect x="11.1111%" y="949" width="2.7778%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="3"/><text x="11.3611%" y="959.50">lo..</text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 2.78%)</title><rect x="11.1111%" y="933" width="2.7778%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="3"/><text x="11.3611%" y="943.50">li..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (4 samples, 3.70%)</title><rect x="11.1111%" y="1013" width="3.7037%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="4"/><text x="11.3611%" y="1023.50">loca..</text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.93%)</title><rect x="13.8889%" y="997" width="0.9259%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="1"/><text x="14.1389%" y="1007.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.93%)</title><rect x="13.8889%" y="981" width="0.9259%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="1"/><text x="14.1389%" y="991.50"></text></g><g><title>local_file_transfer`tokio::time::sleep::Sleep::poll_elapsed (8 samples, 7.41%)</title><rect x="8.3333%" y="1061" width="7.4074%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="8"/><text x="8.5833%" y="1071.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::poll_elapsed (7 samples, 6.48%)</title><rect x="9.2593%" y="1045" width="6.4815%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="7"/><text x="9.5093%" y="1055.50">local_fi..</text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::reset (5 samples, 4.63%)</title><rect x="11.1111%" y="1029" width="4.6296%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="5"/><text x="11.3611%" y="1039.50">local..</text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerShared::extend_expiration (1 samples, 0.93%)</title><rect x="14.8148%" y="1013" width="0.9259%" height="15" fill="rgb(245,192,40)" fg:x="16" fg:w="1"/><text x="15.0648%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (9 samples, 8.33%)</title><rect x="8.3333%" y="1077" width="8.3333%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="9"/><text x="8.5833%" y="1087.50">local_file_t..</text></g><g><title>local_file_transfer`tokio::time::sleep::_::_&lt;impl tokio::time::sleep::Sleep&gt;::project (1 samples, 0.93%)</title><rect x="15.7407%" y="1061" width="0.9259%" height="15" fill="rgb(232,182,51)" fg:x="17" fg:w="1"/><text x="15.9907%" y="1071.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;adrnaln::packet::Packet&gt;&gt; (1 samples, 0.93%)</title><rect x="16.6667%" y="1077" width="0.9259%" height="15" fill="rgb(231,60,39)" fg:x="18" fg:w="1"/><text x="16.9167%" y="1087.50"></text></g><g><title>local_file_transfer`&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.93%)</title><rect x="16.6667%" y="1061" width="0.9259%" height="15" fill="rgb(208,69,12)" fg:x="18" fg:w="1"/><text x="16.9167%" y="1071.50"></text></g><g><title>local_file_transfer`tokio::sync::oneshot::Receiver&lt;T&gt;::try_recv (1 samples, 0.93%)</title><rect x="17.5926%" y="1077" width="0.9259%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1087.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;i64&gt;&gt;&gt;&gt; (1 samples, 0.93%)</title><rect x="17.5926%" y="1061" width="0.9259%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1071.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;i64&gt;&gt;&gt; (1 samples, 0.93%)</title><rect x="17.5926%" y="1045" width="0.9259%" height="15" fill="rgb(222,207,29)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.93%)</title><rect x="17.5926%" y="1029" width="0.9259%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1039.50"></text></g><g><title>local_file_transfer`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.93%)</title><rect x="17.5926%" y="1013" width="0.9259%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.93%)</title><rect x="17.5926%" y="997" width="0.9259%" height="15" fill="rgb(250,191,14)" fg:x="19" fg:w="1"/><text x="17.8426%" y="1007.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 0.93%)</title><rect x="18.5185%" y="949" width="0.9259%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="1"/><text x="18.7685%" y="959.50"></text></g><g><title>local_file_transfer`&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.93%)</title><rect x="19.4444%" y="645" width="0.9259%" height="15" fill="rgb(206,27,48)" fg:x="21" fg:w="1"/><text x="19.6944%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.93%)</title><rect x="19.4444%" y="629" width="0.9259%" height="15" fill="rgb(225,35,8)" fg:x="21" fg:w="1"/><text x="19.6944%" y="639.50"></text></g><g><title>local_file_transfer`tokio::task::spawn::spawn (3 samples, 2.78%)</title><rect x="18.5185%" y="1077" width="2.7778%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1087.50">lo..</text></g><g><title>local_file_transfer`tokio::task::spawn::spawn_inner (3 samples, 2.78%)</title><rect x="18.5185%" y="1061" width="2.7778%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1071.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::context::current::with_current (3 samples, 2.78%)</title><rect x="18.5185%" y="1045" width="2.7778%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1055.50">lo..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 2.78%)</title><rect x="18.5185%" y="1029" width="2.7778%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1039.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::context::current::with_current::_{{closure}} (3 samples, 2.78%)</title><rect x="18.5185%" y="1013" width="2.7778%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1023.50">lo..</text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (3 samples, 2.78%)</title><rect x="18.5185%" y="997" width="2.7778%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="3"/><text x="18.7685%" y="1007.50">lo..</text></g><g><title>local_file_transfer`tokio::task::spawn::spawn_inner::_{{closure}} (3 samples, 2.78%)</title><rect x="18.5185%" y="981" width="2.7778%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="3"/><text x="18.7685%" y="991.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::Handle::spawn (3 samples, 2.78%)</title><rect x="18.5185%" y="965" width="2.7778%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="3"/><text x="18.7685%" y="975.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2 samples, 1.85%)</title><rect x="19.4444%" y="949" width="1.8519%" height="15" fill="rgb(227,1,9)" fg:x="21" fg:w="2"/><text x="19.6944%" y="959.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2 samples, 1.85%)</title><rect x="19.4444%" y="933" width="1.8519%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="2"/><text x="19.6944%" y="943.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (2 samples, 1.85%)</title><rect x="19.4444%" y="917" width="1.8519%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="2"/><text x="19.6944%" y="927.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 1.85%)</title><rect x="19.4444%" y="901" width="1.8519%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="2"/><text x="19.6944%" y="911.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::with_current (2 samples, 1.85%)</title><rect x="19.4444%" y="885" width="1.8519%" height="15" fill="rgb(222,148,37)" fg:x="21" fg:w="2"/><text x="19.6944%" y="895.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::context::with_scheduler (2 samples, 1.85%)</title><rect x="19.4444%" y="869" width="1.8519%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="2"/><text x="19.6944%" y="879.50">l..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 1.85%)</title><rect x="19.4444%" y="853" width="1.8519%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="2"/><text x="19.6944%" y="863.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 1.85%)</title><rect x="19.4444%" y="837" width="1.8519%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="2"/><text x="19.6944%" y="847.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 1.85%)</title><rect x="19.4444%" y="821" width="1.8519%" height="15" fill="rgb(213,79,30)" fg:x="21" fg:w="2"/><text x="19.6944%" y="831.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 1.85%)</title><rect x="19.4444%" y="805" width="1.8519%" height="15" fill="rgb(246,177,23)" fg:x="21" fg:w="2"/><text x="19.6944%" y="815.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 1.85%)</title><rect x="19.4444%" y="789" width="1.8519%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="2"/><text x="19.6944%" y="799.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (2 samples, 1.85%)</title><rect x="19.4444%" y="773" width="1.8519%" height="15" fill="rgb(216,154,8)" fg:x="21" fg:w="2"/><text x="19.6944%" y="783.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 1.85%)</title><rect x="19.4444%" y="757" width="1.8519%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="2"/><text x="19.6944%" y="767.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::unpark (2 samples, 1.85%)</title><rect x="19.4444%" y="741" width="1.8519%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="2"/><text x="19.6944%" y="751.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (2 samples, 1.85%)</title><rect x="19.4444%" y="725" width="1.8519%" height="15" fill="rgb(240,54,50)" fg:x="21" fg:w="2"/><text x="19.6944%" y="735.50">l..</text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Condvar::notify_one (2 samples, 1.85%)</title><rect x="19.4444%" y="709" width="1.8519%" height="15" fill="rgb(233,84,52)" fg:x="21" fg:w="2"/><text x="19.6944%" y="719.50">l..</text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one (2 samples, 1.85%)</title><rect x="19.4444%" y="693" width="1.8519%" height="15" fill="rgb(207,117,47)" fg:x="21" fg:w="2"/><text x="19.6944%" y="703.50">l..</text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one_slow (2 samples, 1.85%)</title><rect x="19.4444%" y="677" width="1.8519%" height="15" fill="rgb(249,43,39)" fg:x="21" fg:w="2"/><text x="19.6944%" y="687.50">l..</text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::unpark_requeue (2 samples, 1.85%)</title><rect x="19.4444%" y="661" width="1.8519%" height="15" fill="rgb(209,38,44)" fg:x="21" fg:w="2"/><text x="19.6944%" y="671.50">l..</text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once (1 samples, 0.93%)</title><rect x="20.3704%" y="645" width="0.9259%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="20.6204%" y="655.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one_slow::_{{closure}} (1 samples, 0.93%)</title><rect x="20.3704%" y="629" width="0.9259%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="1"/><text x="20.6204%" y="639.50"></text></g><g><title>local_file_transfer`parking_lot::raw_mutex::RawMutex::mark_parked_if_locked (1 samples, 0.93%)</title><rect x="20.3704%" y="613" width="0.9259%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="1"/><text x="20.6204%" y="623.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}} (22 samples, 20.37%)</title><rect x="1.8519%" y="1093" width="20.3704%" height="15" fill="rgb(253,215,40)" fg:x="2" fg:w="22"/><text x="2.1019%" y="1103.50">local_file_transfer`adrnaln::ser..</text></g><g><title>local_file_transfer`tokio::time::sleep::sleep (1 samples, 0.93%)</title><rect x="21.2963%" y="1077" width="0.9259%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1087.50"></text></g><g><title>local_file_transfer`tokio::time::sleep::Sleep::new_timeout (1 samples, 0.93%)</title><rect x="21.2963%" y="1061" width="0.9259%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1071.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::Handle::current (1 samples, 0.93%)</title><rect x="21.2963%" y="1045" width="0.9259%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1055.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::current::with_current (1 samples, 0.93%)</title><rect x="21.2963%" y="1029" width="0.9259%" height="15" fill="rgb(237,122,38)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1039.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="21.2963%" y="1013" width="0.9259%" height="15" fill="rgb(244,218,35)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1023.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::CONTEXT::__getit (1 samples, 0.93%)</title><rect x="21.2963%" y="997" width="0.9259%" height="15" fill="rgb(240,68,47)" fg:x="23" fg:w="1"/><text x="21.5463%" y="1007.50"></text></g><g><title>local_file_transfer`tracing_subscriber::layer::context::Context&lt;S&gt;::span (1 samples, 0.93%)</title><rect x="22.2222%" y="1013" width="0.9259%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="22.4722%" y="1023.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::LookupSpan::span (1 samples, 0.93%)</title><rect x="22.2222%" y="997" width="0.9259%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="22.4722%" y="1007.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.93%)</title><rect x="22.2222%" y="981" width="0.9259%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="22.4722%" y="991.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.93%)</title><rect x="22.2222%" y="965" width="0.9259%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="22.4722%" y="975.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.93%)</title><rect x="22.2222%" y="949" width="0.9259%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="22.4722%" y="959.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.93%)</title><rect x="22.2222%" y="933" width="0.9259%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="22.4722%" y="943.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (1 samples, 0.93%)</title><rect x="22.2222%" y="917" width="0.9259%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="22.4722%" y="927.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (1 samples, 0.93%)</title><rect x="22.2222%" y="901" width="0.9259%" height="15" fill="rgb(253,11,6)" fg:x="24" fg:w="1"/><text x="22.4722%" y="911.50"></text></g><g><title>local_file_transfer`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.93%)</title><rect x="22.2222%" y="885" width="0.9259%" height="15" fill="rgb(247,143,39)" fg:x="24" fg:w="1"/><text x="22.4722%" y="895.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_compare_exchange (1 samples, 0.93%)</title><rect x="22.2222%" y="869" width="0.9259%" height="15" fill="rgb(236,97,10)" fg:x="24" fg:w="1"/><text x="22.4722%" y="879.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (2 samples, 1.85%)</title><rect x="22.2222%" y="1029" width="1.8519%" height="15" fill="rgb(233,208,19)" fg:x="24" fg:w="2"/><text x="22.4722%" y="1039.50">l..</text></g><g><title>local_file_transfer`tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (1 samples, 0.93%)</title><rect x="23.1481%" y="1013" width="0.9259%" height="15" fill="rgb(216,164,2)" fg:x="25" fg:w="1"/><text x="23.3981%" y="1023.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (1 samples, 0.93%)</title><rect x="23.1481%" y="997" width="0.9259%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="1"/><text x="23.3981%" y="1007.50"></text></g><g><title>local_file_transfer`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.93%)</title><rect x="23.1481%" y="981" width="0.9259%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="1"/><text x="23.3981%" y="991.50"></text></g><g><title>local_file_transfer`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.93%)</title><rect x="23.1481%" y="965" width="0.9259%" height="15" fill="rgb(242,107,0)" fg:x="25" fg:w="1"/><text x="23.3981%" y="975.50"></text></g><g><title>local_file_transfer`core::hash::BuildHasher::hash_one (1 samples, 0.93%)</title><rect x="23.1481%" y="949" width="0.9259%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="1"/><text x="23.3981%" y="959.50"></text></g><g><title>local_file_transfer`&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (1 samples, 0.93%)</title><rect x="24.0741%" y="949" width="0.9259%" height="15" fill="rgb(233,223,10)" fg:x="26" fg:w="1"/><text x="24.3241%" y="959.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (1 samples, 0.93%)</title><rect x="24.0741%" y="933" width="0.9259%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="1"/><text x="24.3241%" y="943.50"></text></g><g><title>local_file_transfer`core::any::TypeId::of (1 samples, 0.93%)</title><rect x="24.0741%" y="917" width="0.9259%" height="15" fill="rgb(232,23,21)" fg:x="26" fg:w="1"/><text x="24.3241%" y="927.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="25.0000%" y="949" width="0.9259%" height="15" fill="rgb(244,5,23)" fg:x="27" fg:w="1"/><text x="25.2500%" y="959.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="25.0000%" y="933" width="0.9259%" height="15" fill="rgb(226,81,46)" fg:x="27" fg:w="1"/><text x="25.2500%" y="943.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.93%)</title><rect x="25.0000%" y="917" width="0.9259%" height="15" fill="rgb(247,70,30)" fg:x="27" fg:w="1"/><text x="25.2500%" y="927.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.93%)</title><rect x="25.0000%" y="901" width="0.9259%" height="15" fill="rgb(212,68,19)" fg:x="27" fg:w="1"/><text x="25.2500%" y="911.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.93%)</title><rect x="25.0000%" y="885" width="0.9259%" height="15" fill="rgb(240,187,13)" fg:x="27" fg:w="1"/><text x="25.2500%" y="895.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.93%)</title><rect x="25.0000%" y="869" width="0.9259%" height="15" fill="rgb(223,113,26)" fg:x="27" fg:w="1"/><text x="25.2500%" y="879.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (3 samples, 2.78%)</title><rect x="24.0741%" y="1013" width="2.7778%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="3"/><text x="24.3241%" y="1023.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (3 samples, 2.78%)</title><rect x="24.0741%" y="997" width="2.7778%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="3"/><text x="24.3241%" y="1007.50">lo..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (3 samples, 2.78%)</title><rect x="24.0741%" y="981" width="2.7778%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="3"/><text x="24.3241%" y="991.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 2.78%)</title><rect x="24.0741%" y="965" width="2.7778%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="3"/><text x="24.3241%" y="975.50">lo..</text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.93%)</title><rect x="25.9259%" y="949" width="0.9259%" height="15" fill="rgb(245,159,27)" fg:x="28" fg:w="1"/><text x="26.1759%" y="959.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (1 samples, 0.93%)</title><rect x="25.9259%" y="933" width="0.9259%" height="15" fill="rgb(245,172,44)" fg:x="28" fg:w="1"/><text x="26.1759%" y="943.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::Registry::start_close (1 samples, 0.93%)</title><rect x="25.9259%" y="917" width="0.9259%" height="15" fill="rgb(236,23,11)" fg:x="28" fg:w="1"/><text x="26.1759%" y="927.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.93%)</title><rect x="25.9259%" y="901" width="0.9259%" height="15" fill="rgb(205,117,38)" fg:x="28" fg:w="1"/><text x="26.1759%" y="911.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="25.9259%" y="885" width="0.9259%" height="15" fill="rgb(237,72,25)" fg:x="28" fg:w="1"/><text x="26.1759%" y="895.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}} (28 samples, 25.93%)</title><rect x="1.8519%" y="1125" width="25.9259%" height="15" fill="rgb(244,70,9)" fg:x="2" fg:w="28"/><text x="2.1019%" y="1135.50">local_file_transfer`adrnaln::server::Serv..</text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 25.93%)</title><rect x="1.8519%" y="1109" width="25.9259%" height="15" fill="rgb(217,125,39)" fg:x="2" fg:w="28"/><text x="2.1019%" y="1119.50">local_file_transfer`&lt;tracing::instrument:..</text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (6 samples, 5.56%)</title><rect x="22.2222%" y="1093" width="5.5556%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="6"/><text x="22.4722%" y="1103.50">local_f..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::exit (6 samples, 5.56%)</title><rect x="22.2222%" y="1077" width="5.5556%" height="15" fill="rgb(251,123,47)" fg:x="24" fg:w="6"/><text x="22.4722%" y="1087.50">local_f..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (6 samples, 5.56%)</title><rect x="22.2222%" y="1061" width="5.5556%" height="15" fill="rgb(221,13,13)" fg:x="24" fg:w="6"/><text x="22.4722%" y="1071.50">local_f..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (6 samples, 5.56%)</title><rect x="22.2222%" y="1045" width="5.5556%" height="15" fill="rgb(238,131,9)" fg:x="24" fg:w="6"/><text x="22.4722%" y="1055.50">local_f..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (4 samples, 3.70%)</title><rect x="24.0741%" y="1029" width="3.7037%" height="15" fill="rgb(211,50,8)" fg:x="26" fg:w="4"/><text x="24.3241%" y="1039.50">loca..</text></g><g><title>local_file_transfer`tracing_subscriber::registry::stack::SpanStack::pop (1 samples, 0.93%)</title><rect x="26.8519%" y="1013" width="0.9259%" height="15" fill="rgb(245,182,24)" fg:x="29" fg:w="1"/><text x="27.1019%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.93%)</title><rect x="26.8519%" y="997" width="0.9259%" height="15" fill="rgb(242,14,37)" fg:x="29" fg:w="1"/><text x="27.1019%" y="1007.50"></text></g><g><title>local_file_transfer`core::iter::traits::double_ended::DoubleEndedIterator::rfind (1 samples, 0.93%)</title><rect x="26.8519%" y="981" width="0.9259%" height="15" fill="rgb(246,228,12)" fg:x="29" fg:w="1"/><text x="27.1019%" y="991.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold (1 samples, 0.93%)</title><rect x="26.8519%" y="965" width="0.9259%" height="15" fill="rgb(213,55,15)" fg:x="29" fg:w="1"/><text x="27.1019%" y="975.50"></text></g><g><title>local_file_transfer`core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (1 samples, 0.93%)</title><rect x="26.8519%" y="949" width="0.9259%" height="15" fill="rgb(209,9,3)" fg:x="29" fg:w="1"/><text x="27.1019%" y="959.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold::enumerate::_{{closure}} (1 samples, 0.93%)</title><rect x="26.8519%" y="933" width="0.9259%" height="15" fill="rgb(230,59,30)" fg:x="29" fg:w="1"/><text x="27.1019%" y="943.50"></text></g><g><title>local_file_transfer`core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::_{{closure}} (1 samples, 0.93%)</title><rect x="26.8519%" y="917" width="0.9259%" height="15" fill="rgb(209,121,21)" fg:x="29" fg:w="1"/><text x="27.1019%" y="927.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::span::Id as core::cmp::PartialEq&gt;::eq (1 samples, 0.93%)</title><rect x="26.8519%" y="901" width="0.9259%" height="15" fill="rgb(220,109,13)" fg:x="29" fg:w="1"/><text x="27.1019%" y="911.50"></text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}} (30 samples, 27.78%)</title><rect x="0.9259%" y="1141" width="27.7778%" height="15" fill="rgb(232,18,1)" fg:x="1" fg:w="30"/><text x="1.1759%" y="1151.50">local_file_transfer`local_file_transfer::main..</text></g><g><title>local_file_transfer`tracing_subscriber::util::SubscriberInitExt::try_init (1 samples, 0.93%)</title><rect x="27.7778%" y="1125" width="0.9259%" height="15" fill="rgb(215,41,42)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1135.50"></text></g><g><title>local_file_transfer`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.93%)</title><rect x="27.7778%" y="1109" width="0.9259%" height="15" fill="rgb(224,123,36)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1119.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::dispatcher::Dispatch as core::convert::From&lt;S&gt;&gt;::from (1 samples, 0.93%)</title><rect x="27.7778%" y="1093" width="0.9259%" height="15" fill="rgb(240,125,3)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1103.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::new (1 samples, 0.93%)</title><rect x="27.7778%" y="1077" width="0.9259%" height="15" fill="rgb(205,98,50)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1087.50"></text></g><g><title>local_file_transfer`tracing_core::callsite::register_dispatch (1 samples, 0.93%)</title><rect x="27.7778%" y="1061" width="0.9259%" height="15" fill="rgb(205,185,37)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1071.50"></text></g><g><title>local_file_transfer`tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.93%)</title><rect x="27.7778%" y="1045" width="0.9259%" height="15" fill="rgb(238,207,15)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1055.50"></text></g><g><title>local_file_transfer`tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.93%)</title><rect x="27.7778%" y="1029" width="0.9259%" height="15" fill="rgb(213,199,42)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1039.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.93%)</title><rect x="27.7778%" y="1013" width="0.9259%" height="15" fill="rgb(235,201,11)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.93%)</title><rect x="27.7778%" y="997" width="0.9259%" height="15" fill="rgb(207,46,11)" fg:x="30" fg:w="1"/><text x="28.0278%" y="1007.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.93%)</title><rect x="27.7778%" y="981" width="0.9259%" height="15" fill="rgb(241,35,35)" fg:x="30" fg:w="1"/><text x="28.0278%" y="991.50"></text></g><g><title>local_file_transfer`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1 samples, 0.93%)</title><rect x="27.7778%" y="965" width="0.9259%" height="15" fill="rgb(243,32,47)" fg:x="30" fg:w="1"/><text x="28.0278%" y="975.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.93%)</title><rect x="27.7778%" y="949" width="0.9259%" height="15" fill="rgb(247,202,23)" fg:x="30" fg:w="1"/><text x="28.0278%" y="959.50"></text></g><g><title>local_file_transfer`tracing_core::callsite::dispatchers::Rebuilder::for_each::_{{closure}} (1 samples, 0.93%)</title><rect x="27.7778%" y="933" width="0.9259%" height="15" fill="rgb(219,102,11)" fg:x="30" fg:w="1"/><text x="28.0278%" y="943.50"></text></g><g><title>local_file_transfer`tracing_core::callsite::Callsites::rebuild_interest::_{{closure}} (1 samples, 0.93%)</title><rect x="27.7778%" y="917" width="0.9259%" height="15" fill="rgb(243,110,44)" fg:x="30" fg:w="1"/><text x="28.0278%" y="927.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::max_level_hint (1 samples, 0.93%)</title><rect x="27.7778%" y="901" width="0.9259%" height="15" fill="rgb(222,74,54)" fg:x="30" fg:w="1"/><text x="28.0278%" y="911.50"></text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (31 samples, 28.70%)</title><rect x="0.9259%" y="1157" width="28.7037%" height="15" fill="rgb(216,99,12)" fg:x="1" fg:w="31"/><text x="1.1759%" y="1167.50">local_file_transfer`tokio::runtime::park::Cach..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::propagator::Propagator::new (1 samples, 0.93%)</title><rect x="28.7037%" y="1141" width="0.9259%" height="15" fill="rgb(226,22,26)" fg:x="31" fg:w="1"/><text x="28.9537%" y="1151.50"></text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Condvar::wait (1 samples, 0.93%)</title><rect x="29.6296%" y="1077" width="0.9259%" height="15" fill="rgb(217,163,10)" fg:x="32" fg:w="1"/><text x="29.8796%" y="1087.50"></text></g><g><title>local_file_transfer`std::rt::lang_start_internal (33 samples, 30.56%)</title><rect x="0.9259%" y="1333" width="30.5556%" height="15" fill="rgb(213,25,53)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1343.50">local_file_transfer`std::rt::lang_start_internal</text></g><g><title>local_file_transfer`std::rt::lang_start::_{{closure}} (33 samples, 30.56%)</title><rect x="0.9259%" y="1317" width="30.5556%" height="15" fill="rgb(252,105,26)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1327.50">local_file_transfer`std::rt::lang_start::_{{closu..</text></g><g><title>local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 30.56%)</title><rect x="0.9259%" y="1301" width="30.5556%" height="15" fill="rgb(220,39,43)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1311.50">local_file_transfer`std::sys_common::backtrace::_..</text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once (33 samples, 30.56%)</title><rect x="0.9259%" y="1285" width="30.5556%" height="15" fill="rgb(229,68,48)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1295.50">local_file_transfer`core::ops::function::FnOnce::..</text></g><g><title>local_file_transfer`local_file_transfer::main (33 samples, 30.56%)</title><rect x="0.9259%" y="1269" width="30.5556%" height="15" fill="rgb(252,8,32)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1279.50">local_file_transfer`local_file_transfer::main</text></g><g><title>local_file_transfer`tokio::runtime::runtime::Runtime::block_on (33 samples, 30.56%)</title><rect x="0.9259%" y="1253" width="30.5556%" height="15" fill="rgb(223,20,43)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1263.50">local_file_transfer`tokio::runtime::runtime::Runt..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (33 samples, 30.56%)</title><rect x="0.9259%" y="1237" width="30.5556%" height="15" fill="rgb(229,81,49)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1247.50">local_file_transfer`tokio::runtime::scheduler::mu..</text></g><g><title>local_file_transfer`tokio::runtime::context::runtime::enter_runtime (33 samples, 30.56%)</title><rect x="0.9259%" y="1221" width="30.5556%" height="15" fill="rgb(236,28,36)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1231.50">local_file_transfer`tokio::runtime::context::runt..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (33 samples, 30.56%)</title><rect x="0.9259%" y="1205" width="30.5556%" height="15" fill="rgb(249,185,26)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1215.50">local_file_transfer`tokio::runtime::scheduler::mu..</text></g><g><title>local_file_transfer`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (33 samples, 30.56%)</title><rect x="0.9259%" y="1189" width="30.5556%" height="15" fill="rgb(249,174,33)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1199.50">local_file_transfer`tokio::runtime::context::bloc..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on (33 samples, 30.56%)</title><rect x="0.9259%" y="1173" width="30.5556%" height="15" fill="rgb(233,201,37)" fg:x="1" fg:w="33"/><text x="1.1759%" y="1183.50">local_file_transfer`tokio::runtime::park::CachedP..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::park (2 samples, 1.85%)</title><rect x="29.6296%" y="1157" width="1.8519%" height="15" fill="rgb(221,78,26)" fg:x="32" fg:w="2"/><text x="29.8796%" y="1167.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::with_current (2 samples, 1.85%)</title><rect x="29.6296%" y="1141" width="1.8519%" height="15" fill="rgb(250,127,30)" fg:x="32" fg:w="2"/><text x="29.8796%" y="1151.50">l..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 1.85%)</title><rect x="29.6296%" y="1125" width="1.8519%" height="15" fill="rgb(230,49,44)" fg:x="32" fg:w="2"/><text x="29.8796%" y="1135.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::with_current::_{{closure}} (2 samples, 1.85%)</title><rect x="29.6296%" y="1109" width="1.8519%" height="15" fill="rgb(229,67,23)" fg:x="32" fg:w="2"/><text x="29.8796%" y="1119.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::park::_{{closure}} (2 samples, 1.85%)</title><rect x="29.6296%" y="1093" width="1.8519%" height="15" fill="rgb(249,83,47)" fg:x="32" fg:w="2"/><text x="29.8796%" y="1103.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::park::Inner::park (1 samples, 0.93%)</title><rect x="30.5556%" y="1077" width="0.9259%" height="15" fill="rgb(215,43,3)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1087.50"></text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Condvar::wait (1 samples, 0.93%)</title><rect x="30.5556%" y="1061" width="0.9259%" height="15" fill="rgb(238,154,13)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1071.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::wait (1 samples, 0.93%)</title><rect x="30.5556%" y="1045" width="0.9259%" height="15" fill="rgb(219,56,2)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1055.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.93%)</title><rect x="30.5556%" y="1029" width="0.9259%" height="15" fill="rgb(233,0,4)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1039.50"></text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::park (1 samples, 0.93%)</title><rect x="30.5556%" y="1013" width="0.9259%" height="15" fill="rgb(235,30,7)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1023.50"></text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::park::_{{closure}} (1 samples, 0.93%)</title><rect x="30.5556%" y="997" width="0.9259%" height="15" fill="rgb(250,79,13)" fg:x="33" fg:w="1"/><text x="30.8056%" y="1007.50"></text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once (1 samples, 0.93%)</title><rect x="30.5556%" y="981" width="0.9259%" height="15" fill="rgb(211,146,34)" fg:x="33" fg:w="1"/><text x="30.8056%" y="991.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (1 samples, 0.93%)</title><rect x="30.5556%" y="965" width="0.9259%" height="15" fill="rgb(228,22,38)" fg:x="33" fg:w="1"/><text x="30.8056%" y="975.50"></text></g><g><title>local_file_transfer`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.93%)</title><rect x="30.5556%" y="949" width="0.9259%" height="15" fill="rgb(235,168,5)" fg:x="33" fg:w="1"/><text x="30.8056%" y="959.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_load (1 samples, 0.93%)</title><rect x="30.5556%" y="933" width="0.9259%" height="15" fill="rgb(221,155,16)" fg:x="33" fg:w="1"/><text x="30.8056%" y="943.50"></text></g><g><title>dyld`start (35 samples, 32.41%)</title><rect x="0.0000%" y="1381" width="32.4074%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1391.50">dyld`start</text></g><g><title>local_file_transfer`main (34 samples, 31.48%)</title><rect x="0.9259%" y="1365" width="31.4815%" height="15" fill="rgb(223,4,10)" fg:x="1" fg:w="34"/><text x="1.1759%" y="1375.50">local_file_transfer`main</text></g><g><title>local_file_transfer`std::rt::lang_start (34 samples, 31.48%)</title><rect x="0.9259%" y="1349" width="31.4815%" height="15" fill="rgb(234,103,6)" fg:x="1" fg:w="34"/><text x="1.1759%" y="1359.50">local_file_transfer`std::rt::lang_start</text></g><g><title>local_file_transfer`std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.93%)</title><rect x="31.4815%" y="1333" width="0.9259%" height="15" fill="rgb(227,97,0)" fg:x="34" fg:w="1"/><text x="31.7315%" y="1343.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.93%)</title><rect x="32.4074%" y="1077" width="0.9259%" height="15" fill="rgb(234,150,53)" fg:x="35" fg:w="1"/><text x="32.6574%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.93%)</title><rect x="33.3333%" y="1013" width="0.9259%" height="15" fill="rgb(228,201,54)" fg:x="36" fg:w="1"/><text x="33.5833%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_list_begin (1 samples, 0.93%)</title><rect x="34.2593%" y="949" width="0.9259%" height="15" fill="rgb(222,22,37)" fg:x="37" fg:w="1"/><text x="34.5093%" y="959.50"></text></g><g><title>local_file_transfer`thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt;::write_list_set_begin (1 samples, 0.93%)</title><rect x="34.2593%" y="933" width="0.9259%" height="15" fill="rgb(237,53,32)" fg:x="37" fg:w="1"/><text x="34.5093%" y="943.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_byte (1 samples, 0.93%)</title><rect x="34.2593%" y="917" width="0.9259%" height="15" fill="rgb(233,25,53)" fg:x="37" fg:w="1"/><text x="34.5093%" y="927.50"></text></g><g><title>local_file_transfer`&lt;thrift::transport::WriteHalf&lt;C&gt; as std::io::Write&gt;::write (1 samples, 0.93%)</title><rect x="34.2593%" y="901" width="0.9259%" height="15" fill="rgb(210,40,34)" fg:x="37" fg:w="1"/><text x="34.5093%" y="911.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::transport::buffer::TBufferChannel as std::io::Write&gt;::write (1 samples, 0.93%)</title><rect x="34.2593%" y="885" width="0.9259%" height="15" fill="rgb(241,220,44)" fg:x="37" fg:w="1"/><text x="34.5093%" y="895.50"></text></g><g><title>local_file_transfer`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.93%)</title><rect x="34.2593%" y="869" width="0.9259%" height="15" fill="rgb(235,28,35)" fg:x="37" fg:w="1"/><text x="34.5093%" y="879.50"></text></g><g><title>local_file_transfer`std::sys_common::lazy_box::LazyBox&lt;T&gt;::get_pointer (1 samples, 0.93%)</title><rect x="34.2593%" y="853" width="0.9259%" height="15" fill="rgb(210,56,17)" fg:x="37" fg:w="1"/><text x="34.5093%" y="863.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_load (1 samples, 0.93%)</title><rect x="34.2593%" y="837" width="0.9259%" height="15" fill="rgb(224,130,29)" fg:x="37" fg:w="1"/><text x="34.5093%" y="847.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_field_begin (2 samples, 1.85%)</title><rect x="35.1852%" y="933" width="1.8519%" height="15" fill="rgb(235,212,8)" fg:x="38" fg:w="2"/><text x="35.4352%" y="943.50">l..</text></g><g><title>local_file_transfer`thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt;::write_field_header (2 samples, 1.85%)</title><rect x="35.1852%" y="917" width="1.8519%" height="15" fill="rgb(223,33,50)" fg:x="38" fg:w="2"/><text x="35.4352%" y="927.50">l..</text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_byte (2 samples, 1.85%)</title><rect x="35.1852%" y="901" width="1.8519%" height="15" fill="rgb(219,149,13)" fg:x="38" fg:w="2"/><text x="35.4352%" y="911.50">l..</text></g><g><title>local_file_transfer`&lt;thrift::transport::WriteHalf&lt;C&gt; as std::io::Write&gt;::write (2 samples, 1.85%)</title><rect x="35.1852%" y="885" width="1.8519%" height="15" fill="rgb(250,156,29)" fg:x="38" fg:w="2"/><text x="35.4352%" y="895.50">l..</text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::transport::buffer::TBufferChannel as std::io::Write&gt;::write (2 samples, 1.85%)</title><rect x="35.1852%" y="869" width="1.8519%" height="15" fill="rgb(216,193,19)" fg:x="38" fg:w="2"/><text x="35.4352%" y="879.50">l..</text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.93%)</title><rect x="36.1111%" y="853" width="0.9259%" height="15" fill="rgb(216,135,14)" fg:x="39" fg:w="1"/><text x="36.3611%" y="863.50"></text></g><g><title>local_file_transfer`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.93%)</title><rect x="36.1111%" y="837" width="0.9259%" height="15" fill="rgb(241,47,5)" fg:x="39" fg:w="1"/><text x="36.3611%" y="847.50"></text></g><g><title>local_file_transfer`std::sync::poison::Flag::done (1 samples, 0.93%)</title><rect x="36.1111%" y="821" width="0.9259%" height="15" fill="rgb(233,42,35)" fg:x="39" fg:w="1"/><text x="36.3611%" y="831.50"></text></g><g><title>local_file_transfer`std::panicking::panic_count::count_is_zero (1 samples, 0.93%)</title><rect x="36.1111%" y="805" width="0.9259%" height="15" fill="rgb(231,13,6)" fg:x="39" fg:w="1"/><text x="36.3611%" y="815.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_load (1 samples, 0.93%)</title><rect x="36.1111%" y="789" width="0.9259%" height="15" fill="rgb(207,181,40)" fg:x="39" fg:w="1"/><text x="36.3611%" y="799.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::agent::AgentEmitBatchArgs::write_to_out_protocol (4 samples, 3.70%)</title><rect x="34.2593%" y="981" width="3.7037%" height="15" fill="rgb(254,173,49)" fg:x="37" fg:w="4"/><text x="34.5093%" y="991.50">loca..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Batch::write_to_out_protocol (4 samples, 3.70%)</title><rect x="34.2593%" y="965" width="3.7037%" height="15" fill="rgb(221,1,38)" fg:x="37" fg:w="4"/><text x="34.5093%" y="975.50">loca..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Span::write_to_out_protocol (3 samples, 2.78%)</title><rect x="35.1852%" y="949" width="2.7778%" height="15" fill="rgb(206,124,46)" fg:x="38" fg:w="3"/><text x="35.4352%" y="959.50">lo..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Tag::write_to_out_protocol (1 samples, 0.93%)</title><rect x="37.0370%" y="933" width="0.9259%" height="15" fill="rgb(249,21,11)" fg:x="40" fg:w="1"/><text x="37.2870%" y="943.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_i64 (1 samples, 0.93%)</title><rect x="37.0370%" y="917" width="0.9259%" height="15" fill="rgb(222,201,40)" fg:x="40" fg:w="1"/><text x="37.2870%" y="927.50"></text></g><g><title>local_file_transfer`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.93%)</title><rect x="37.0370%" y="901" width="0.9259%" height="15" fill="rgb(235,61,29)" fg:x="40" fg:w="1"/><text x="37.2870%" y="911.50"></text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::span_processor::SimpleSpanProcessor::new::_{{closure}} (7 samples, 6.48%)</title><rect x="32.4074%" y="1205" width="6.4815%" height="15" fill="rgb(219,207,3)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1215.50">local_fi..</text></g><g><title>local_file_transfer`futures_executor::local_pool::block_on (7 samples, 6.48%)</title><rect x="32.4074%" y="1189" width="6.4815%" height="15" fill="rgb(222,56,46)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1199.50">local_fi..</text></g><g><title>local_file_transfer`futures_executor::local_pool::run_executor (7 samples, 6.48%)</title><rect x="32.4074%" y="1173" width="6.4815%" height="15" fill="rgb(239,76,54)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1183.50">local_fi..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 6.48%)</title><rect x="32.4074%" y="1157" width="6.4815%" height="15" fill="rgb(231,124,27)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1167.50">local_fi..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 6.48%)</title><rect x="32.4074%" y="1141" width="6.4815%" height="15" fill="rgb(249,195,6)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1151.50">local_fi..</text></g><g><title>local_file_transfer`futures_executor::local_pool::run_executor::_{{closure}} (7 samples, 6.48%)</title><rect x="32.4074%" y="1125" width="6.4815%" height="15" fill="rgb(237,174,47)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1135.50">local_fi..</text></g><g><title>local_file_transfer`futures_executor::local_pool::block_on::_{{closure}} (7 samples, 6.48%)</title><rect x="32.4074%" y="1109" width="6.4815%" height="15" fill="rgb(206,201,31)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1119.50">local_fi..</text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 6.48%)</title><rect x="32.4074%" y="1093" width="6.4815%" height="15" fill="rgb(231,57,52)" fg:x="35" fg:w="7"/><text x="32.6574%" y="1103.50">local_fi..</text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::Exporter as opentelemetry::sdk::export::trace::SpanExporter&gt;::export::_{{closure}} (6 samples, 5.56%)</title><rect x="33.3333%" y="1077" width="5.5556%" height="15" fill="rgb(248,177,22)" fg:x="36" fg:w="6"/><text x="33.5833%" y="1087.50">local_f..</text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 5.56%)</title><rect x="33.3333%" y="1061" width="5.5556%" height="15" fill="rgb(215,211,37)" fg:x="36" fg:w="6"/><text x="33.5833%" y="1071.50">local_f..</text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::uploader::SyncUploader as opentelemetry_jaeger::exporter::uploader::Uploader&gt;::upload::_{{closure}} (6 samples, 5.56%)</title><rect x="33.3333%" y="1045" width="5.5556%" height="15" fill="rgb(241,128,51)" fg:x="36" fg:w="6"/><text x="33.5833%" y="1055.50">local_f..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::agent::AgentSyncClientUdp::emit_batch (6 samples, 5.56%)</title><rect x="33.3333%" y="1029" width="5.5556%" height="15" fill="rgb(227,165,31)" fg:x="36" fg:w="6"/><text x="33.5833%" y="1039.50">local_f..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::agent::serialize_batch (5 samples, 4.63%)</title><rect x="34.2593%" y="1013" width="4.6296%" height="15" fill="rgb(228,167,24)" fg:x="37" fg:w="5"/><text x="34.5093%" y="1023.50">local..</text></g><g><title>local_file_transfer`&lt;C as opentelemetry_jaeger::exporter::thrift::agent::TAgentSyncClient&gt;::emit_batch (5 samples, 4.63%)</title><rect x="34.2593%" y="997" width="4.6296%" height="15" fill="rgb(228,143,12)" fg:x="37" fg:w="5"/><text x="34.5093%" y="1007.50">local..</text></g><g><title>local_file_transfer`thrift::protocol::TMessageIdentifier::new (1 samples, 0.93%)</title><rect x="37.9630%" y="981" width="0.9259%" height="15" fill="rgb(249,149,8)" fg:x="41" fg:w="1"/><text x="38.2130%" y="991.50"></text></g><g><title>local_file_transfer`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.93%)</title><rect x="37.9630%" y="965" width="0.9259%" height="15" fill="rgb(243,35,44)" fg:x="41" fg:w="1"/><text x="38.2130%" y="975.50"></text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.93%)</title><rect x="37.9630%" y="949" width="0.9259%" height="15" fill="rgb(246,89,9)" fg:x="41" fg:w="1"/><text x="38.2130%" y="959.50"></text></g><g><title>local_file_transfer`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.93%)</title><rect x="37.9630%" y="933" width="0.9259%" height="15" fill="rgb(233,213,13)" fg:x="41" fg:w="1"/><text x="38.2130%" y="943.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.93%)</title><rect x="37.9630%" y="917" width="0.9259%" height="15" fill="rgb(233,141,41)" fg:x="41" fg:w="1"/><text x="38.2130%" y="927.50"></text></g><g><title>local_file_transfer`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.93%)</title><rect x="37.9630%" y="901" width="0.9259%" height="15" fill="rgb(239,167,4)" fg:x="41" fg:w="1"/><text x="38.2130%" y="911.50"></text></g><g><title>local_file_transfer`alloc::alloc::Global::alloc_impl (1 samples, 0.93%)</title><rect x="37.9630%" y="885" width="0.9259%" height="15" fill="rgb(209,217,16)" fg:x="41" fg:w="1"/><text x="38.2130%" y="895.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park_thread_timeout (6 samples, 5.56%)</title><rect x="38.8889%" y="597" width="5.5556%" height="15" fill="rgb(219,88,35)" fg:x="42" fg:w="6"/><text x="39.1389%" y="607.50">local_f..</text></g><g><title>local_file_transfer`tokio::runtime::driver::IoStack::park_timeout (6 samples, 5.56%)</title><rect x="38.8889%" y="581" width="5.5556%" height="15" fill="rgb(220,193,23)" fg:x="42" fg:w="6"/><text x="39.1389%" y="591.50">local_f..</text></g><g><title>local_file_transfer`tokio::runtime::process::Driver::park_timeout (6 samples, 5.56%)</title><rect x="38.8889%" y="565" width="5.5556%" height="15" fill="rgb(230,90,52)" fg:x="42" fg:w="6"/><text x="39.1389%" y="575.50">local_f..</text></g><g><title>local_file_transfer`tokio::runtime::signal::Driver::park_timeout (6 samples, 5.56%)</title><rect x="38.8889%" y="549" width="5.5556%" height="15" fill="rgb(252,106,19)" fg:x="42" fg:w="6"/><text x="39.1389%" y="559.50">local_f..</text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Driver::park_timeout (6 samples, 5.56%)</title><rect x="38.8889%" y="533" width="5.5556%" height="15" fill="rgb(206,74,20)" fg:x="42" fg:w="6"/><text x="39.1389%" y="543.50">local_f..</text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Driver::turn (6 samples, 5.56%)</title><rect x="38.8889%" y="517" width="5.5556%" height="15" fill="rgb(230,138,44)" fg:x="42" fg:w="6"/><text x="39.1389%" y="527.50">local_f..</text></g><g><title>local_file_transfer`mio::poll::Poll::poll (6 samples, 5.56%)</title><rect x="38.8889%" y="501" width="5.5556%" height="15" fill="rgb(235,182,43)" fg:x="42" fg:w="6"/><text x="39.1389%" y="511.50">local_f..</text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 5.56%)</title><rect x="38.8889%" y="485" width="5.5556%" height="15" fill="rgb(242,16,51)" fg:x="42" fg:w="6"/><text x="39.1389%" y="495.50">libsyst..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.93%)</title><rect x="44.4444%" y="581" width="0.9259%" height="15" fill="rgb(248,9,4)" fg:x="48" fg:w="1"/><text x="44.6944%" y="591.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.93%)</title><rect x="44.4444%" y="565" width="0.9259%" height="15" fill="rgb(210,31,22)" fg:x="48" fg:w="1"/><text x="44.6944%" y="575.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.93%)</title><rect x="44.4444%" y="549" width="0.9259%" height="15" fill="rgb(239,54,39)" fg:x="48" fg:w="1"/><text x="44.6944%" y="559.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (8 samples, 7.41%)</title><rect x="38.8889%" y="725" width="7.4074%" height="15" fill="rgb(230,99,41)" fg:x="42" fg:w="8"/><text x="39.1389%" y="735.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Parker::park (8 samples, 7.41%)</title><rect x="38.8889%" y="709" width="7.4074%" height="15" fill="rgb(253,106,12)" fg:x="42" fg:w="8"/><text x="39.1389%" y="719.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::park (8 samples, 7.41%)</title><rect x="38.8889%" y="693" width="7.4074%" height="15" fill="rgb(213,46,41)" fg:x="42" fg:w="8"/><text x="39.1389%" y="703.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (8 samples, 7.41%)</title><rect x="38.8889%" y="677" width="7.4074%" height="15" fill="rgb(215,133,35)" fg:x="42" fg:w="8"/><text x="39.1389%" y="687.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::driver::Driver::park (8 samples, 7.41%)</title><rect x="38.8889%" y="661" width="7.4074%" height="15" fill="rgb(213,28,5)" fg:x="42" fg:w="8"/><text x="39.1389%" y="671.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::driver::TimeDriver::park (8 samples, 7.41%)</title><rect x="38.8889%" y="645" width="7.4074%" height="15" fill="rgb(215,77,49)" fg:x="42" fg:w="8"/><text x="39.1389%" y="655.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park (8 samples, 7.41%)</title><rect x="38.8889%" y="629" width="7.4074%" height="15" fill="rgb(248,100,22)" fg:x="42" fg:w="8"/><text x="39.1389%" y="639.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park_internal (8 samples, 7.41%)</title><rect x="38.8889%" y="613" width="7.4074%" height="15" fill="rgb(208,67,9)" fg:x="42" fg:w="8"/><text x="39.1389%" y="623.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (2 samples, 1.85%)</title><rect x="44.4444%" y="597" width="1.8519%" height="15" fill="rgb(219,133,21)" fg:x="48" fg:w="2"/><text x="44.6944%" y="607.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::time::source::TimeSource::now (1 samples, 0.93%)</title><rect x="45.3704%" y="581" width="0.9259%" height="15" fill="rgb(246,46,29)" fg:x="49" fg:w="1"/><text x="45.6204%" y="591.50"></text></g><g><title>local_file_transfer`tokio::time::clock::Clock::now (1 samples, 0.93%)</title><rect x="45.3704%" y="565" width="0.9259%" height="15" fill="rgb(246,185,52)" fg:x="49" fg:w="1"/><text x="45.6204%" y="575.50"></text></g><g><title>local_file_transfer`tokio::time::clock::now (1 samples, 0.93%)</title><rect x="45.3704%" y="549" width="0.9259%" height="15" fill="rgb(252,136,11)" fg:x="49" fg:w="1"/><text x="45.6204%" y="559.50"></text></g><g><title>local_file_transfer`std::sys::unix::time::Timespec::now (1 samples, 0.93%)</title><rect x="45.3704%" y="533" width="0.9259%" height="15" fill="rgb(219,138,53)" fg:x="49" fg:w="1"/><text x="45.6204%" y="543.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.93%)</title><rect x="45.3704%" y="517" width="0.9259%" height="15" fill="rgb(211,51,23)" fg:x="49" fg:w="1"/><text x="45.6204%" y="527.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (1 samples, 0.93%)</title><rect x="46.2963%" y="709" width="0.9259%" height="15" fill="rgb(247,221,28)" fg:x="50" fg:w="1"/><text x="46.5463%" y="719.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.93%)</title><rect x="46.2963%" y="693" width="0.9259%" height="15" fill="rgb(251,222,45)" fg:x="50" fg:w="1"/><text x="46.5463%" y="703.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::park (10 samples, 9.26%)</title><rect x="38.8889%" y="741" width="9.2593%" height="15" fill="rgb(217,162,53)" fg:x="42" fg:w="10"/><text x="39.1389%" y="751.50">local_file_tr..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (2 samples, 1.85%)</title><rect x="46.2963%" y="725" width="1.8519%" height="15" fill="rgb(229,93,14)" fg:x="50" fg:w="2"/><text x="46.5463%" y="735.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Core::has_tasks (1 samples, 0.93%)</title><rect x="47.2222%" y="709" width="0.9259%" height="15" fill="rgb(209,67,49)" fg:x="51" fg:w="1"/><text x="47.4722%" y="719.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::has_tasks (1 samples, 0.93%)</title><rect x="47.2222%" y="693" width="0.9259%" height="15" fill="rgb(213,87,29)" fg:x="51" fg:w="1"/><text x="47.4722%" y="703.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.93%)</title><rect x="47.2222%" y="677" width="0.9259%" height="15" fill="rgb(205,151,52)" fg:x="51" fg:w="1"/><text x="47.4722%" y="687.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (1 samples, 0.93%)</title><rect x="47.2222%" y="661" width="0.9259%" height="15" fill="rgb(253,215,39)" fg:x="51" fg:w="1"/><text x="47.4722%" y="671.50"></text></g><g><title>local_file_transfer`core::sync::atomic::AtomicU64::load (1 samples, 0.93%)</title><rect x="47.2222%" y="645" width="0.9259%" height="15" fill="rgb(221,220,41)" fg:x="51" fg:w="1"/><text x="47.4722%" y="655.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_load (1 samples, 0.93%)</title><rect x="47.2222%" y="629" width="0.9259%" height="15" fill="rgb(218,133,21)" fg:x="51" fg:w="1"/><text x="47.4722%" y="639.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 3.70%)</title><rect x="50.9259%" y="149" width="3.7037%" height="15" fill="rgb(221,193,43)" fg:x="55" fg:w="4"/><text x="51.1759%" y="159.50">loca..</text></g><g><title>local_file_transfer`DYLD-STUB$$memcpy (1 samples, 0.93%)</title><rect x="62.9630%" y="37" width="0.9259%" height="15" fill="rgb(240,128,52)" fg:x="68" fg:w="1"/><text x="63.2130%" y="47.50"></text></g><g><title>local_file_transfer`core::result::Result&lt;T,E&gt;::map (3 samples, 2.78%)</title><rect x="63.8889%" y="37" width="2.7778%" height="15" fill="rgb(253,114,12)" fg:x="69" fg:w="3"/><text x="64.1389%" y="47.50">lo..</text></g><g><title>local_file_transfer`bincode::byteorder::ReadBytesExt::read_u8 (12 samples, 11.11%)</title><rect x="57.4074%" y="53" width="11.1111%" height="15" fill="rgb(215,223,47)" fg:x="62" fg:w="12"/><text x="57.6574%" y="63.50">local_file_trans..</text></g><g><title>local_file_transfer`core::slice::_&lt;impl [T]&gt;::split_at (2 samples, 1.85%)</title><rect x="66.6667%" y="37" width="1.8519%" height="15" fill="rgb(248,225,23)" fg:x="72" fg:w="2"/><text x="66.9167%" y="47.50">l..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u8 (14 samples, 12.96%)</title><rect x="56.4815%" y="85" width="12.9630%" height="15" fill="rgb(250,108,0)" fg:x="61" fg:w="14"/><text x="56.7315%" y="95.50">local_file_transfer..</text></g><g><title>local_file_transfer`bincode::de::Deserializer&lt;R,O&gt;::deserialize_byte (14 samples, 12.96%)</title><rect x="56.4815%" y="69" width="12.9630%" height="15" fill="rgb(228,208,7)" fg:x="61" fg:w="14"/><text x="56.7315%" y="79.50">local_file_transfer..</text></g><g><title>local_file_transfer`bincode::de::Deserializer&lt;R,O&gt;::read_bytes (1 samples, 0.93%)</title><rect x="68.5185%" y="53" width="0.9259%" height="15" fill="rgb(244,45,10)" fg:x="74" fg:w="1"/><text x="68.7685%" y="63.50"></text></g><g><title>local_file_transfer`adrnaln::packet::Packet::from_bytes (23 samples, 21.30%)</title><rect x="50.0000%" y="405" width="21.2963%" height="15" fill="rgb(207,125,25)" fg:x="54" fg:w="23"/><text x="50.2500%" y="415.50">local_file_transfer`adrnaln::packe..</text></g><g><title>local_file_transfer`bincode::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="389" width="21.2963%" height="15" fill="rgb(210,195,18)" fg:x="54" fg:w="23"/><text x="50.2500%" y="399.50">local_file_transfer`bincode::deser..</text></g><g><title>local_file_transfer`bincode::internal::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="373" width="21.2963%" height="15" fill="rgb(249,80,12)" fg:x="54" fg:w="23"/><text x="50.2500%" y="383.50">local_file_transfer`bincode::inter..</text></g><g><title>local_file_transfer`bincode::internal::deserialize_seed (23 samples, 21.30%)</title><rect x="50.0000%" y="357" width="21.2963%" height="15" fill="rgb(221,65,9)" fg:x="54" fg:w="23"/><text x="50.2500%" y="367.50">local_file_transfer`bincode::inter..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="341" width="21.2963%" height="15" fill="rgb(235,49,36)" fg:x="54" fg:w="23"/><text x="50.2500%" y="351.50">local_file_transfer`&lt;core::marker:..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::de::Deserialize for adrnaln::packet::Packet&gt;::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="325" width="21.2963%" height="15" fill="rgb(225,32,20)" fg:x="54" fg:w="23"/><text x="50.2500%" y="335.50">local_file_transfer`adrnaln::packe..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (23 samples, 21.30%)</title><rect x="50.0000%" y="309" width="21.2963%" height="15" fill="rgb(215,141,46)" fg:x="54" fg:w="23"/><text x="50.2500%" y="319.50">local_file_transfer`&lt;&amp;mut bincode:..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (23 samples, 21.30%)</title><rect x="50.0000%" y="293" width="21.2963%" height="15" fill="rgb(250,160,47)" fg:x="54" fg:w="23"/><text x="50.2500%" y="303.50">local_file_transfer`&lt;&amp;mut bincode:..</text></g><g><title>local_file_transfer`&lt;adrnaln::packet::_::&lt;impl serde::de::Deserialize for adrnaln::packet::Packet&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (23 samples, 21.30%)</title><rect x="50.0000%" y="277" width="21.2963%" height="15" fill="rgb(216,222,40)" fg:x="54" fg:w="23"/><text x="50.2500%" y="287.50">local_file_transfer`&lt;adrnaln::pack..</text></g><g><title>local_file_transfer`serde::de::SeqAccess::next_element (23 samples, 21.30%)</title><rect x="50.0000%" y="261" width="21.2963%" height="15" fill="rgb(234,217,39)" fg:x="54" fg:w="23"/><text x="50.2500%" y="271.50">local_file_transfer`serde::de::Seq..</text></g><g><title>local_file_transfer`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (23 samples, 21.30%)</title><rect x="50.0000%" y="245" width="21.2963%" height="15" fill="rgb(207,178,40)" fg:x="54" fg:w="23"/><text x="50.2500%" y="255.50">local_file_transfer`&lt;&lt;&amp;mut bincode..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="229" width="21.2963%" height="15" fill="rgb(221,136,13)" fg:x="54" fg:w="23"/><text x="50.2500%" y="239.50">local_file_transfer`&lt;core::marker:..</text></g><g><title>local_file_transfer`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (23 samples, 21.30%)</title><rect x="50.0000%" y="213" width="21.2963%" height="15" fill="rgb(249,199,10)" fg:x="54" fg:w="23"/><text x="50.2500%" y="223.50">local_file_transfer`serde::de::imp..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (23 samples, 21.30%)</title><rect x="50.0000%" y="197" width="21.2963%" height="15" fill="rgb(249,222,13)" fg:x="54" fg:w="23"/><text x="50.2500%" y="207.50">local_file_transfer`&lt;&amp;mut bincode:..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (23 samples, 21.30%)</title><rect x="50.0000%" y="181" width="21.2963%" height="15" fill="rgb(244,185,38)" fg:x="54" fg:w="23"/><text x="50.2500%" y="191.50">local_file_transfer`&lt;&amp;mut bincode:..</text></g><g><title>local_file_transfer`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (23 samples, 21.30%)</title><rect x="50.0000%" y="165" width="21.2963%" height="15" fill="rgb(236,202,9)" fg:x="54" fg:w="23"/><text x="50.2500%" y="175.50">local_file_transfer`&lt;serde::de::im..</text></g><g><title>local_file_transfer`serde::de::SeqAccess::next_element (18 samples, 16.67%)</title><rect x="54.6296%" y="149" width="16.6667%" height="15" fill="rgb(250,229,37)" fg:x="59" fg:w="18"/><text x="54.8796%" y="159.50">local_file_transfer`serde:..</text></g><g><title>local_file_transfer`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (18 samples, 16.67%)</title><rect x="54.6296%" y="133" width="16.6667%" height="15" fill="rgb(206,174,23)" fg:x="59" fg:w="18"/><text x="54.8796%" y="143.50">local_file_transfer`&lt;&lt;&amp;mut..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 14.81%)</title><rect x="56.4815%" y="117" width="14.8148%" height="15" fill="rgb(211,33,43)" fg:x="61" fg:w="16"/><text x="56.7315%" y="127.50">local_file_transfer`&lt;co..</text></g><g><title>local_file_transfer`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (16 samples, 14.81%)</title><rect x="56.4815%" y="101" width="14.8148%" height="15" fill="rgb(245,58,50)" fg:x="61" fg:w="16"/><text x="56.7315%" y="111.50">local_file_transfer`ser..</text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 1.85%)</title><rect x="69.4444%" y="85" width="1.8519%" height="15" fill="rgb(244,68,36)" fg:x="75" fg:w="2"/><text x="69.6944%" y="95.50">l..</text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 22.22%)</title><rect x="50.0000%" y="437" width="22.2222%" height="15" fill="rgb(232,229,15)" fg:x="54" fg:w="24"/><text x="50.2500%" y="447.50">local_file_transfer`&lt;tracing::instr..</text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}}::_{{closure}} (24 samples, 22.22%)</title><rect x="50.0000%" y="421" width="22.2222%" height="15" fill="rgb(254,30,23)" fg:x="54" fg:w="24"/><text x="50.2500%" y="431.50">local_file_transfer`adrnaln::server..</text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.93%)</title><rect x="71.2963%" y="405" width="0.9259%" height="15" fill="rgb(235,160,14)" fg:x="77" fg:w="1"/><text x="71.5463%" y="415.50"></text></g><g><title>local_file_transfer`tracing_core::event::Event::dispatch (1 samples, 0.93%)</title><rect x="71.2963%" y="389" width="0.9259%" height="15" fill="rgb(212,155,44)" fg:x="77" fg:w="1"/><text x="71.5463%" y="399.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (1 samples, 0.93%)</title><rect x="71.2963%" y="373" width="0.9259%" height="15" fill="rgb(226,2,50)" fg:x="77" fg:w="1"/><text x="71.5463%" y="383.50"></text></g><g><title>local_file_transfer`tracing_core::event::Event::dispatch::_{{closure}} (1 samples, 0.93%)</title><rect x="71.2963%" y="357" width="0.9259%" height="15" fill="rgb(234,177,6)" fg:x="77" fg:w="1"/><text x="71.5463%" y="367.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::event (1 samples, 0.93%)</title><rect x="71.2963%" y="341" width="0.9259%" height="15" fill="rgb(217,24,9)" fg:x="77" fg:w="1"/><text x="71.5463%" y="351.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.93%)</title><rect x="71.2963%" y="325" width="0.9259%" height="15" fill="rgb(220,13,46)" fg:x="77" fg:w="1"/><text x="71.5463%" y="335.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.93%)</title><rect x="71.2963%" y="309" width="0.9259%" height="15" fill="rgb(239,221,27)" fg:x="77" fg:w="1"/><text x="71.5463%" y="319.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.93%)</title><rect x="71.2963%" y="293" width="0.9259%" height="15" fill="rgb(222,198,25)" fg:x="77" fg:w="1"/><text x="71.5463%" y="303.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="71.2963%" y="277" width="0.9259%" height="15" fill="rgb(211,99,13)" fg:x="77" fg:w="1"/><text x="71.5463%" y="287.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (1 samples, 0.93%)</title><rect x="71.2963%" y="261" width="0.9259%" height="15" fill="rgb(232,111,31)" fg:x="77" fg:w="1"/><text x="71.5463%" y="271.50"></text></g><g><title>local_file_transfer`&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.93%)</title><rect x="71.2963%" y="245" width="0.9259%" height="15" fill="rgb(245,82,37)" fg:x="77" fg:w="1"/><text x="71.5463%" y="255.50"></text></g><g><title>local_file_transfer`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.93%)</title><rect x="71.2963%" y="229" width="0.9259%" height="15" fill="rgb(227,149,46)" fg:x="77" fg:w="1"/><text x="71.5463%" y="239.50"></text></g><g><title>local_file_transfer`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.93%)</title><rect x="71.2963%" y="213" width="0.9259%" height="15" fill="rgb(218,36,50)" fg:x="77" fg:w="1"/><text x="71.5463%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.93%)</title><rect x="71.2963%" y="197" width="0.9259%" height="15" fill="rgb(226,80,48)" fg:x="77" fg:w="1"/><text x="71.5463%" y="207.50"></text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::evicted_hash_map::EvictedHashMap::insert (1 samples, 0.93%)</title><rect x="73.1481%" y="309" width="0.9259%" height="15" fill="rgb(238,224,15)" fg:x="79" fg:w="1"/><text x="73.3981%" y="319.50"></text></g><g><title>local_file_transfer`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.93%)</title><rect x="73.1481%" y="293" width="0.9259%" height="15" fill="rgb(241,136,10)" fg:x="79" fg:w="1"/><text x="73.3981%" y="303.50"></text></g><g><title>local_file_transfer`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.93%)</title><rect x="73.1481%" y="277" width="0.9259%" height="15" fill="rgb(208,32,45)" fg:x="79" fg:w="1"/><text x="73.3981%" y="287.50"></text></g><g><title>local_file_transfer`core::hash::BuildHasher::hash_one (1 samples, 0.93%)</title><rect x="73.1481%" y="261" width="0.9259%" height="15" fill="rgb(207,135,9)" fg:x="79" fg:w="1"/><text x="73.3981%" y="271.50"></text></g><g><title>local_file_transfer`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.93%)</title><rect x="73.1481%" y="245" width="0.9259%" height="15" fill="rgb(206,86,44)" fg:x="79" fg:w="1"/><text x="73.3981%" y="255.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::common::Key as core::hash::Hash&gt;::hash (1 samples, 0.93%)</title><rect x="73.1481%" y="229" width="0.9259%" height="15" fill="rgb(245,177,15)" fg:x="79" fg:w="1"/><text x="73.3981%" y="239.50"></text></g><g><title>local_file_transfer`core::hash::impls::_&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.93%)</title><rect x="73.1481%" y="213" width="0.9259%" height="15" fill="rgb(206,64,50)" fg:x="79" fg:w="1"/><text x="73.3981%" y="223.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;adrnaln::server::Server::process_buffer::{{closure}}::{{closure}}&gt;&gt; (3 samples, 2.78%)</title><rect x="72.2222%" y="437" width="2.7778%" height="15" fill="rgb(234,36,40)" fg:x="78" fg:w="3"/><text x="72.4722%" y="447.50">lo..</text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (3 samples, 2.78%)</title><rect x="72.2222%" y="421" width="2.7778%" height="15" fill="rgb(213,64,8)" fg:x="78" fg:w="3"/><text x="72.4722%" y="431.50">lo..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (3 samples, 2.78%)</title><rect x="72.2222%" y="405" width="2.7778%" height="15" fill="rgb(210,75,36)" fg:x="78" fg:w="3"/><text x="72.4722%" y="415.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 2.78%)</title><rect x="72.2222%" y="389" width="2.7778%" height="15" fill="rgb(229,88,21)" fg:x="78" fg:w="3"/><text x="72.4722%" y="399.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 2.78%)</title><rect x="72.2222%" y="373" width="2.7778%" height="15" fill="rgb(252,204,47)" fg:x="78" fg:w="3"/><text x="72.4722%" y="383.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (3 samples, 2.78%)</title><rect x="72.2222%" y="357" width="2.7778%" height="15" fill="rgb(208,77,27)" fg:x="78" fg:w="3"/><text x="72.4722%" y="367.50">lo..</text></g><g><title>local_file_transfer`opentelemetry::trace::tracer::SpanBuilder::start_with_context (2 samples, 1.85%)</title><rect x="73.1481%" y="341" width="1.8519%" height="15" fill="rgb(221,76,26)" fg:x="79" fg:w="2"/><text x="73.3981%" y="351.50">l..</text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build_with_context (2 samples, 1.85%)</title><rect x="73.1481%" y="325" width="1.8519%" height="15" fill="rgb(225,139,18)" fg:x="79" fg:w="2"/><text x="73.3981%" y="335.50">l..</text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::evicted_hash_map::EvictedHashMap::new (1 samples, 0.93%)</title><rect x="74.0741%" y="309" width="0.9259%" height="15" fill="rgb(230,137,11)" fg:x="80" fg:w="1"/><text x="74.3241%" y="319.50"></text></g><g><title>local_file_transfer`std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (1 samples, 0.93%)</title><rect x="74.0741%" y="293" width="0.9259%" height="15" fill="rgb(212,28,1)" fg:x="80" fg:w="1"/><text x="74.3241%" y="303.50"></text></g><g><title>local_file_transfer`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.93%)</title><rect x="74.0741%" y="277" width="0.9259%" height="15" fill="rgb(248,164,17)" fg:x="80" fg:w="1"/><text x="74.3241%" y="287.50"></text></g><g><title>local_file_transfer`hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.93%)</title><rect x="74.0741%" y="261" width="0.9259%" height="15" fill="rgb(222,171,42)" fg:x="80" fg:w="1"/><text x="74.3241%" y="271.50"></text></g><g><title>local_file_transfer`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.93%)</title><rect x="74.0741%" y="245" width="0.9259%" height="15" fill="rgb(243,84,45)" fg:x="80" fg:w="1"/><text x="74.3241%" y="255.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id (1 samples, 0.93%)</title><rect x="75.0000%" y="293" width="0.9259%" height="15" fill="rgb(252,49,23)" fg:x="81" fg:w="1"/><text x="75.2500%" y="303.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.93%)</title><rect x="75.0000%" y="277" width="0.9259%" height="15" fill="rgb(215,19,7)" fg:x="81" fg:w="1"/><text x="75.2500%" y="287.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_span_id::_{{closure}} (1 samples, 0.93%)</title><rect x="75.0000%" y="261" width="0.9259%" height="15" fill="rgb(238,81,41)" fg:x="81" fg:w="1"/><text x="75.2500%" y="271.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::IdGenerator&gt;::new_span_id (1 samples, 0.93%)</title><rect x="75.0000%" y="245" width="0.9259%" height="15" fill="rgb(210,199,37)" fg:x="81" fg:w="1"/><text x="75.2500%" y="255.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.93%)</title><rect x="75.0000%" y="229" width="0.9259%" height="15" fill="rgb(244,192,49)" fg:x="81" fg:w="1"/><text x="75.2500%" y="239.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="75.0000%" y="213" width="0.9259%" height="15" fill="rgb(226,211,11)" fg:x="81" fg:w="1"/><text x="75.2500%" y="223.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::IdGenerator&gt;::new_span_id::_{{closure}} (1 samples, 0.93%)</title><rect x="75.0000%" y="197" width="0.9259%" height="15" fill="rgb(236,162,54)" fg:x="81" fg:w="1"/><text x="75.2500%" y="207.50"></text></g><g><title>local_file_transfer`rand::rng::Rng::gen (1 samples, 0.93%)</title><rect x="75.0000%" y="181" width="0.9259%" height="15" fill="rgb(220,229,9)" fg:x="81" fg:w="1"/><text x="75.2500%" y="191.50"></text></g><g><title>local_file_transfer`rand::distributions::other::_&lt;impl rand::distributions::distribution::Distribution&lt;[T (1 samples, 0.93%)</title><rect x="75.0000%" y="165" width="0.9259%" height="15" fill="rgb(250,87,22)" fg:x="81" fg:w="1"/><text x="75.2500%" y="175.50"></text></g><g><title> _]&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.93%)</title><rect x="75.0000%" y="149" width="0.9259%" height="15" fill="rgb(239,43,17)" fg:x="81" fg:w="1"/><text x="75.2500%" y="159.50"></text></g><g><title>local_file_transfer`rand::rng::Rng::gen (1 samples, 0.93%)</title><rect x="75.0000%" y="133" width="0.9259%" height="15" fill="rgb(231,177,25)" fg:x="81" fg:w="1"/><text x="75.2500%" y="143.50"></text></g><g><title>local_file_transfer`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.93%)</title><rect x="75.0000%" y="117" width="0.9259%" height="15" fill="rgb(219,179,1)" fg:x="81" fg:w="1"/><text x="75.2500%" y="127.50"></text></g><g><title>local_file_transfer`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.93%)</title><rect x="75.0000%" y="101" width="0.9259%" height="15" fill="rgb(238,219,53)" fg:x="81" fg:w="1"/><text x="75.2500%" y="111.50"></text></g><g><title>local_file_transfer`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.93%)</title><rect x="75.0000%" y="85" width="0.9259%" height="15" fill="rgb(232,167,36)" fg:x="81" fg:w="1"/><text x="75.2500%" y="95.50"></text></g><g><title>local_file_transfer`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.93%)</title><rect x="75.0000%" y="69" width="0.9259%" height="15" fill="rgb(244,19,51)" fg:x="81" fg:w="1"/><text x="75.2500%" y="79.50"></text></g><g><title>local_file_transfer`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.93%)</title><rect x="75.0000%" y="53" width="0.9259%" height="15" fill="rgb(224,6,22)" fg:x="81" fg:w="1"/><text x="75.2500%" y="63.50"></text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29 samples, 26.85%)</title><rect x="50.0000%" y="485" width="26.8519%" height="15" fill="rgb(224,145,5)" fg:x="54" fg:w="29"/><text x="50.2500%" y="495.50">local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}}::_{{closure}} (29 samples, 26.85%)</title><rect x="50.0000%" y="469" width="26.8519%" height="15" fill="rgb(234,130,49)" fg:x="54" fg:w="29"/><text x="50.2500%" y="479.50">local_file_transfer`adrnaln::server::Server..</text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}} (29 samples, 26.85%)</title><rect x="50.0000%" y="453" width="26.8519%" height="15" fill="rgb(254,6,2)" fg:x="54" fg:w="29"/><text x="50.2500%" y="463.50">local_file_transfer`adrnaln::server::Server..</text></g><g><title>local_file_transfer`tracing::span::Span::new (2 samples, 1.85%)</title><rect x="75.0000%" y="437" width="1.8519%" height="15" fill="rgb(208,96,46)" fg:x="81" fg:w="2"/><text x="75.2500%" y="447.50">l..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (2 samples, 1.85%)</title><rect x="75.0000%" y="421" width="1.8519%" height="15" fill="rgb(239,3,39)" fg:x="81" fg:w="2"/><text x="75.2500%" y="431.50">l..</text></g><g><title>local_file_transfer`tracing::span::Span::new::_{{closure}} (2 samples, 1.85%)</title><rect x="75.0000%" y="405" width="1.8519%" height="15" fill="rgb(233,210,1)" fg:x="81" fg:w="2"/><text x="75.2500%" y="415.50">l..</text></g><g><title>local_file_transfer`tracing::span::Span::new_with (2 samples, 1.85%)</title><rect x="75.0000%" y="389" width="1.8519%" height="15" fill="rgb(244,137,37)" fg:x="81" fg:w="2"/><text x="75.2500%" y="399.50">l..</text></g><g><title>local_file_transfer`tracing::span::Span::make_with (2 samples, 1.85%)</title><rect x="75.0000%" y="373" width="1.8519%" height="15" fill="rgb(240,136,2)" fg:x="81" fg:w="2"/><text x="75.2500%" y="383.50">l..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::new_span (2 samples, 1.85%)</title><rect x="75.0000%" y="357" width="1.8519%" height="15" fill="rgb(239,18,37)" fg:x="81" fg:w="2"/><text x="75.2500%" y="367.50">l..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 1.85%)</title><rect x="75.0000%" y="341" width="1.8519%" height="15" fill="rgb(218,185,22)" fg:x="81" fg:w="2"/><text x="75.2500%" y="351.50">l..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 1.85%)</title><rect x="75.0000%" y="325" width="1.8519%" height="15" fill="rgb(225,218,4)" fg:x="81" fg:w="2"/><text x="75.2500%" y="335.50">l..</text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 1.85%)</title><rect x="75.0000%" y="309" width="1.8519%" height="15" fill="rgb(230,182,32)" fg:x="81" fg:w="2"/><text x="75.2500%" y="319.50">l..</text></g><g><title>local_file_transfer`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.93%)</title><rect x="75.9259%" y="293" width="0.9259%" height="15" fill="rgb(242,56,43)" fg:x="82" fg:w="1"/><text x="76.1759%" y="303.50"></text></g><g><title>local_file_transfer`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.93%)</title><rect x="75.9259%" y="277" width="0.9259%" height="15" fill="rgb(233,99,24)" fg:x="82" fg:w="1"/><text x="76.1759%" y="287.50"></text></g><g><title>local_file_transfer`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.93%)</title><rect x="75.9259%" y="261" width="0.9259%" height="15" fill="rgb(234,209,42)" fg:x="82" fg:w="1"/><text x="76.1759%" y="271.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.93%)</title><rect x="76.8519%" y="389" width="0.9259%" height="15" fill="rgb(227,7,12)" fg:x="83" fg:w="1"/><text x="77.1019%" y="399.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.93%)</title><rect x="76.8519%" y="373" width="0.9259%" height="15" fill="rgb(245,203,43)" fg:x="83" fg:w="1"/><text x="77.1019%" y="383.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="76.8519%" y="357" width="0.9259%" height="15" fill="rgb(238,205,33)" fg:x="83" fg:w="1"/><text x="77.1019%" y="367.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="76.8519%" y="341" width="0.9259%" height="15" fill="rgb(231,56,7)" fg:x="83" fg:w="1"/><text x="77.1019%" y="351.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="76.8519%" y="325" width="0.9259%" height="15" fill="rgb(244,186,29)" fg:x="83" fg:w="1"/><text x="77.1019%" y="335.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.93%)</title><rect x="76.8519%" y="309" width="0.9259%" height="15" fill="rgb(234,111,31)" fg:x="83" fg:w="1"/><text x="77.1019%" y="319.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.93%)</title><rect x="76.8519%" y="293" width="0.9259%" height="15" fill="rgb(241,149,10)" fg:x="83" fg:w="1"/><text x="77.1019%" y="303.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::assemble::_{{closure}} (2 samples, 1.85%)</title><rect x="76.8519%" y="421" width="1.8519%" height="15" fill="rgb(249,206,44)" fg:x="83" fg:w="2"/><text x="77.1019%" y="431.50">l..</text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;adrnaln::server::Server::assemble::{{closure}}::{{closure}}&gt;&gt; (2 samples, 1.85%)</title><rect x="76.8519%" y="405" width="1.8519%" height="15" fill="rgb(251,153,30)" fg:x="83" fg:w="2"/><text x="77.1019%" y="415.50">l..</text></g><g><title>local_file_transfer`tracing::instrument::_::_&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop (1 samples, 0.93%)</title><rect x="77.7778%" y="389" width="0.9259%" height="15" fill="rgb(239,152,38)" fg:x="84" fg:w="1"/><text x="78.0278%" y="399.50"></text></g><g><title>local_file_transfer`tracing::instrument::_::_&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop::__drop_inner (1 samples, 0.93%)</title><rect x="77.7778%" y="373" width="0.9259%" height="15" fill="rgb(249,139,47)" fg:x="84" fg:w="1"/><text x="78.0278%" y="383.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.93%)</title><rect x="77.7778%" y="357" width="0.9259%" height="15" fill="rgb(244,64,35)" fg:x="84" fg:w="1"/><text x="78.0278%" y="367.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::exit (1 samples, 0.93%)</title><rect x="77.7778%" y="341" width="0.9259%" height="15" fill="rgb(216,46,15)" fg:x="84" fg:w="1"/><text x="78.0278%" y="351.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="77.7778%" y="325" width="0.9259%" height="15" fill="rgb(250,74,19)" fg:x="84" fg:w="1"/><text x="78.0278%" y="335.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="77.7778%" y="309" width="0.9259%" height="15" fill="rgb(249,42,33)" fg:x="84" fg:w="1"/><text x="78.0278%" y="319.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="77.7778%" y="293" width="0.9259%" height="15" fill="rgb(242,149,17)" fg:x="84" fg:w="1"/><text x="78.0278%" y="303.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (1 samples, 0.93%)</title><rect x="77.7778%" y="277" width="0.9259%" height="15" fill="rgb(244,29,21)" fg:x="84" fg:w="1"/><text x="78.0278%" y="287.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (1 samples, 0.93%)</title><rect x="77.7778%" y="261" width="0.9259%" height="15" fill="rgb(220,130,37)" fg:x="84" fg:w="1"/><text x="78.0278%" y="271.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.93%)</title><rect x="77.7778%" y="245" width="0.9259%" height="15" fill="rgb(211,67,2)" fg:x="84" fg:w="1"/><text x="78.0278%" y="255.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="77.7778%" y="229" width="0.9259%" height="15" fill="rgb(235,68,52)" fg:x="84" fg:w="1"/><text x="78.0278%" y="239.50"></text></g><g><title>local_file_transfer`&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (1 samples, 0.93%)</title><rect x="77.7778%" y="213" width="0.9259%" height="15" fill="rgb(246,142,3)" fg:x="84" fg:w="1"/><text x="78.0278%" y="223.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (1 samples, 0.93%)</title><rect x="77.7778%" y="197" width="0.9259%" height="15" fill="rgb(241,25,7)" fg:x="84" fg:w="1"/><text x="78.0278%" y="207.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw::_{{closure}} (1 samples, 0.93%)</title><rect x="77.7778%" y="181" width="0.9259%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="1"/><text x="78.0278%" y="191.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start_sequence_reassemble::_{{closure}}::_{{closure}} (3 samples, 2.78%)</title><rect x="76.8519%" y="437" width="2.7778%" height="15" fill="rgb(241,98,45)" fg:x="83" fg:w="3"/><text x="77.1019%" y="447.50">lo..</text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}} (1 samples, 0.93%)</title><rect x="78.7037%" y="421" width="0.9259%" height="15" fill="rgb(254,28,30)" fg:x="85" fg:w="1"/><text x="78.9537%" y="431.50"></text></g><g><title>local_file_transfer`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.93%)</title><rect x="78.7037%" y="405" width="0.9259%" height="15" fill="rgb(241,142,54)" fg:x="85" fg:w="1"/><text x="78.9537%" y="415.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}}::_{{closure}} (1 samples, 0.93%)</title><rect x="78.7037%" y="389" width="0.9259%" height="15" fill="rgb(222,85,15)" fg:x="85" fg:w="1"/><text x="78.9537%" y="399.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.93%)</title><rect x="78.7037%" y="373" width="0.9259%" height="15" fill="rgb(210,85,47)" fg:x="85" fg:w="1"/><text x="78.9537%" y="383.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (1 samples, 0.93%)</title><rect x="78.7037%" y="357" width="0.9259%" height="15" fill="rgb(224,206,25)" fg:x="85" fg:w="1"/><text x="78.9537%" y="367.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.93%)</title><rect x="78.7037%" y="341" width="0.9259%" height="15" fill="rgb(243,201,19)" fg:x="85" fg:w="1"/><text x="78.9537%" y="351.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (1 samples, 0.93%)</title><rect x="78.7037%" y="325" width="0.9259%" height="15" fill="rgb(236,59,4)" fg:x="85" fg:w="1"/><text x="78.9537%" y="335.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}}::_{{closure}} (4 samples, 3.70%)</title><rect x="76.8519%" y="485" width="3.7037%" height="15" fill="rgb(254,179,45)" fg:x="83" fg:w="4"/><text x="77.1019%" y="495.50">loca..</text></g><g><title>local_file_transfer`adrnaln::server::Server::start_sequence_reassemble::_{{closure}} (4 samples, 3.70%)</title><rect x="76.8519%" y="469" width="3.7037%" height="15" fill="rgb(226,14,10)" fg:x="83" fg:w="4"/><text x="77.1019%" y="479.50">loca..</text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 3.70%)</title><rect x="76.8519%" y="453" width="3.7037%" height="15" fill="rgb(244,27,41)" fg:x="83" fg:w="4"/><text x="77.1019%" y="463.50">loca..</text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.93%)</title><rect x="79.6296%" y="437" width="0.9259%" height="15" fill="rgb(235,35,32)" fg:x="86" fg:w="1"/><text x="79.8796%" y="447.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::exit (1 samples, 0.93%)</title><rect x="79.6296%" y="421" width="0.9259%" height="15" fill="rgb(218,68,31)" fg:x="86" fg:w="1"/><text x="79.8796%" y="431.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="79.6296%" y="405" width="0.9259%" height="15" fill="rgb(207,120,37)" fg:x="86" fg:w="1"/><text x="79.8796%" y="415.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="79.6296%" y="389" width="0.9259%" height="15" fill="rgb(227,98,0)" fg:x="86" fg:w="1"/><text x="79.8796%" y="399.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.93%)</title><rect x="79.6296%" y="373" width="0.9259%" height="15" fill="rgb(207,7,3)" fg:x="86" fg:w="1"/><text x="79.8796%" y="383.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (1 samples, 0.93%)</title><rect x="79.6296%" y="357" width="0.9259%" height="15" fill="rgb(206,98,19)" fg:x="86" fg:w="1"/><text x="79.8796%" y="367.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::_{{closure}} (1 samples, 0.93%)</title><rect x="79.6296%" y="341" width="0.9259%" height="15" fill="rgb(217,5,26)" fg:x="86" fg:w="1"/><text x="79.8796%" y="351.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.93%)</title><rect x="79.6296%" y="325" width="0.9259%" height="15" fill="rgb(235,190,38)" fg:x="86" fg:w="1"/><text x="79.8796%" y="335.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="79.6296%" y="309" width="0.9259%" height="15" fill="rgb(247,86,24)" fg:x="86" fg:w="1"/><text x="79.8796%" y="319.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.93%)</title><rect x="79.6296%" y="293" width="0.9259%" height="15" fill="rgb(205,101,16)" fg:x="86" fg:w="1"/><text x="79.8796%" y="303.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.93%)</title><rect x="79.6296%" y="277" width="0.9259%" height="15" fill="rgb(246,168,33)" fg:x="86" fg:w="1"/><text x="79.8796%" y="287.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.93%)</title><rect x="79.6296%" y="261" width="0.9259%" height="15" fill="rgb(231,114,1)" fg:x="86" fg:w="1"/><text x="79.8796%" y="271.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.93%)</title><rect x="79.6296%" y="245" width="0.9259%" height="15" fill="rgb(207,184,53)" fg:x="86" fg:w="1"/><text x="79.8796%" y="255.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.93%)</title><rect x="79.6296%" y="229" width="0.9259%" height="15" fill="rgb(224,95,51)" fg:x="86" fg:w="1"/><text x="79.8796%" y="239.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.93%)</title><rect x="79.6296%" y="213" width="0.9259%" height="15" fill="rgb(212,188,45)" fg:x="86" fg:w="1"/><text x="79.8796%" y="223.50"></text></g><g><title>local_file_transfer`std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.93%)</title><rect x="79.6296%" y="197" width="0.9259%" height="15" fill="rgb(223,154,38)" fg:x="86" fg:w="1"/><text x="79.8796%" y="207.50"></text></g><g><title>local_file_transfer`adrnaln::client::Client::build_sequence_from_file::_{{closure}} (1 samples, 0.93%)</title><rect x="80.5556%" y="469" width="0.9259%" height="15" fill="rgb(251,22,52)" fg:x="87" fg:w="1"/><text x="80.8056%" y="479.50"></text></g><g><title>local_file_transfer`std::io::Read::read_to_end (1 samples, 0.93%)</title><rect x="80.5556%" y="453" width="0.9259%" height="15" fill="rgb(229,209,22)" fg:x="87" fg:w="1"/><text x="80.8056%" y="463.50"></text></g><g><title>local_file_transfer`std::io::default_read_to_end (1 samples, 0.93%)</title><rect x="80.5556%" y="437" width="0.9259%" height="15" fill="rgb(234,138,34)" fg:x="87" fg:w="1"/><text x="80.8056%" y="447.50"></text></g><g><title>local_file_transfer`&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (1 samples, 0.93%)</title><rect x="80.5556%" y="421" width="0.9259%" height="15" fill="rgb(212,95,11)" fg:x="87" fg:w="1"/><text x="80.8056%" y="431.50"></text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.93%)</title><rect x="80.5556%" y="405" width="0.9259%" height="15" fill="rgb(240,179,47)" fg:x="87" fg:w="1"/><text x="80.8056%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.93%)</title><rect x="80.5556%" y="389" width="0.9259%" height="15" fill="rgb(240,163,11)" fg:x="87" fg:w="1"/><text x="80.8056%" y="399.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.93%)</title><rect x="81.4815%" y="293" width="0.9259%" height="15" fill="rgb(236,37,12)" fg:x="88" fg:w="1"/><text x="81.7315%" y="303.50"></text></g><g><title>local_file_transfer`bincode::byteorder::WriteBytesExt::write_u8 (6 samples, 5.56%)</title><rect x="86.1111%" y="165" width="5.5556%" height="15" fill="rgb(232,164,16)" fg:x="93" fg:w="6"/><text x="86.3611%" y="175.50">local_f..</text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 5.56%)</title><rect x="86.1111%" y="149" width="5.5556%" height="15" fill="rgb(244,205,15)" fg:x="93" fg:w="6"/><text x="86.3611%" y="159.50">local_f..</text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 5.56%)</title><rect x="86.1111%" y="133" width="5.5556%" height="15" fill="rgb(223,117,47)" fg:x="93" fg:w="6"/><text x="86.3611%" y="143.50">local_f..</text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 5.56%)</title><rect x="86.1111%" y="117" width="5.5556%" height="15" fill="rgb(244,107,35)" fg:x="93" fg:w="6"/><text x="86.3611%" y="127.50">local_f..</text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 1.85%)</title><rect x="89.8148%" y="101" width="1.8519%" height="15" fill="rgb(205,140,8)" fg:x="97" fg:w="2"/><text x="90.0648%" y="111.50">l..</text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.93%)</title><rect x="90.7407%" y="85" width="0.9259%" height="15" fill="rgb(228,84,46)" fg:x="98" fg:w="1"/><text x="90.9907%" y="95.50"></text></g><g><title>local_file_transfer`bincode::internal::serialize_into (12 samples, 11.11%)</title><rect x="81.4815%" y="389" width="11.1111%" height="15" fill="rgb(254,188,9)" fg:x="88" fg:w="12"/><text x="81.7315%" y="399.50">local_file_trans..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::ser::Serialize for adrnaln::packet::Packet&gt;::serialize (12 samples, 11.11%)</title><rect x="81.4815%" y="373" width="11.1111%" height="15" fill="rgb(206,112,54)" fg:x="88" fg:w="12"/><text x="81.7315%" y="383.50">local_file_trans..</text></g><g><title>local_file_transfer`&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 11.11%)</title><rect x="81.4815%" y="357" width="11.1111%" height="15" fill="rgb(216,84,49)" fg:x="88" fg:w="12"/><text x="81.7315%" y="367.50">local_file_trans..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (12 samples, 11.11%)</title><rect x="81.4815%" y="341" width="11.1111%" height="15" fill="rgb(214,194,35)" fg:x="88" fg:w="12"/><text x="81.7315%" y="351.50">local_file_trans..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq (12 samples, 11.11%)</title><rect x="81.4815%" y="325" width="11.1111%" height="15" fill="rgb(249,28,3)" fg:x="88" fg:w="12"/><text x="81.7315%" y="335.50">local_file_trans..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each (12 samples, 11.11%)</title><rect x="81.4815%" y="309" width="11.1111%" height="15" fill="rgb(222,56,52)" fg:x="88" fg:w="12"/><text x="81.7315%" y="319.50">local_file_trans..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_fold (11 samples, 10.19%)</title><rect x="82.4074%" y="293" width="10.1852%" height="15" fill="rgb(245,217,50)" fg:x="89" fg:w="11"/><text x="82.6574%" y="303.50">local_file_tran..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (7 samples, 6.48%)</title><rect x="86.1111%" y="277" width="6.4815%" height="15" fill="rgb(213,201,24)" fg:x="93" fg:w="7"/><text x="86.3611%" y="287.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq::_{{closure}} (7 samples, 6.48%)</title><rect x="86.1111%" y="261" width="6.4815%" height="15" fill="rgb(248,116,28)" fg:x="93" fg:w="7"/><text x="86.3611%" y="271.50">local_fi..</text></g><g><title>local_file_transfer`&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (7 samples, 6.48%)</title><rect x="86.1111%" y="245" width="6.4815%" height="15" fill="rgb(219,72,43)" fg:x="93" fg:w="7"/><text x="86.3611%" y="255.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 6.48%)</title><rect x="86.1111%" y="229" width="6.4815%" height="15" fill="rgb(209,138,14)" fg:x="93" fg:w="7"/><text x="86.3611%" y="239.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for u8&gt;::serialize (7 samples, 6.48%)</title><rect x="86.1111%" y="213" width="6.4815%" height="15" fill="rgb(222,18,33)" fg:x="93" fg:w="7"/><text x="86.3611%" y="223.50">local_fi..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (7 samples, 6.48%)</title><rect x="86.1111%" y="197" width="6.4815%" height="15" fill="rgb(213,199,7)" fg:x="93" fg:w="7"/><text x="86.3611%" y="207.50">local_fi..</text></g><g><title>local_file_transfer`bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (7 samples, 6.48%)</title><rect x="86.1111%" y="181" width="6.4815%" height="15" fill="rgb(250,110,10)" fg:x="93" fg:w="7"/><text x="86.3611%" y="191.50">local_fi..</text></g><g><title>local_file_transfer`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.93%)</title><rect x="91.6667%" y="165" width="0.9259%" height="15" fill="rgb(248,123,6)" fg:x="99" fg:w="1"/><text x="91.9167%" y="175.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 2.78%)</title><rect x="92.5926%" y="293" width="2.7778%" height="15" fill="rgb(206,91,31)" fg:x="100" fg:w="3"/><text x="92.8426%" y="303.50">lo..</text></g><g><title>local_file_transfer`adrnaln::packet::Packet::to_bytes (19 samples, 17.59%)</title><rect x="81.4815%" y="437" width="17.5926%" height="15" fill="rgb(211,154,13)" fg:x="88" fg:w="19"/><text x="81.7315%" y="447.50">local_file_transfer`adrnaln..</text></g><g><title>local_file_transfer`bincode::serialize (19 samples, 17.59%)</title><rect x="81.4815%" y="421" width="17.5926%" height="15" fill="rgb(225,148,7)" fg:x="88" fg:w="19"/><text x="81.7315%" y="431.50">local_file_transfer`bincode..</text></g><g><title>local_file_transfer`bincode::internal::serialize (19 samples, 17.59%)</title><rect x="81.4815%" y="405" width="17.5926%" height="15" fill="rgb(220,160,43)" fg:x="88" fg:w="19"/><text x="81.7315%" y="415.50">local_file_transfer`bincode..</text></g><g><title>local_file_transfer`bincode::internal::serialized_size (7 samples, 6.48%)</title><rect x="92.5926%" y="389" width="6.4815%" height="15" fill="rgb(213,52,39)" fg:x="100" fg:w="7"/><text x="92.8426%" y="399.50">local_fi..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::ser::Serialize for adrnaln::packet::Packet&gt;::serialize (7 samples, 6.48%)</title><rect x="92.5926%" y="373" width="6.4815%" height="15" fill="rgb(243,137,7)" fg:x="100" fg:w="7"/><text x="92.8426%" y="383.50">local_fi..</text></g><g><title>local_file_transfer`&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 6.48%)</title><rect x="92.5926%" y="357" width="6.4815%" height="15" fill="rgb(230,79,13)" fg:x="100" fg:w="7"/><text x="92.8426%" y="367.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (7 samples, 6.48%)</title><rect x="92.5926%" y="341" width="6.4815%" height="15" fill="rgb(247,105,23)" fg:x="100" fg:w="7"/><text x="92.8426%" y="351.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq (7 samples, 6.48%)</title><rect x="92.5926%" y="325" width="6.4815%" height="15" fill="rgb(223,179,41)" fg:x="100" fg:w="7"/><text x="92.8426%" y="335.50">local_fi..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each (7 samples, 6.48%)</title><rect x="92.5926%" y="309" width="6.4815%" height="15" fill="rgb(218,9,34)" fg:x="100" fg:w="7"/><text x="92.8426%" y="319.50">local_fi..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_fold (4 samples, 3.70%)</title><rect x="95.3704%" y="293" width="3.7037%" height="15" fill="rgb(222,106,8)" fg:x="103" fg:w="4"/><text x="95.6204%" y="303.50">loca..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 1.85%)</title><rect x="97.2222%" y="277" width="1.8519%" height="15" fill="rgb(211,220,0)" fg:x="105" fg:w="2"/><text x="97.4722%" y="287.50">l..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 1.85%)</title><rect x="97.2222%" y="261" width="1.8519%" height="15" fill="rgb(229,52,16)" fg:x="105" fg:w="2"/><text x="97.4722%" y="271.50">l..</text></g><g><title>local_file_transfer`&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 1.85%)</title><rect x="97.2222%" y="245" width="1.8519%" height="15" fill="rgb(212,155,18)" fg:x="105" fg:w="2"/><text x="97.4722%" y="255.50">l..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 1.85%)</title><rect x="97.2222%" y="229" width="1.8519%" height="15" fill="rgb(242,21,14)" fg:x="105" fg:w="2"/><text x="97.4722%" y="239.50">l..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for u8&gt;::serialize (2 samples, 1.85%)</title><rect x="97.2222%" y="213" width="1.8519%" height="15" fill="rgb(222,19,48)" fg:x="105" fg:w="2"/><text x="97.4722%" y="223.50">l..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_u8 (2 samples, 1.85%)</title><rect x="97.2222%" y="197" width="1.8519%" height="15" fill="rgb(232,45,27)" fg:x="105" fg:w="2"/><text x="97.4722%" y="207.50">l..</text></g><g><title>local_file_transfer`bincode::ser::SizeChecker&lt;O&gt;::add_raw (2 samples, 1.85%)</title><rect x="97.2222%" y="181" width="1.8519%" height="15" fill="rgb(249,103,42)" fg:x="105" fg:w="2"/><text x="97.4722%" y="191.50">l..</text></g><g><title>local_file_transfer`&lt;bincode::config::WithOtherIntEncoding&lt;O,I&gt; as bincode::config::internal::InternalOptions&gt;::limit (1 samples, 0.93%)</title><rect x="98.1481%" y="165" width="0.9259%" height="15" fill="rgb(246,81,33)" fg:x="106" fg:w="1"/><text x="98.3981%" y="175.50"></text></g><g><title>all (108 samples, 100%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="108"/><text x="0.2500%" y="1407.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (73 samples, 67.59%)</title><rect x="32.4074%" y="1381" width="67.5926%" height="15" fill="rgb(209,212,41)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1391.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (73 samples, 67.59%)</title><rect x="32.4074%" y="1365" width="67.5926%" height="15" fill="rgb(207,154,6)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1375.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>local_file_transfer`std::sys::unix::thread::Thread::new::thread_start (73 samples, 67.59%)</title><rect x="32.4074%" y="1349" width="67.5926%" height="15" fill="rgb(223,64,47)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1359.50">local_file_transfer`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once{{vtable.shim}} (73 samples, 67.59%)</title><rect x="32.4074%" y="1333" width="67.5926%" height="15" fill="rgb(211,161,38)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1343.50">local_file_transfer`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}} (73 samples, 67.59%)</title><rect x="32.4074%" y="1317" width="67.5926%" height="15" fill="rgb(219,138,40)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1327.50">local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>local_file_transfer`std::panicking::try (73 samples, 67.59%)</title><rect x="32.4074%" y="1301" width="67.5926%" height="15" fill="rgb(241,228,46)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1311.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (73 samples, 67.59%)</title><rect x="32.4074%" y="1285" width="67.5926%" height="15" fill="rgb(223,209,38)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1295.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (73 samples, 67.59%)</title><rect x="32.4074%" y="1269" width="67.5926%" height="15" fill="rgb(236,164,45)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1279.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (73 samples, 67.59%)</title><rect x="32.4074%" y="1253" width="67.5926%" height="15" fill="rgb(231,15,5)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1263.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (73 samples, 67.59%)</title><rect x="32.4074%" y="1237" width="67.5926%" height="15" fill="rgb(252,35,15)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1247.50">local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace (73 samples, 67.59%)</title><rect x="32.4074%" y="1221" width="67.5926%" height="15" fill="rgb(248,181,18)" fg:x="35" fg:w="73"/><text x="32.6574%" y="1231.50">local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="1205" width="61.1111%" height="15" fill="rgb(233,39,42)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1215.50">local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Inner::run (66 samples, 61.11%)</title><rect x="38.8889%" y="1189" width="61.1111%" height="15" fill="rgb(238,110,33)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1199.50">local_file_transfer`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Task::run (66 samples, 61.11%)</title><rect x="38.8889%" y="1173" width="61.1111%" height="15" fill="rgb(233,195,10)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1183.50">local_file_transfer`tokio::runtime::blocking::pool::Task::run</text></g><g><title>local_file_transfer`tokio::runtime::task::UnownedTask&lt;S&gt;::run (66 samples, 61.11%)</title><rect x="38.8889%" y="1157" width="61.1111%" height="15" fill="rgb(254,105,3)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1167.50">local_file_transfer`tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::RawTask::poll (66 samples, 61.11%)</title><rect x="38.8889%" y="1141" width="61.1111%" height="15" fill="rgb(221,225,9)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1151.50">local_file_transfer`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::poll (66 samples, 61.11%)</title><rect x="38.8889%" y="1125" width="61.1111%" height="15" fill="rgb(224,227,45)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1135.50">local_file_transfer`tokio::runtime::task::raw::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (66 samples, 61.11%)</title><rect x="38.8889%" y="1109" width="61.1111%" height="15" fill="rgb(229,198,43)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1119.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (66 samples, 61.11%)</title><rect x="38.8889%" y="1093" width="61.1111%" height="15" fill="rgb(206,209,35)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1103.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future (66 samples, 61.11%)</title><rect x="38.8889%" y="1077" width="61.1111%" height="15" fill="rgb(245,195,53)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1087.50">local_file_transfer`tokio::runtime::task::harness::poll_future</text></g><g><title>local_file_transfer`std::panic::catch_unwind (66 samples, 61.11%)</title><rect x="38.8889%" y="1061" width="61.1111%" height="15" fill="rgb(240,92,26)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1071.50">local_file_transfer`std::panic::catch_unwind</text></g><g><title>local_file_transfer`std::panicking::try (66 samples, 61.11%)</title><rect x="38.8889%" y="1045" width="61.1111%" height="15" fill="rgb(207,40,23)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1055.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (66 samples, 61.11%)</title><rect x="38.8889%" y="1029" width="61.1111%" height="15" fill="rgb(223,111,35)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1039.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (66 samples, 61.11%)</title><rect x="38.8889%" y="1013" width="61.1111%" height="15" fill="rgb(229,147,28)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1023.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 61.11%)</title><rect x="38.8889%" y="997" width="61.1111%" height="15" fill="rgb(211,29,28)" fg:x="42" fg:w="66"/><text x="39.1389%" y="1007.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="981" width="61.1111%" height="15" fill="rgb(228,72,33)" fg:x="42" fg:w="66"/><text x="39.1389%" y="991.50">local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (66 samples, 61.11%)</title><rect x="38.8889%" y="965" width="61.1111%" height="15" fill="rgb(205,214,31)" fg:x="42" fg:w="66"/><text x="39.1389%" y="975.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="949" width="61.1111%" height="15" fill="rgb(224,111,15)" fg:x="42" fg:w="66"/><text x="39.1389%" y="959.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>local_file_transfer`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 61.11%)</title><rect x="38.8889%" y="933" width="61.1111%" height="15" fill="rgb(253,21,26)" fg:x="42" fg:w="66"/><text x="39.1389%" y="943.50">local_file_transfer`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="917" width="61.1111%" height="15" fill="rgb(245,139,43)" fg:x="42" fg:w="66"/><text x="39.1389%" y="927.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run (66 samples, 61.11%)</title><rect x="38.8889%" y="901" width="61.1111%" height="15" fill="rgb(252,170,7)" fg:x="42" fg:w="66"/><text x="39.1389%" y="911.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>local_file_transfer`tokio::runtime::context::runtime::enter_runtime (66 samples, 61.11%)</title><rect x="38.8889%" y="885" width="61.1111%" height="15" fill="rgb(231,118,14)" fg:x="42" fg:w="66"/><text x="39.1389%" y="895.50">local_file_transfer`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="869" width="61.1111%" height="15" fill="rgb(238,83,0)" fg:x="42" fg:w="66"/><text x="39.1389%" y="879.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::context::set_scheduler (66 samples, 61.11%)</title><rect x="38.8889%" y="853" width="61.1111%" height="15" fill="rgb(221,39,39)" fg:x="42" fg:w="66"/><text x="39.1389%" y="863.50">local_file_transfer`tokio::runtime::context::set_scheduler</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 61.11%)</title><rect x="38.8889%" y="837" width="61.1111%" height="15" fill="rgb(222,119,46)" fg:x="42" fg:w="66"/><text x="39.1389%" y="847.50">local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 61.11%)</title><rect x="38.8889%" y="821" width="61.1111%" height="15" fill="rgb(222,165,49)" fg:x="42" fg:w="66"/><text x="39.1389%" y="831.50">local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>local_file_transfer`tokio::runtime::context::set_scheduler::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="805" width="61.1111%" height="15" fill="rgb(219,113,52)" fg:x="42" fg:w="66"/><text x="39.1389%" y="815.50">local_file_transfer`tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (66 samples, 61.11%)</title><rect x="38.8889%" y="789" width="61.1111%" height="15" fill="rgb(214,7,15)" fg:x="42" fg:w="66"/><text x="39.1389%" y="799.50">local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (66 samples, 61.11%)</title><rect x="38.8889%" y="773" width="61.1111%" height="15" fill="rgb(235,32,4)" fg:x="42" fg:w="66"/><text x="39.1389%" y="783.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run (66 samples, 61.11%)</title><rect x="38.8889%" y="757" width="61.1111%" height="15" fill="rgb(238,90,54)" fg:x="42" fg:w="66"/><text x="39.1389%" y="767.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (56 samples, 51.85%)</title><rect x="48.1481%" y="741" width="51.8519%" height="15" fill="rgb(213,208,19)" fg:x="52" fg:w="56"/><text x="48.3981%" y="751.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (56 samples, 51.85%)</title><rect x="48.1481%" y="725" width="51.8519%" height="15" fill="rgb(233,156,4)" fg:x="52" fg:w="56"/><text x="48.3981%" y="735.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_tas..</text></g><g><title>local_file_transfer`tokio::runtime::task::LocalNotified&lt;S&gt;::run (55 samples, 50.93%)</title><rect x="49.0741%" y="709" width="50.9259%" height="15" fill="rgb(207,194,5)" fg:x="53" fg:w="55"/><text x="49.3241%" y="719.50">local_file_transfer`tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::RawTask::poll (55 samples, 50.93%)</title><rect x="49.0741%" y="693" width="50.9259%" height="15" fill="rgb(206,111,30)" fg:x="53" fg:w="55"/><text x="49.3241%" y="703.50">local_file_transfer`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::poll (55 samples, 50.93%)</title><rect x="49.0741%" y="677" width="50.9259%" height="15" fill="rgb(243,70,54)" fg:x="53" fg:w="55"/><text x="49.3241%" y="687.50">local_file_transfer`tokio::runtime::task::raw::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (55 samples, 50.93%)</title><rect x="49.0741%" y="661" width="50.9259%" height="15" fill="rgb(242,28,8)" fg:x="53" fg:w="55"/><text x="49.3241%" y="671.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (55 samples, 50.93%)</title><rect x="49.0741%" y="645" width="50.9259%" height="15" fill="rgb(219,106,18)" fg:x="53" fg:w="55"/><text x="49.3241%" y="655.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future (55 samples, 50.93%)</title><rect x="49.0741%" y="629" width="50.9259%" height="15" fill="rgb(244,222,10)" fg:x="53" fg:w="55"/><text x="49.3241%" y="639.50">local_file_transfer`tokio::runtime::task::harness::poll_future</text></g><g><title>local_file_transfer`std::panic::catch_unwind (55 samples, 50.93%)</title><rect x="49.0741%" y="613" width="50.9259%" height="15" fill="rgb(236,179,52)" fg:x="53" fg:w="55"/><text x="49.3241%" y="623.50">local_file_transfer`std::panic::catch_unwind</text></g><g><title>local_file_transfer`std::panicking::try (55 samples, 50.93%)</title><rect x="49.0741%" y="597" width="50.9259%" height="15" fill="rgb(213,23,39)" fg:x="53" fg:w="55"/><text x="49.3241%" y="607.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (55 samples, 50.93%)</title><rect x="49.0741%" y="581" width="50.9259%" height="15" fill="rgb(238,48,10)" fg:x="53" fg:w="55"/><text x="49.3241%" y="591.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (55 samples, 50.93%)</title><rect x="49.0741%" y="565" width="50.9259%" height="15" fill="rgb(251,196,23)" fg:x="53" fg:w="55"/><text x="49.3241%" y="575.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 50.93%)</title><rect x="49.0741%" y="549" width="50.9259%" height="15" fill="rgb(250,152,24)" fg:x="53" fg:w="55"/><text x="49.3241%" y="559.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}} (55 samples, 50.93%)</title><rect x="49.0741%" y="533" width="50.9259%" height="15" fill="rgb(209,150,17)" fg:x="53" fg:w="55"/><text x="49.3241%" y="543.50">local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (55 samples, 50.93%)</title><rect x="49.0741%" y="517" width="50.9259%" height="15" fill="rgb(234,202,34)" fg:x="53" fg:w="55"/><text x="49.3241%" y="527.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (55 samples, 50.93%)</title><rect x="49.0741%" y="501" width="50.9259%" height="15" fill="rgb(253,148,53)" fg:x="53" fg:w="55"/><text x="49.3241%" y="511.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}}::_{{closure}} (21 samples, 19.44%)</title><rect x="80.5556%" y="485" width="19.4444%" height="15" fill="rgb(218,129,16)" fg:x="87" fg:w="21"/><text x="80.8056%" y="495.50">local_file_transfer`local_file..</text></g><g><title>local_file_transfer`adrnaln::client::Client::send_sequence::_{{closure}} (20 samples, 18.52%)</title><rect x="81.4815%" y="469" width="18.5185%" height="15" fill="rgb(216,85,19)" fg:x="88" fg:w="20"/><text x="81.7315%" y="479.50">local_file_transfer`adrnaln::..</text></g><g><title>local_file_transfer`adrnaln::client::Client::send_packet::_{{closure}} (20 samples, 18.52%)</title><rect x="81.4815%" y="453" width="18.5185%" height="15" fill="rgb(235,228,7)" fg:x="88" fg:w="20"/><text x="81.7315%" y="463.50">local_file_transfer`adrnaln::..</text></g><g><title>local_file_transfer`tokio::net::udp::UdpSocket::send::_{{closure}} (1 samples, 0.93%)</title><rect x="99.0741%" y="437" width="0.9259%" height="15" fill="rgb(245,175,0)" fg:x="107" fg:w="1"/><text x="99.3241%" y="447.50"></text></g><g><title>local_file_transfer`tokio::runtime::io::registration::Registration::async_io::_{{closure}} (1 samples, 0.93%)</title><rect x="99.0741%" y="421" width="0.9259%" height="15" fill="rgb(208,168,36)" fg:x="107" fg:w="1"/><text x="99.3241%" y="431.50"></text></g><g><title>local_file_transfer`tokio::net::udp::UdpSocket::send::_{{closure}}::_{{closure}} (1 samples, 0.93%)</title><rect x="99.0741%" y="405" width="0.9259%" height="15" fill="rgb(246,171,24)" fg:x="107" fg:w="1"/><text x="99.3241%" y="415.50"></text></g><g><title>local_file_transfer`mio::net::udp::UdpSocket::send (1 samples, 0.93%)</title><rect x="99.0741%" y="389" width="0.9259%" height="15" fill="rgb(215,142,24)" fg:x="107" fg:w="1"/><text x="99.3241%" y="399.50"></text></g><g><title>local_file_transfer`mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.93%)</title><rect x="99.0741%" y="373" width="0.9259%" height="15" fill="rgb(250,187,7)" fg:x="107" fg:w="1"/><text x="99.3241%" y="383.50"></text></g><g><title>local_file_transfer`mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.93%)</title><rect x="99.0741%" y="357" width="0.9259%" height="15" fill="rgb(228,66,33)" fg:x="107" fg:w="1"/><text x="99.3241%" y="367.50"></text></g><g><title>local_file_transfer`mio::net::udp::UdpSocket::send::_{{closure}} (1 samples, 0.93%)</title><rect x="99.0741%" y="341" width="0.9259%" height="15" fill="rgb(234,215,21)" fg:x="107" fg:w="1"/><text x="99.3241%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.93%)</title><rect x="99.0741%" y="325" width="0.9259%" height="15" fill="rgb(222,191,20)" fg:x="107" fg:w="1"/><text x="99.3241%" y="335.50"></text></g></svg></svg>