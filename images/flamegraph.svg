<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1589.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1589.00"> </text><svg id="frames" x="10" width="1180" total_samples="160"><g><title>local_file_transfer`tokio::runtime::builder::Builder::build (1 samples, 0.62%)</title><rect x="0.0000%" y="1413" width="0.6250%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>local_file_transfer`tokio::runtime::builder::Builder::build_threaded_runtime (1 samples, 0.62%)</title><rect x="0.0000%" y="1397" width="0.6250%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Launch::launch (1 samples, 0.62%)</title><rect x="0.0000%" y="1381" width="0.6250%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.62%)</title><rect x="0.0000%" y="1365" width="0.6250%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>local_file_transfer`tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.62%)</title><rect x="0.0000%" y="1349" width="0.6250%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.62%)</title><rect x="0.0000%" y="1333" width="0.6250%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (1 samples, 0.62%)</title><rect x="0.0000%" y="1317" width="0.6250%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.62%)</title><rect x="0.0000%" y="1301" width="0.6250%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_thread (1 samples, 0.62%)</title><rect x="0.0000%" y="1285" width="0.6250%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>local_file_transfer`std::thread::Builder::spawn (1 samples, 0.62%)</title><rect x="0.0000%" y="1269" width="0.6250%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked (1 samples, 0.62%)</title><rect x="0.0000%" y="1253" width="0.6250%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked_ (1 samples, 0.62%)</title><rect x="0.0000%" y="1237" width="0.6250%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>local_file_transfer`std::sys::unix::thread::Thread::new (1 samples, 0.62%)</title><rect x="0.0000%" y="1221" width="0.6250%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.62%)</title><rect x="0.0000%" y="1205" width="0.6250%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>local_file_transfer`tokio::runtime::builder::Builder::new_multi_thread (1 samples, 0.62%)</title><rect x="0.6250%" y="1413" width="0.6250%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1423.50"></text></g><g><title>local_file_transfer`tokio::runtime::builder::Builder::new (1 samples, 0.62%)</title><rect x="0.6250%" y="1397" width="0.6250%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1407.50"></text></g><g><title>local_file_transfer`tokio::util::rand::RngSeed::new (1 samples, 0.62%)</title><rect x="0.6250%" y="1381" width="0.6250%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1391.50"></text></g><g><title>local_file_transfer`tokio::loom::std::rand::seed (1 samples, 0.62%)</title><rect x="0.6250%" y="1365" width="0.6250%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1375.50"></text></g><g><title>local_file_transfer`std::hash::random::RandomState::new (1 samples, 0.62%)</title><rect x="0.6250%" y="1349" width="0.6250%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1359.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.62%)</title><rect x="0.6250%" y="1333" width="0.6250%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.8750%" y="1343.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::new (1 samples, 0.62%)</title><rect x="1.2500%" y="1285" width="0.6250%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1295.50"></text></g><g><title>local_file_transfer`tracing::span::Span::new (1 samples, 0.62%)</title><rect x="1.2500%" y="1269" width="0.6250%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1279.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (1 samples, 0.62%)</title><rect x="1.2500%" y="1253" width="0.6250%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1263.50"></text></g><g><title>local_file_transfer`tracing::span::Span::new::_{{closure}} (1 samples, 0.62%)</title><rect x="1.2500%" y="1237" width="0.6250%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1247.50"></text></g><g><title>local_file_transfer`tracing::span::Span::new_with (1 samples, 0.62%)</title><rect x="1.2500%" y="1221" width="0.6250%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1231.50"></text></g><g><title>local_file_transfer`tracing::span::Span::make_with (1 samples, 0.62%)</title><rect x="1.2500%" y="1205" width="0.6250%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1215.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.62%)</title><rect x="1.2500%" y="1189" width="0.6250%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1199.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.62%)</title><rect x="1.2500%" y="1173" width="0.6250%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1183.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.62%)</title><rect x="1.2500%" y="1157" width="0.6250%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1167.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.62%)</title><rect x="1.2500%" y="1141" width="0.6250%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1151.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (1 samples, 0.62%)</title><rect x="1.2500%" y="1125" width="0.6250%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1135.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::create (1 samples, 0.62%)</title><rect x="1.2500%" y="1109" width="0.6250%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1119.50"></text></g><g><title>local_file_transfer`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (1 samples, 0.62%)</title><rect x="1.2500%" y="1093" width="0.6250%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1103.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::init_with (1 samples, 0.62%)</title><rect x="1.2500%" y="1077" width="0.6250%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1087.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::allocate (1 samples, 0.62%)</title><rect x="1.2500%" y="1061" width="0.6250%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1071.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.62%)</title><rect x="1.2500%" y="1045" width="0.6250%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.62%)</title><rect x="1.2500%" y="1029" width="0.6250%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1039.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.62%)</title><rect x="1.2500%" y="1013" width="0.6250%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1023.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.62%)</title><rect x="1.2500%" y="997" width="0.6250%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="1.5000%" y="1007.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.62%)</title><rect x="1.2500%" y="981" width="0.6250%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="1.5000%" y="991.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::fold (1 samples, 0.62%)</title><rect x="1.2500%" y="965" width="0.6250%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="1"/><text x="1.5000%" y="975.50"></text></g><g><title>local_file_transfer`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.62%)</title><rect x="1.2500%" y="949" width="0.6250%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="1"/><text x="1.5000%" y="959.50"></text></g><g><title>local_file_transfer`sharded_slab::page::slot::Slot&lt;T,C&gt;::new (1 samples, 0.62%)</title><rect x="1.2500%" y="933" width="0.6250%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="1"/><text x="1.5000%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.62%)</title><rect x="1.8750%" y="1237" width="0.6250%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="1"/><text x="2.1250%" y="1247.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}} (2 samples, 1.25%)</title><rect x="1.8750%" y="1253" width="1.2500%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="2"/><text x="2.1250%" y="1263.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.62%)</title><rect x="2.5000%" y="1237" width="0.6250%" height="15" fill="rgb(206,96,30)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1247.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (1 samples, 0.62%)</title><rect x="2.5000%" y="1221" width="0.6250%" height="15" fill="rgb(218,138,4)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1231.50"></text></g><g><title>local_file_transfer`&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1 samples, 0.62%)</title><rect x="2.5000%" y="1205" width="0.6250%" height="15" fill="rgb(250,191,14)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1215.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::cancel (1 samples, 0.62%)</title><rect x="2.5000%" y="1189" width="0.6250%" height="15" fill="rgb(239,60,40)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1199.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (1 samples, 0.62%)</title><rect x="2.5000%" y="1173" width="0.6250%" height="15" fill="rgb(206,27,48)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1183.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::StateCell::fire (1 samples, 0.62%)</title><rect x="2.5000%" y="1157" width="0.6250%" height="15" fill="rgb(225,35,8)" fg:x="4" fg:w="1"/><text x="2.7500%" y="1167.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.62%)</title><rect x="3.1250%" y="1237" width="0.6250%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="3.3750%" y="1247.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}} (4 samples, 2.50%)</title><rect x="1.8750%" y="1285" width="2.5000%" height="15" fill="rgb(247,123,22)" fg:x="3" fg:w="4"/><text x="2.1250%" y="1295.50">lo..</text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 2.50%)</title><rect x="1.8750%" y="1269" width="2.5000%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="4"/><text x="2.1250%" y="1279.50">lo..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::enter (2 samples, 1.25%)</title><rect x="3.1250%" y="1253" width="1.2500%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="2"/><text x="3.3750%" y="1263.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="3.7500%" y="1237" width="0.6250%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1247.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="3.7500%" y="1221" width="0.6250%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1231.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="3.7500%" y="1205" width="0.6250%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1215.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or_default (1 samples, 0.62%)</title><rect x="3.7500%" y="1189" width="0.6250%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1199.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.62%)</title><rect x="3.7500%" y="1173" width="0.6250%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1183.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or_try (1 samples, 0.62%)</title><rect x="3.7500%" y="1157" width="0.6250%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1167.50"></text></g><g><title>local_file_transfer`thread_local::thread_id::get (1 samples, 0.62%)</title><rect x="3.7500%" y="1141" width="0.6250%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1151.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.62%)</title><rect x="3.7500%" y="1125" width="0.6250%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1135.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.62%)</title><rect x="3.7500%" y="1109" width="0.6250%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="1"/><text x="4.0000%" y="1119.50"></text></g><g><title>local_file_transfer`clap_builder::derive::Parser::parse (1 samples, 0.62%)</title><rect x="4.3750%" y="1285" width="0.6250%" height="15" fill="rgb(234,67,33)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1295.50"></text></g><g><title>local_file_transfer`&lt;local_file_transfer::Args as clap_builder::derive::CommandFactory&gt;::command (1 samples, 0.62%)</title><rect x="4.3750%" y="1269" width="0.6250%" height="15" fill="rgb(247,98,35)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1279.50"></text></g><g><title>local_file_transfer`&lt;local_file_transfer::Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.62%)</title><rect x="4.3750%" y="1253" width="0.6250%" height="15" fill="rgb(247,138,52)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1263.50"></text></g><g><title>local_file_transfer`clap_builder::builder::arg_group::ArgGroup::args (1 samples, 0.62%)</title><rect x="4.3750%" y="1237" width="0.6250%" height="15" fill="rgb(213,79,30)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1247.50"></text></g><g><title>local_file_transfer`clap_builder::builder::arg_group::ArgGroup::arg (1 samples, 0.62%)</title><rect x="4.3750%" y="1221" width="0.6250%" height="15" fill="rgb(246,177,23)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1231.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.62%)</title><rect x="4.3750%" y="1205" width="0.6250%" height="15" fill="rgb(230,62,27)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1215.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.62%)</title><rect x="4.3750%" y="1189" width="0.6250%" height="15" fill="rgb(216,154,8)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1199.50"></text></g><g><title>local_file_transfer`core::alloc::layout::Layout::array::inner (1 samples, 0.62%)</title><rect x="4.3750%" y="1173" width="0.6250%" height="15" fill="rgb(244,35,45)" fg:x="7" fg:w="1"/><text x="4.6250%" y="1183.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::PipelineBuilder::with_service_name (1 samples, 0.62%)</title><rect x="5.0000%" y="1285" width="0.6250%" height="15" fill="rgb(251,115,12)" fg:x="8" fg:w="1"/><text x="5.2500%" y="1295.50"></text></g><g><title>local_file_transfer`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.62%)</title><rect x="5.0000%" y="1269" width="0.6250%" height="15" fill="rgb(240,54,50)" fg:x="8" fg:w="1"/><text x="5.2500%" y="1279.50"></text></g><g><title>local_file_transfer`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.62%)</title><rect x="5.0000%" y="1253" width="0.6250%" height="15" fill="rgb(233,84,52)" fg:x="8" fg:w="1"/><text x="5.2500%" y="1263.50"></text></g><g><title>dyld`start (10 samples, 6.25%)</title><rect x="0.0000%" y="1541" width="6.2500%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1551.50">dyld`sta..</text></g><g><title>local_file_transfer`main (10 samples, 6.25%)</title><rect x="0.0000%" y="1525" width="6.2500%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1535.50">local_fi..</text></g><g><title>local_file_transfer`std::rt::lang_start (10 samples, 6.25%)</title><rect x="0.0000%" y="1509" width="6.2500%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1519.50">local_fi..</text></g><g><title>local_file_transfer`std::rt::lang_start_internal (10 samples, 6.25%)</title><rect x="0.0000%" y="1493" width="6.2500%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1503.50">local_fi..</text></g><g><title>local_file_transfer`std::rt::lang_start::_{{closure}} (10 samples, 6.25%)</title><rect x="0.0000%" y="1477" width="6.2500%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1487.50">local_fi..</text></g><g><title>local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 6.25%)</title><rect x="0.0000%" y="1461" width="6.2500%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1471.50">local_fi..</text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once (10 samples, 6.25%)</title><rect x="0.0000%" y="1445" width="6.2500%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1455.50">local_fi..</text></g><g><title>local_file_transfer`local_file_transfer::main (10 samples, 6.25%)</title><rect x="0.0000%" y="1429" width="6.2500%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1439.50">local_fi..</text></g><g><title>local_file_transfer`tokio::runtime::runtime::Runtime::block_on (8 samples, 5.00%)</title><rect x="1.2500%" y="1413" width="5.0000%" height="15" fill="rgb(208,190,38)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1423.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (8 samples, 5.00%)</title><rect x="1.2500%" y="1397" width="5.0000%" height="15" fill="rgb(235,213,38)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1407.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::context::runtime::enter_runtime (8 samples, 5.00%)</title><rect x="1.2500%" y="1381" width="5.0000%" height="15" fill="rgb(237,122,38)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1391.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (8 samples, 5.00%)</title><rect x="1.2500%" y="1365" width="5.0000%" height="15" fill="rgb(244,218,35)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1375.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (8 samples, 5.00%)</title><rect x="1.2500%" y="1349" width="5.0000%" height="15" fill="rgb(240,68,47)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1359.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on (8 samples, 5.00%)</title><rect x="1.2500%" y="1333" width="5.0000%" height="15" fill="rgb(210,16,53)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1343.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (8 samples, 5.00%)</title><rect x="1.2500%" y="1317" width="5.0000%" height="15" fill="rgb(235,124,12)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1327.50">local_..</text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}} (8 samples, 5.00%)</title><rect x="1.2500%" y="1301" width="5.0000%" height="15" fill="rgb(224,169,11)" fg:x="2" fg:w="8"/><text x="1.5000%" y="1311.50">local_..</text></g><g><title>local_file_transfer`tracing_subscriber::registry (1 samples, 0.62%)</title><rect x="5.6250%" y="1285" width="0.6250%" height="15" fill="rgb(250,166,2)" fg:x="9" fg:w="1"/><text x="5.8750%" y="1295.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T&gt;::new (1 samples, 0.62%)</title><rect x="5.6250%" y="1269" width="0.6250%" height="15" fill="rgb(242,216,29)" fg:x="9" fg:w="1"/><text x="5.8750%" y="1279.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.62%)</title><rect x="6.2500%" y="1541" width="0.6250%" height="15" fill="rgb(230,116,27)" fg:x="10" fg:w="1"/><text x="6.5000%" y="1551.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.62%)</title><rect x="7.5000%" y="1173" width="0.6250%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="1"/><text x="7.7500%" y="1183.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Log::write_to_out_protocol (1 samples, 0.62%)</title><rect x="8.1250%" y="1093" width="0.6250%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="8.3750%" y="1103.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Tag::write_to_out_protocol (1 samples, 0.62%)</title><rect x="8.1250%" y="1077" width="0.6250%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="8.3750%" y="1087.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::TagType::write_to_out_protocol (1 samples, 0.62%)</title><rect x="8.1250%" y="1061" width="0.6250%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="8.3750%" y="1071.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_i32 (1 samples, 0.62%)</title><rect x="8.1250%" y="1045" width="0.6250%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="1"/><text x="8.3750%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.62%)</title><rect x="8.1250%" y="1029" width="0.6250%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="1"/><text x="8.3750%" y="1039.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_string (1 samples, 0.62%)</title><rect x="8.7500%" y="1077" width="0.6250%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1087.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_bytes (1 samples, 0.62%)</title><rect x="8.7500%" y="1061" width="0.6250%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1071.50"></text></g><g><title>local_file_transfer`std::io::Write::write_all (1 samples, 0.62%)</title><rect x="8.7500%" y="1045" width="0.6250%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;thrift::transport::WriteHalf&lt;C&gt; as std::io::Write&gt;::write (1 samples, 0.62%)</title><rect x="8.7500%" y="1029" width="0.6250%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1039.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::transport::buffer::TBufferChannel as std::io::Write&gt;::write (1 samples, 0.62%)</title><rect x="8.7500%" y="1013" width="0.6250%" height="15" fill="rgb(233,223,10)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1023.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.62%)</title><rect x="8.7500%" y="997" width="0.6250%" height="15" fill="rgb(215,21,27)" fg:x="14" fg:w="1"/><text x="9.0000%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.62%)</title><rect x="8.7500%" y="981" width="0.6250%" height="15" fill="rgb(232,23,21)" fg:x="14" fg:w="1"/><text x="9.0000%" y="991.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::TagType::write_to_out_protocol (1 samples, 0.62%)</title><rect x="9.3750%" y="1077" width="0.6250%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1087.50"></text></g><g><title>local_file_transfer`&lt;thrift::protocol::compact::TCompactOutputProtocol&lt;T&gt; as thrift::protocol::TOutputProtocol&gt;::write_i32 (1 samples, 0.62%)</title><rect x="9.3750%" y="1061" width="0.6250%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1071.50"></text></g><g><title>local_file_transfer`&lt;Inner as integer_encoding::writer::VarIntWriter&gt;::write_varint (1 samples, 0.62%)</title><rect x="9.3750%" y="1045" width="0.6250%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1055.50"></text></g><g><title>local_file_transfer`std::io::Write::write_all (1 samples, 0.62%)</title><rect x="9.3750%" y="1029" width="0.6250%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1039.50"></text></g><g><title>local_file_transfer`&lt;thrift::transport::WriteHalf&lt;C&gt; as std::io::Write&gt;::write (1 samples, 0.62%)</title><rect x="9.3750%" y="1013" width="0.6250%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::transport::buffer::TBufferChannel as std::io::Write&gt;::write (1 samples, 0.62%)</title><rect x="9.3750%" y="997" width="0.6250%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="9.6250%" y="1007.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.62%)</title><rect x="9.3750%" y="981" width="0.6250%" height="15" fill="rgb(206,192,2)" fg:x="15" fg:w="1"/><text x="9.6250%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.62%)</title><rect x="9.3750%" y="965" width="0.6250%" height="15" fill="rgb(241,108,4)" fg:x="15" fg:w="1"/><text x="9.6250%" y="975.50"></text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 3.12%)</title><rect x="7.5000%" y="1221" width="3.1250%" height="15" fill="rgb(247,173,49)" fg:x="12" fg:w="5"/><text x="7.7500%" y="1231.50">loc..</text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::uploader::SyncUploader as opentelemetry_jaeger::exporter::uploader::Uploader&gt;::upload::_{{closure}} (5 samples, 3.12%)</title><rect x="7.5000%" y="1205" width="3.1250%" height="15" fill="rgb(224,114,35)" fg:x="12" fg:w="5"/><text x="7.7500%" y="1215.50">loc..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::agent::AgentSyncClientUdp::emit_batch (5 samples, 3.12%)</title><rect x="7.5000%" y="1189" width="3.1250%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="5"/><text x="7.7500%" y="1199.50">loc..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::agent::serialize_batch (4 samples, 2.50%)</title><rect x="8.1250%" y="1173" width="2.5000%" height="15" fill="rgb(245,172,44)" fg:x="13" fg:w="4"/><text x="8.3750%" y="1183.50">lo..</text></g><g><title>local_file_transfer`&lt;C as opentelemetry_jaeger::exporter::thrift::agent::TAgentSyncClient&gt;::emit_batch (4 samples, 2.50%)</title><rect x="8.1250%" y="1157" width="2.5000%" height="15" fill="rgb(236,23,11)" fg:x="13" fg:w="4"/><text x="8.3750%" y="1167.50">lo..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::agent::AgentEmitBatchArgs::write_to_out_protocol (4 samples, 2.50%)</title><rect x="8.1250%" y="1141" width="2.5000%" height="15" fill="rgb(205,117,38)" fg:x="13" fg:w="4"/><text x="8.3750%" y="1151.50">lo..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Batch::write_to_out_protocol (4 samples, 2.50%)</title><rect x="8.1250%" y="1125" width="2.5000%" height="15" fill="rgb(237,72,25)" fg:x="13" fg:w="4"/><text x="8.3750%" y="1135.50">lo..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Span::write_to_out_protocol (4 samples, 2.50%)</title><rect x="8.1250%" y="1109" width="2.5000%" height="15" fill="rgb(244,70,9)" fg:x="13" fg:w="4"/><text x="8.3750%" y="1119.50">lo..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::jaeger::Tag::write_to_out_protocol (3 samples, 1.88%)</title><rect x="8.7500%" y="1093" width="1.8750%" height="15" fill="rgb(217,125,39)" fg:x="14" fg:w="3"/><text x="9.0000%" y="1103.50">l..</text></g><g><title>local_file_transfer`thrift::protocol::TFieldIdentifier::new (1 samples, 0.62%)</title><rect x="10.0000%" y="1077" width="0.6250%" height="15" fill="rgb(235,36,10)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1087.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.62%)</title><rect x="10.0000%" y="1061" width="0.6250%" height="15" fill="rgb(251,123,47)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1071.50"></text></g><g><title>local_file_transfer`thrift::protocol::TFieldIdentifier::new::_{{closure}} (1 samples, 0.62%)</title><rect x="10.0000%" y="1045" width="0.6250%" height="15" fill="rgb(221,13,13)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.62%)</title><rect x="10.0000%" y="1029" width="0.6250%" height="15" fill="rgb(238,131,9)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1039.50"></text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.62%)</title><rect x="10.0000%" y="1013" width="0.6250%" height="15" fill="rgb(211,50,8)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1023.50"></text></g><g><title>local_file_transfer`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.62%)</title><rect x="10.0000%" y="997" width="0.6250%" height="15" fill="rgb(245,182,24)" fg:x="16" fg:w="1"/><text x="10.2500%" y="1007.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.62%)</title><rect x="10.0000%" y="981" width="0.6250%" height="15" fill="rgb(242,14,37)" fg:x="16" fg:w="1"/><text x="10.2500%" y="991.50"></text></g><g><title>local_file_transfer`core::alloc::layout::Layout::array::inner (1 samples, 0.62%)</title><rect x="10.0000%" y="965" width="0.6250%" height="15" fill="rgb(246,228,12)" fg:x="16" fg:w="1"/><text x="10.2500%" y="975.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::build_span_tags (1 samples, 0.62%)</title><rect x="10.6250%" y="1205" width="0.6250%" height="15" fill="rgb(213,55,15)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1215.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::collect (1 samples, 0.62%)</title><rect x="10.6250%" y="1189" width="0.6250%" height="15" fill="rgb(209,9,3)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1199.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="10.6250%" y="1173" width="0.6250%" height="15" fill="rgb(230,59,30)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1183.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="10.6250%" y="1157" width="0.6250%" height="15" fill="rgb(209,121,21)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1167.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="10.6250%" y="1141" width="0.6250%" height="15" fill="rgb(220,109,13)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1151.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.62%)</title><rect x="10.6250%" y="1125" width="0.6250%" height="15" fill="rgb(232,18,1)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1135.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.62%)</title><rect x="10.6250%" y="1109" width="0.6250%" height="15" fill="rgb(215,41,42)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1119.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.62%)</title><rect x="10.6250%" y="1093" width="0.6250%" height="15" fill="rgb(224,123,36)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1103.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.62%)</title><rect x="10.6250%" y="1077" width="0.6250%" height="15" fill="rgb(240,125,3)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1087.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.62%)</title><rect x="10.6250%" y="1061" width="0.6250%" height="15" fill="rgb(205,98,50)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1071.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::finish_grow (1 samples, 0.62%)</title><rect x="10.6250%" y="1045" width="0.6250%" height="15" fill="rgb(205,185,37)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.62%)</title><rect x="10.6250%" y="1029" width="0.6250%" height="15" fill="rgb(238,207,15)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1039.50"></text></g><g><title>local_file_transfer`alloc::alloc::Global::grow_impl (1 samples, 0.62%)</title><rect x="10.6250%" y="1013" width="0.6250%" height="15" fill="rgb(213,199,42)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.62%)</title><rect x="10.6250%" y="997" width="0.6250%" height="15" fill="rgb(235,201,11)" fg:x="17" fg:w="1"/><text x="10.8750%" y="1007.50"></text></g><g><title>local_file_transfer`futures_executor::local_pool::block_on (8 samples, 5.00%)</title><rect x="6.8750%" y="1349" width="5.0000%" height="15" fill="rgb(207,46,11)" fg:x="11" fg:w="8"/><text x="7.1250%" y="1359.50">local_..</text></g><g><title>local_file_transfer`futures_executor::local_pool::run_executor (7 samples, 4.38%)</title><rect x="7.5000%" y="1333" width="4.3750%" height="15" fill="rgb(241,35,35)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1343.50">local..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 4.38%)</title><rect x="7.5000%" y="1317" width="4.3750%" height="15" fill="rgb(243,32,47)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1327.50">local..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 4.38%)</title><rect x="7.5000%" y="1301" width="4.3750%" height="15" fill="rgb(247,202,23)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1311.50">local..</text></g><g><title>local_file_transfer`futures_executor::local_pool::run_executor::_{{closure}} (7 samples, 4.38%)</title><rect x="7.5000%" y="1285" width="4.3750%" height="15" fill="rgb(219,102,11)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1295.50">local..</text></g><g><title>local_file_transfer`futures_executor::local_pool::block_on::_{{closure}} (7 samples, 4.38%)</title><rect x="7.5000%" y="1269" width="4.3750%" height="15" fill="rgb(243,110,44)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1279.50">local..</text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 4.38%)</title><rect x="7.5000%" y="1253" width="4.3750%" height="15" fill="rgb(222,74,54)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1263.50">local..</text></g><g><title>local_file_transfer`&lt;opentelemetry_jaeger::exporter::Exporter as opentelemetry::sdk::export::trace::SpanExporter&gt;::export::_{{closure}} (7 samples, 4.38%)</title><rect x="7.5000%" y="1237" width="4.3750%" height="15" fill="rgb(216,99,12)" fg:x="12" fg:w="7"/><text x="7.7500%" y="1247.50">local..</text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::convert_otel_span_into_jaeger_span (2 samples, 1.25%)</title><rect x="10.6250%" y="1221" width="1.2500%" height="15" fill="rgb(226,22,26)" fg:x="17" fg:w="2"/><text x="10.8750%" y="1231.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::events_to_logs (1 samples, 0.62%)</title><rect x="11.2500%" y="1205" width="0.6250%" height="15" fill="rgb(217,163,10)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1215.50"></text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::collect (1 samples, 0.62%)</title><rect x="11.2500%" y="1189" width="0.6250%" height="15" fill="rgb(213,25,53)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1199.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="11.2500%" y="1173" width="0.6250%" height="15" fill="rgb(252,105,26)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1183.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="11.2500%" y="1157" width="0.6250%" height="15" fill="rgb(220,39,43)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1167.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.62%)</title><rect x="11.2500%" y="1141" width="0.6250%" height="15" fill="rgb(229,68,48)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1151.50"></text></g><g><title>local_file_transfer`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.62%)</title><rect x="11.2500%" y="1125" width="0.6250%" height="15" fill="rgb(252,8,32)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1135.50"></text></g><g><title>local_file_transfer`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.62%)</title><rect x="11.2500%" y="1109" width="0.6250%" height="15" fill="rgb(223,20,43)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1119.50"></text></g><g><title>local_file_transfer`core::ops::function::FnMut::call_mut (1 samples, 0.62%)</title><rect x="11.2500%" y="1093" width="0.6250%" height="15" fill="rgb(229,81,49)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1103.50"></text></g><g><title>local_file_transfer`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.62%)</title><rect x="11.2500%" y="1077" width="0.6250%" height="15" fill="rgb(236,28,36)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1087.50"></text></g><g><title>local_file_transfer`opentelemetry_jaeger::exporter::thrift::_&lt;impl core::convert::From&lt;opentelemetry::trace::Event&gt; for opentelemetry_jaeger::exporter::thrift::jaeger::Log&gt;::from (1 samples, 0.62%)</title><rect x="11.2500%" y="1061" width="0.6250%" height="15" fill="rgb(249,185,26)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1071.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.62%)</title><rect x="11.2500%" y="1045" width="0.6250%" height="15" fill="rgb(249,174,33)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1055.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.62%)</title><rect x="11.2500%" y="1029" width="0.6250%" height="15" fill="rgb(233,201,37)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1039.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.62%)</title><rect x="11.2500%" y="1013" width="0.6250%" height="15" fill="rgb(221,78,26)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1023.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::finish_grow (1 samples, 0.62%)</title><rect x="11.2500%" y="997" width="0.6250%" height="15" fill="rgb(250,127,30)" fg:x="18" fg:w="1"/><text x="11.5000%" y="1007.50"></text></g><g><title>local_file_transfer`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.62%)</title><rect x="11.2500%" y="981" width="0.6250%" height="15" fill="rgb(230,49,44)" fg:x="18" fg:w="1"/><text x="11.5000%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.62%)</title><rect x="11.2500%" y="965" width="0.6250%" height="15" fill="rgb(229,67,23)" fg:x="18" fg:w="1"/><text x="11.5000%" y="975.50"></text></g><g><title>local_file_transfer`opentelemetry::global::error_handler::handle_error (1 samples, 0.62%)</title><rect x="11.8750%" y="1349" width="0.6250%" height="15" fill="rgb(249,83,47)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1359.50"></text></g><g><title>local_file_transfer`std::io::stdio::_eprint (1 samples, 0.62%)</title><rect x="11.8750%" y="1333" width="0.6250%" height="15" fill="rgb(215,43,3)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1343.50"></text></g><g><title>local_file_transfer`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.62%)</title><rect x="11.8750%" y="1317" width="0.6250%" height="15" fill="rgb(238,154,13)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1327.50"></text></g><g><title>local_file_transfer`core::fmt::write (1 samples, 0.62%)</title><rect x="11.8750%" y="1301" width="0.6250%" height="15" fill="rgb(219,56,2)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1311.50"></text></g><g><title>local_file_transfer`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.62%)</title><rect x="11.8750%" y="1285" width="0.6250%" height="15" fill="rgb(233,0,4)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1295.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.62%)</title><rect x="11.8750%" y="1269" width="0.6250%" height="15" fill="rgb(235,30,7)" fg:x="19" fg:w="1"/><text x="12.1250%" y="1279.50"></text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::span_processor::SimpleSpanProcessor::new::_{{closure}} (10 samples, 6.25%)</title><rect x="6.8750%" y="1365" width="6.2500%" height="15" fill="rgb(250,79,13)" fg:x="11" fg:w="10"/><text x="7.1250%" y="1375.50">local_fi..</text></g><g><title>local_file_transfer`std::io::stdio::_eprint (1 samples, 0.62%)</title><rect x="12.5000%" y="1349" width="0.6250%" height="15" fill="rgb(211,146,34)" fg:x="20" fg:w="1"/><text x="12.7500%" y="1359.50"></text></g><g><title>local_file_transfer`tokio::fs::write::write::_{{closure}}::_{{closure}} (1 samples, 0.62%)</title><rect x="13.1250%" y="1077" width="0.6250%" height="15" fill="rgb(228,22,38)" fg:x="21" fg:w="1"/><text x="13.3750%" y="1087.50"></text></g><g><title>local_file_transfer`std::fs::write (1 samples, 0.62%)</title><rect x="13.1250%" y="1061" width="0.6250%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="1"/><text x="13.3750%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.62%)</title><rect x="13.1250%" y="1045" width="0.6250%" height="15" fill="rgb(221,155,16)" fg:x="21" fg:w="1"/><text x="13.3750%" y="1055.50"></text></g><g><title>local_file_transfer`&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (1 samples, 0.62%)</title><rect x="13.7500%" y="837" width="0.6250%" height="15" fill="rgb(215,215,53)" fg:x="22" fg:w="1"/><text x="14.0000%" y="847.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (1 samples, 0.62%)</title><rect x="14.3750%" y="837" width="0.6250%" height="15" fill="rgb(223,4,10)" fg:x="23" fg:w="1"/><text x="14.6250%" y="847.50"></text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Condvar::wait (1 samples, 0.62%)</title><rect x="14.3750%" y="821" width="0.6250%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="1"/><text x="14.6250%" y="831.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::wait (1 samples, 0.62%)</title><rect x="14.3750%" y="805" width="0.6250%" height="15" fill="rgb(227,97,0)" fg:x="23" fg:w="1"/><text x="14.6250%" y="815.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.62%)</title><rect x="14.3750%" y="789" width="0.6250%" height="15" fill="rgb(234,150,53)" fg:x="23" fg:w="1"/><text x="14.6250%" y="799.50"></text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::park (1 samples, 0.62%)</title><rect x="14.3750%" y="773" width="0.6250%" height="15" fill="rgb(228,201,54)" fg:x="23" fg:w="1"/><text x="14.6250%" y="783.50"></text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::park::_{{closure}} (1 samples, 0.62%)</title><rect x="14.3750%" y="757" width="0.6250%" height="15" fill="rgb(222,22,37)" fg:x="23" fg:w="1"/><text x="14.6250%" y="767.50"></text></g><g><title>local_file_transfer`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.62%)</title><rect x="14.3750%" y="741" width="0.6250%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="1"/><text x="14.6250%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.62%)</title><rect x="14.3750%" y="725" width="0.6250%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="1"/><text x="14.6250%" y="735.50"></text></g><g><title>local_file_transfer`tokio::process::imp::GlobalOrphanQueue::reap_orphans (1 samples, 0.62%)</title><rect x="15.0000%" y="709" width="0.6250%" height="15" fill="rgb(210,40,34)" fg:x="24" fg:w="1"/><text x="15.2500%" y="719.50"></text></g><g><title>local_file_transfer`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.62%)</title><rect x="15.0000%" y="693" width="0.6250%" height="15" fill="rgb(241,220,44)" fg:x="24" fg:w="1"/><text x="15.2500%" y="703.50"></text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (1 samples, 0.62%)</title><rect x="15.0000%" y="677" width="0.6250%" height="15" fill="rgb(235,28,35)" fg:x="24" fg:w="1"/><text x="15.2500%" y="687.50"></text></g><g><title>local_file_transfer`lock_api::mutex::Mutex&lt;R,T&gt;::make_guard_unchecked (1 samples, 0.62%)</title><rect x="15.0000%" y="661" width="0.6250%" height="15" fill="rgb(210,56,17)" fg:x="24" fg:w="1"/><text x="15.2500%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.62%)</title><rect x="16.2500%" y="645" width="0.6250%" height="15" fill="rgb(224,130,29)" fg:x="26" fg:w="1"/><text x="16.5000%" y="655.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park_thread_timeout (4 samples, 2.50%)</title><rect x="15.0000%" y="757" width="2.5000%" height="15" fill="rgb(235,212,8)" fg:x="24" fg:w="4"/><text x="15.2500%" y="767.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::driver::IoStack::park_timeout (4 samples, 2.50%)</title><rect x="15.0000%" y="741" width="2.5000%" height="15" fill="rgb(223,33,50)" fg:x="24" fg:w="4"/><text x="15.2500%" y="751.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::process::Driver::park_timeout (4 samples, 2.50%)</title><rect x="15.0000%" y="725" width="2.5000%" height="15" fill="rgb(219,149,13)" fg:x="24" fg:w="4"/><text x="15.2500%" y="735.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::signal::Driver::park_timeout (3 samples, 1.88%)</title><rect x="15.6250%" y="709" width="1.8750%" height="15" fill="rgb(250,156,29)" fg:x="25" fg:w="3"/><text x="15.8750%" y="719.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Driver::park_timeout (3 samples, 1.88%)</title><rect x="15.6250%" y="693" width="1.8750%" height="15" fill="rgb(216,193,19)" fg:x="25" fg:w="3"/><text x="15.8750%" y="703.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Driver::turn (3 samples, 1.88%)</title><rect x="15.6250%" y="677" width="1.8750%" height="15" fill="rgb(216,135,14)" fg:x="25" fg:w="3"/><text x="15.8750%" y="687.50">l..</text></g><g><title>local_file_transfer`mio::poll::Poll::poll (3 samples, 1.88%)</title><rect x="15.6250%" y="661" width="1.8750%" height="15" fill="rgb(241,47,5)" fg:x="25" fg:w="3"/><text x="15.8750%" y="671.50">l..</text></g><g><title>local_file_transfer`mio::sys::unix::selector::kqueue::Selector::select (1 samples, 0.62%)</title><rect x="16.8750%" y="645" width="0.6250%" height="15" fill="rgb(233,42,35)" fg:x="27" fg:w="1"/><text x="17.1250%" y="655.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.62%)</title><rect x="16.8750%" y="629" width="0.6250%" height="15" fill="rgb(231,13,6)" fg:x="27" fg:w="1"/><text x="17.1250%" y="639.50"></text></g><g><title>local_file_transfer`mio::sys::unix::selector::kqueue::Selector::select::_{{closure}} (1 samples, 0.62%)</title><rect x="16.8750%" y="613" width="0.6250%" height="15" fill="rgb(207,181,40)" fg:x="27" fg:w="1"/><text x="17.1250%" y="623.50"></text></g><g><title>local_file_transfer`core::cmp::min (1 samples, 0.62%)</title><rect x="16.8750%" y="597" width="0.6250%" height="15" fill="rgb(254,173,49)" fg:x="27" fg:w="1"/><text x="17.1250%" y="607.50"></text></g><g><title>local_file_transfer`core::cmp::Ord::min (1 samples, 0.62%)</title><rect x="16.8750%" y="581" width="0.6250%" height="15" fill="rgb(221,1,38)" fg:x="27" fg:w="1"/><text x="17.1250%" y="591.50"></text></g><g><title>local_file_transfer`core::cmp::min_by (1 samples, 0.62%)</title><rect x="16.8750%" y="565" width="0.6250%" height="15" fill="rgb(206,124,46)" fg:x="27" fg:w="1"/><text x="17.1250%" y="575.50"></text></g><g><title>local_file_transfer`core::cmp::impls::_&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.62%)</title><rect x="16.8750%" y="549" width="0.6250%" height="15" fill="rgb(249,21,11)" fg:x="27" fg:w="1"/><text x="17.1250%" y="559.50"></text></g><g><title>local_file_transfer`tokio::runtime::park::Inner::from_raw (1 samples, 0.62%)</title><rect x="17.5000%" y="693" width="0.6250%" height="15" fill="rgb(222,201,40)" fg:x="28" fg:w="1"/><text x="17.7500%" y="703.50"></text></g><g><title>local_file_transfer`alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.62%)</title><rect x="17.5000%" y="677" width="0.6250%" height="15" fill="rgb(235,61,29)" fg:x="28" fg:w="1"/><text x="17.7500%" y="687.50"></text></g><g><title>local_file_transfer`alloc::sync::data_offset (1 samples, 0.62%)</title><rect x="17.5000%" y="661" width="0.6250%" height="15" fill="rgb(219,207,3)" fg:x="28" fg:w="1"/><text x="17.7500%" y="671.50"></text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one (1 samples, 0.62%)</title><rect x="18.1250%" y="677" width="0.6250%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="1"/><text x="18.3750%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.62%)</title><rect x="18.7500%" y="597" width="0.6250%" height="15" fill="rgb(239,76,54)" fg:x="30" fg:w="1"/><text x="19.0000%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.62%)</title><rect x="19.3750%" y="597" width="0.6250%" height="15" fill="rgb(231,124,27)" fg:x="31" fg:w="1"/><text x="19.6250%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.62%)</title><rect x="19.3750%" y="581" width="0.6250%" height="15" fill="rgb(249,195,6)" fg:x="31" fg:w="1"/><text x="19.6250%" y="591.50"></text></g><g><title>local_file_transfer`core::task::wake::Waker::wake (5 samples, 3.12%)</title><rect x="17.5000%" y="725" width="3.1250%" height="15" fill="rgb(237,174,47)" fg:x="28" fg:w="5"/><text x="17.7500%" y="735.50">loc..</text></g><g><title>local_file_transfer`tokio::runtime::park::wake (5 samples, 3.12%)</title><rect x="17.5000%" y="709" width="3.1250%" height="15" fill="rgb(206,201,31)" fg:x="28" fg:w="5"/><text x="17.7500%" y="719.50">loc..</text></g><g><title>local_file_transfer`tokio::runtime::park::Inner::unpark (4 samples, 2.50%)</title><rect x="18.1250%" y="693" width="2.5000%" height="15" fill="rgb(231,57,52)" fg:x="29" fg:w="4"/><text x="18.3750%" y="703.50">lo..</text></g><g><title>local_file_transfer`tokio::loom::std::parking_lot::Condvar::notify_one (3 samples, 1.88%)</title><rect x="18.7500%" y="677" width="1.8750%" height="15" fill="rgb(248,177,22)" fg:x="30" fg:w="3"/><text x="19.0000%" y="687.50">l..</text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one (3 samples, 1.88%)</title><rect x="18.7500%" y="661" width="1.8750%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="3"/><text x="19.0000%" y="671.50">l..</text></g><g><title>local_file_transfer`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 1.88%)</title><rect x="18.7500%" y="645" width="1.8750%" height="15" fill="rgb(241,128,51)" fg:x="30" fg:w="3"/><text x="19.0000%" y="655.50">l..</text></g><g><title>local_file_transfer`parking_lot_core::parking_lot::unpark_requeue (3 samples, 1.88%)</title><rect x="18.7500%" y="629" width="1.8750%" height="15" fill="rgb(227,165,31)" fg:x="30" fg:w="3"/><text x="19.0000%" y="639.50">l..</text></g><g><title>local_file_transfer`&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 1.88%)</title><rect x="18.7500%" y="613" width="1.8750%" height="15" fill="rgb(228,167,24)" fg:x="30" fg:w="3"/><text x="19.0000%" y="623.50">l..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.62%)</title><rect x="20.0000%" y="597" width="0.6250%" height="15" fill="rgb(228,143,12)" fg:x="32" fg:w="1"/><text x="20.2500%" y="607.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerHandle::fire (1 samples, 0.62%)</title><rect x="20.6250%" y="725" width="0.6250%" height="15" fill="rgb(249,149,8)" fg:x="33" fg:w="1"/><text x="20.8750%" y="735.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::StateCell::fire (1 samples, 0.62%)</title><rect x="20.6250%" y="709" width="0.6250%" height="15" fill="rgb(243,35,44)" fg:x="33" fg:w="1"/><text x="20.8750%" y="719.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerHandle::mark_pending (1 samples, 0.62%)</title><rect x="21.2500%" y="693" width="0.6250%" height="15" fill="rgb(246,89,9)" fg:x="34" fg:w="1"/><text x="21.5000%" y="703.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::StateCell::mark_pending (1 samples, 0.62%)</title><rect x="21.2500%" y="677" width="0.6250%" height="15" fill="rgb(233,213,13)" fg:x="34" fg:w="1"/><text x="21.5000%" y="687.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_compare_exchange (1 samples, 0.62%)</title><rect x="21.2500%" y="661" width="0.6250%" height="15" fill="rgb(233,141,41)" fg:x="34" fg:w="1"/><text x="21.5000%" y="671.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::park (14 samples, 8.75%)</title><rect x="13.7500%" y="901" width="8.7500%" height="15" fill="rgb(239,167,4)" fg:x="22" fg:w="14"/><text x="14.0000%" y="911.50">local_file_t..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (14 samples, 8.75%)</title><rect x="13.7500%" y="885" width="8.7500%" height="15" fill="rgb(209,217,16)" fg:x="22" fg:w="14"/><text x="14.0000%" y="895.50">local_file_t..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Parker::park (14 samples, 8.75%)</title><rect x="13.7500%" y="869" width="8.7500%" height="15" fill="rgb(219,88,35)" fg:x="22" fg:w="14"/><text x="14.0000%" y="879.50">local_file_t..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::park (14 samples, 8.75%)</title><rect x="13.7500%" y="853" width="8.7500%" height="15" fill="rgb(220,193,23)" fg:x="22" fg:w="14"/><text x="14.0000%" y="863.50">local_file_t..</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (12 samples, 7.50%)</title><rect x="15.0000%" y="837" width="7.5000%" height="15" fill="rgb(230,90,52)" fg:x="24" fg:w="12"/><text x="15.2500%" y="847.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::driver::Driver::park (12 samples, 7.50%)</title><rect x="15.0000%" y="821" width="7.5000%" height="15" fill="rgb(252,106,19)" fg:x="24" fg:w="12"/><text x="15.2500%" y="831.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::driver::TimeDriver::park (12 samples, 7.50%)</title><rect x="15.0000%" y="805" width="7.5000%" height="15" fill="rgb(206,74,20)" fg:x="24" fg:w="12"/><text x="15.2500%" y="815.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park (12 samples, 7.50%)</title><rect x="15.0000%" y="789" width="7.5000%" height="15" fill="rgb(230,138,44)" fg:x="24" fg:w="12"/><text x="15.2500%" y="799.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::Driver::park_internal (12 samples, 7.50%)</title><rect x="15.0000%" y="773" width="7.5000%" height="15" fill="rgb(235,182,43)" fg:x="24" fg:w="12"/><text x="15.2500%" y="783.50">local_file..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (8 samples, 5.00%)</title><rect x="17.5000%" y="757" width="5.0000%" height="15" fill="rgb(242,16,51)" fg:x="28" fg:w="8"/><text x="17.7500%" y="767.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (8 samples, 5.00%)</title><rect x="17.5000%" y="741" width="5.0000%" height="15" fill="rgb(248,9,4)" fg:x="28" fg:w="8"/><text x="17.7500%" y="751.50">local_..</text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::poll (2 samples, 1.25%)</title><rect x="21.2500%" y="725" width="1.2500%" height="15" fill="rgb(210,31,22)" fg:x="34" fg:w="2"/><text x="21.5000%" y="735.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::process_expiration (2 samples, 1.25%)</title><rect x="21.2500%" y="709" width="1.2500%" height="15" fill="rgb(239,54,39)" fg:x="34" fg:w="2"/><text x="21.5000%" y="719.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::take_entries (1 samples, 0.62%)</title><rect x="21.8750%" y="693" width="0.6250%" height="15" fill="rgb(230,99,41)" fg:x="35" fg:w="1"/><text x="22.1250%" y="703.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::level::Level::take_slot (1 samples, 0.62%)</title><rect x="21.8750%" y="677" width="0.6250%" height="15" fill="rgb(253,106,12)" fg:x="35" fg:w="1"/><text x="22.1250%" y="687.50"></text></g><g><title>local_file_transfer`&lt;tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt; as core::default::Default&gt;::default (1 samples, 0.62%)</title><rect x="21.8750%" y="661" width="0.6250%" height="15" fill="rgb(213,46,41)" fg:x="35" fg:w="1"/><text x="22.1250%" y="671.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.62%)</title><rect x="22.5000%" y="805" width="0.6250%" height="15" fill="rgb(215,133,35)" fg:x="36" fg:w="1"/><text x="22.7500%" y="815.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.62%)</title><rect x="22.5000%" y="789" width="0.6250%" height="15" fill="rgb(213,28,5)" fg:x="36" fg:w="1"/><text x="22.7500%" y="799.50"></text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once (1 samples, 0.62%)</title><rect x="22.5000%" y="773" width="0.6250%" height="15" fill="rgb(215,77,49)" fg:x="36" fg:w="1"/><text x="22.7500%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.62%)</title><rect x="23.1250%" y="629" width="0.6250%" height="15" fill="rgb(248,100,22)" fg:x="37" fg:w="1"/><text x="23.3750%" y="639.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.62%)</title><rect x="25.0000%" y="309" width="0.6250%" height="15" fill="rgb(208,67,9)" fg:x="40" fg:w="1"/><text x="25.2500%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 1.25%)</title><rect x="34.3750%" y="197" width="1.2500%" height="15" fill="rgb(219,133,21)" fg:x="55" fg:w="2"/><text x="34.6250%" y="207.50"></text></g><g><title>local_file_transfer`DYLD-STUB$$memcpy (1 samples, 0.62%)</title><rect x="35.6250%" y="197" width="0.6250%" height="15" fill="rgb(246,46,29)" fg:x="57" fg:w="1"/><text x="35.8750%" y="207.50"></text></g><g><title>local_file_transfer`core::slice::_&lt;impl [T]&gt;::copy_from_slice (2 samples, 1.25%)</title><rect x="36.2500%" y="197" width="1.2500%" height="15" fill="rgb(246,185,52)" fg:x="58" fg:w="2"/><text x="36.5000%" y="207.50"></text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u8 (12 samples, 7.50%)</title><rect x="31.8750%" y="245" width="7.5000%" height="15" fill="rgb(252,136,11)" fg:x="51" fg:w="12"/><text x="32.1250%" y="255.50">local_file..</text></g><g><title>local_file_transfer`bincode::de::Deserializer&lt;R,O&gt;::deserialize_byte (9 samples, 5.62%)</title><rect x="33.7500%" y="229" width="5.6250%" height="15" fill="rgb(219,138,53)" fg:x="54" fg:w="9"/><text x="34.0000%" y="239.50">local_f..</text></g><g><title>local_file_transfer`bincode::byteorder::ReadBytesExt::read_u8 (8 samples, 5.00%)</title><rect x="34.3750%" y="213" width="5.0000%" height="15" fill="rgb(211,51,23)" fg:x="55" fg:w="8"/><text x="34.6250%" y="223.50">local_..</text></g><g><title>local_file_transfer`core::slice::_&lt;impl [T]&gt;::split_at (3 samples, 1.88%)</title><rect x="37.5000%" y="197" width="1.8750%" height="15" fill="rgb(247,221,28)" fg:x="60" fg:w="3"/><text x="37.7500%" y="207.50">l..</text></g><g><title>local_file_transfer`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 15.00%)</title><rect x="25.6250%" y="293" width="15.0000%" height="15" fill="rgb(251,222,45)" fg:x="41" fg:w="24"/><text x="25.8750%" y="303.50">local_file_transfer`&lt;&lt;&amp;..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 9.38%)</title><rect x="31.2500%" y="277" width="9.3750%" height="15" fill="rgb(217,162,53)" fg:x="50" fg:w="15"/><text x="31.5000%" y="287.50">local_file_tr..</text></g><g><title>local_file_transfer`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (15 samples, 9.38%)</title><rect x="31.2500%" y="261" width="9.3750%" height="15" fill="rgb(229,93,14)" fg:x="50" fg:w="15"/><text x="31.5000%" y="271.50">local_file_tr..</text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 1.25%)</title><rect x="39.3750%" y="245" width="1.2500%" height="15" fill="rgb(209,67,49)" fg:x="63" fg:w="2"/><text x="39.6250%" y="255.50"></text></g><g><title>local_file_transfer`adrnaln::packet::Packet::from_bytes (31 samples, 19.38%)</title><rect x="23.7500%" y="565" width="19.3750%" height="15" fill="rgb(213,87,29)" fg:x="38" fg:w="31"/><text x="24.0000%" y="575.50">local_file_transfer`adrnaln::p..</text></g><g><title>local_file_transfer`bincode::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="549" width="19.3750%" height="15" fill="rgb(205,151,52)" fg:x="38" fg:w="31"/><text x="24.0000%" y="559.50">local_file_transfer`bincode::d..</text></g><g><title>local_file_transfer`bincode::internal::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="533" width="19.3750%" height="15" fill="rgb(253,215,39)" fg:x="38" fg:w="31"/><text x="24.0000%" y="543.50">local_file_transfer`bincode::i..</text></g><g><title>local_file_transfer`bincode::internal::deserialize_seed (31 samples, 19.38%)</title><rect x="23.7500%" y="517" width="19.3750%" height="15" fill="rgb(221,220,41)" fg:x="38" fg:w="31"/><text x="24.0000%" y="527.50">local_file_transfer`bincode::i..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="501" width="19.3750%" height="15" fill="rgb(218,133,21)" fg:x="38" fg:w="31"/><text x="24.0000%" y="511.50">local_file_transfer`&lt;core::mar..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::de::Deserialize for adrnaln::packet::Packet&gt;::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="485" width="19.3750%" height="15" fill="rgb(221,193,43)" fg:x="38" fg:w="31"/><text x="24.0000%" y="495.50">local_file_transfer`adrnaln::p..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (31 samples, 19.38%)</title><rect x="23.7500%" y="469" width="19.3750%" height="15" fill="rgb(240,128,52)" fg:x="38" fg:w="31"/><text x="24.0000%" y="479.50">local_file_transfer`&lt;&amp;mut binc..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (31 samples, 19.38%)</title><rect x="23.7500%" y="453" width="19.3750%" height="15" fill="rgb(253,114,12)" fg:x="38" fg:w="31"/><text x="24.0000%" y="463.50">local_file_transfer`&lt;&amp;mut binc..</text></g><g><title>local_file_transfer`&lt;adrnaln::packet::_::&lt;impl serde::de::Deserialize for adrnaln::packet::Packet&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (31 samples, 19.38%)</title><rect x="23.7500%" y="437" width="19.3750%" height="15" fill="rgb(215,223,47)" fg:x="38" fg:w="31"/><text x="24.0000%" y="447.50">local_file_transfer`&lt;adrnaln::..</text></g><g><title>local_file_transfer`serde::de::SeqAccess::next_element (31 samples, 19.38%)</title><rect x="23.7500%" y="421" width="19.3750%" height="15" fill="rgb(248,225,23)" fg:x="38" fg:w="31"/><text x="24.0000%" y="431.50">local_file_transfer`serde::de:..</text></g><g><title>local_file_transfer`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 19.38%)</title><rect x="23.7500%" y="405" width="19.3750%" height="15" fill="rgb(250,108,0)" fg:x="38" fg:w="31"/><text x="24.0000%" y="415.50">local_file_transfer`&lt;&lt;&amp;mut bin..</text></g><g><title>local_file_transfer`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="389" width="19.3750%" height="15" fill="rgb(228,208,7)" fg:x="38" fg:w="31"/><text x="24.0000%" y="399.50">local_file_transfer`&lt;core::mar..</text></g><g><title>local_file_transfer`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (31 samples, 19.38%)</title><rect x="23.7500%" y="373" width="19.3750%" height="15" fill="rgb(244,45,10)" fg:x="38" fg:w="31"/><text x="24.0000%" y="383.50">local_file_transfer`serde::de:..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (31 samples, 19.38%)</title><rect x="23.7500%" y="357" width="19.3750%" height="15" fill="rgb(207,125,25)" fg:x="38" fg:w="31"/><text x="24.0000%" y="367.50">local_file_transfer`&lt;&amp;mut binc..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (31 samples, 19.38%)</title><rect x="23.7500%" y="341" width="19.3750%" height="15" fill="rgb(210,195,18)" fg:x="38" fg:w="31"/><text x="24.0000%" y="351.50">local_file_transfer`&lt;&amp;mut binc..</text></g><g><title>local_file_transfer`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (31 samples, 19.38%)</title><rect x="23.7500%" y="325" width="19.3750%" height="15" fill="rgb(249,80,12)" fg:x="38" fg:w="31"/><text x="24.0000%" y="335.50">local_file_transfer`&lt;serde::de..</text></g><g><title>local_file_transfer`serde::de::SeqAccess::next_element (28 samples, 17.50%)</title><rect x="25.6250%" y="309" width="17.5000%" height="15" fill="rgb(221,65,9)" fg:x="41" fg:w="28"/><text x="25.8750%" y="319.50">local_file_transfer`serde::..</text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 2.50%)</title><rect x="40.6250%" y="293" width="2.5000%" height="15" fill="rgb(235,49,36)" fg:x="65" fg:w="4"/><text x="40.8750%" y="303.50">lo..</text></g><g><title>local_file_transfer`&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (15 samples, 9.38%)</title><rect x="43.1250%" y="405" width="9.3750%" height="15" fill="rgb(225,32,20)" fg:x="69" fg:w="15"/><text x="43.3750%" y="415.50">local_file_tr..</text></g><g><title>local_file_transfer`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (15 samples, 9.38%)</title><rect x="43.1250%" y="389" width="9.3750%" height="15" fill="rgb(215,141,46)" fg:x="69" fg:w="15"/><text x="43.3750%" y="399.50">local_file_tr..</text></g><g><title>local_file_transfer`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (15 samples, 9.38%)</title><rect x="43.1250%" y="373" width="9.3750%" height="15" fill="rgb(250,160,47)" fg:x="69" fg:w="15"/><text x="43.3750%" y="383.50">local_file_tr..</text></g><g><title>libsystem_kernel.dylib`write (15 samples, 9.38%)</title><rect x="43.1250%" y="357" width="9.3750%" height="15" fill="rgb(216,222,40)" fg:x="69" fg:w="15"/><text x="43.3750%" y="367.50">libsystem_ker..</text></g><g><title>local_file_transfer`&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.62%)</title><rect x="52.5000%" y="405" width="0.6250%" height="15" fill="rgb(234,217,39)" fg:x="84" fg:w="1"/><text x="52.7500%" y="415.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (17 samples, 10.62%)</title><rect x="43.1250%" y="469" width="10.6250%" height="15" fill="rgb(207,178,40)" fg:x="69" fg:w="17"/><text x="43.3750%" y="479.50">local_file_trans..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 10.62%)</title><rect x="43.1250%" y="453" width="10.6250%" height="15" fill="rgb(221,136,13)" fg:x="69" fg:w="17"/><text x="43.3750%" y="463.50">local_file_trans..</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 10.62%)</title><rect x="43.1250%" y="437" width="10.6250%" height="15" fill="rgb(249,199,10)" fg:x="69" fg:w="17"/><text x="43.3750%" y="447.50">local_file_trans..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (17 samples, 10.62%)</title><rect x="43.1250%" y="421" width="10.6250%" height="15" fill="rgb(249,222,13)" fg:x="69" fg:w="17"/><text x="43.3750%" y="431.50">local_file_trans..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (1 samples, 0.62%)</title><rect x="53.1250%" y="405" width="0.6250%" height="15" fill="rgb(244,185,38)" fg:x="85" fg:w="1"/><text x="53.3750%" y="415.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt; as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.62%)</title><rect x="53.1250%" y="389" width="0.6250%" height="15" fill="rgb(236,202,9)" fg:x="85" fg:w="1"/><text x="53.3750%" y="399.50"></text></g><g><title>local_file_transfer`&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.62%)</title><rect x="53.1250%" y="373" width="0.6250%" height="15" fill="rgb(250,229,37)" fg:x="85" fg:w="1"/><text x="53.3750%" y="383.50"></text></g><g><title>local_file_transfer`&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.62%)</title><rect x="53.1250%" y="357" width="0.6250%" height="15" fill="rgb(206,174,23)" fg:x="85" fg:w="1"/><text x="53.3750%" y="367.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.62%)</title><rect x="53.1250%" y="341" width="0.6250%" height="15" fill="rgb(211,33,43)" fg:x="85" fg:w="1"/><text x="53.3750%" y="351.50"></text></g><g><title>local_file_transfer`tracing_core::event::Event::record (1 samples, 0.62%)</title><rect x="53.1250%" y="325" width="0.6250%" height="15" fill="rgb(245,58,50)" fg:x="85" fg:w="1"/><text x="53.3750%" y="335.50"></text></g><g><title>local_file_transfer`tracing_core::field::ValueSet::record (1 samples, 0.62%)</title><rect x="53.1250%" y="309" width="0.6250%" height="15" fill="rgb(244,68,36)" fg:x="85" fg:w="1"/><text x="53.3750%" y="319.50"></text></g><g><title>local_file_transfer`&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.62%)</title><rect x="53.1250%" y="293" width="0.6250%" height="15" fill="rgb(232,229,15)" fg:x="85" fg:w="1"/><text x="53.3750%" y="303.50"></text></g><g><title>local_file_transfer`&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (1 samples, 0.62%)</title><rect x="53.1250%" y="277" width="0.6250%" height="15" fill="rgb(254,30,23)" fg:x="85" fg:w="1"/><text x="53.3750%" y="287.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.62%)</title><rect x="53.1250%" y="261" width="0.6250%" height="15" fill="rgb(235,160,14)" fg:x="85" fg:w="1"/><text x="53.3750%" y="271.50"></text></g><g><title>local_file_transfer`tracing_subscriber::fmt::format::Writer::write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="245" width="0.6250%" height="15" fill="rgb(212,155,44)" fg:x="85" fg:w="1"/><text x="53.3750%" y="255.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="229" width="0.6250%" height="15" fill="rgb(226,2,50)" fg:x="85" fg:w="1"/><text x="53.3750%" y="239.50"></text></g><g><title>local_file_transfer`tracing_subscriber::fmt::format::Writer::write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="213" width="0.6250%" height="15" fill="rgb(234,177,6)" fg:x="85" fg:w="1"/><text x="53.3750%" y="223.50"></text></g><g><title>local_file_transfer`&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="197" width="0.6250%" height="15" fill="rgb(217,24,9)" fg:x="85" fg:w="1"/><text x="53.3750%" y="207.50"></text></g><g><title>local_file_transfer`core::fmt::Write::write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="181" width="0.6250%" height="15" fill="rgb(220,13,46)" fg:x="85" fg:w="1"/><text x="53.3750%" y="191.50"></text></g><g><title>local_file_transfer`&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="165" width="0.6250%" height="15" fill="rgb(239,221,27)" fg:x="85" fg:w="1"/><text x="53.3750%" y="175.50"></text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.62%)</title><rect x="53.1250%" y="149" width="0.6250%" height="15" fill="rgb(222,198,25)" fg:x="85" fg:w="1"/><text x="53.3750%" y="159.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}}::_{{closure}}::_{{closure}} (19 samples, 11.88%)</title><rect x="43.1250%" y="565" width="11.8750%" height="15" fill="rgb(211,99,13)" fg:x="69" fg:w="19"/><text x="43.3750%" y="575.50">local_file_transfe..</text></g><g><title>local_file_transfer`tracing_core::event::Event::dispatch (19 samples, 11.88%)</title><rect x="43.1250%" y="549" width="11.8750%" height="15" fill="rgb(232,111,31)" fg:x="69" fg:w="19"/><text x="43.3750%" y="559.50">local_file_transfe..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (19 samples, 11.88%)</title><rect x="43.1250%" y="533" width="11.8750%" height="15" fill="rgb(245,82,37)" fg:x="69" fg:w="19"/><text x="43.3750%" y="543.50">local_file_transfe..</text></g><g><title>local_file_transfer`tracing_core::event::Event::dispatch::_{{closure}} (19 samples, 11.88%)</title><rect x="43.1250%" y="517" width="11.8750%" height="15" fill="rgb(227,149,46)" fg:x="69" fg:w="19"/><text x="43.3750%" y="527.50">local_file_transfe..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::event (19 samples, 11.88%)</title><rect x="43.1250%" y="501" width="11.8750%" height="15" fill="rgb(218,36,50)" fg:x="69" fg:w="19"/><text x="43.3750%" y="511.50">local_file_transfe..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (19 samples, 11.88%)</title><rect x="43.1250%" y="485" width="11.8750%" height="15" fill="rgb(226,80,48)" fg:x="69" fg:w="19"/><text x="43.3750%" y="495.50">local_file_transfe..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (2 samples, 1.25%)</title><rect x="53.7500%" y="469" width="1.2500%" height="15" fill="rgb(238,224,15)" fg:x="86" fg:w="2"/><text x="54.0000%" y="479.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2 samples, 1.25%)</title><rect x="53.7500%" y="453" width="1.2500%" height="15" fill="rgb(241,136,10)" fg:x="86" fg:w="2"/><text x="54.0000%" y="463.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.62%)</title><rect x="54.3750%" y="437" width="0.6250%" height="15" fill="rgb(208,32,45)" fg:x="87" fg:w="1"/><text x="54.6250%" y="447.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::is_log (1 samples, 0.62%)</title><rect x="54.3750%" y="421" width="0.6250%" height="15" fill="rgb(207,135,9)" fg:x="87" fg:w="1"/><text x="54.6250%" y="431.50"></text></g><g><title>local_file_transfer`tracing_log::level_to_cs (1 samples, 0.62%)</title><rect x="54.3750%" y="405" width="0.6250%" height="15" fill="rgb(206,86,44)" fg:x="87" fg:w="1"/><text x="54.6250%" y="415.50"></text></g><g><title>local_file_transfer`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.62%)</title><rect x="54.3750%" y="389" width="0.6250%" height="15" fill="rgb(245,177,15)" fg:x="87" fg:w="1"/><text x="54.6250%" y="399.50"></text></g><g><title>local_file_transfer`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.62%)</title><rect x="54.3750%" y="373" width="0.6250%" height="15" fill="rgb(206,64,50)" fg:x="87" fg:w="1"/><text x="54.6250%" y="383.50"></text></g><g><title>local_file_transfer`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.62%)</title><rect x="54.3750%" y="357" width="0.6250%" height="15" fill="rgb(234,36,40)" fg:x="87" fg:w="1"/><text x="54.6250%" y="367.50"></text></g><g><title>local_file_transfer`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.62%)</title><rect x="54.3750%" y="341" width="0.6250%" height="15" fill="rgb(213,64,8)" fg:x="87" fg:w="1"/><text x="54.6250%" y="351.50"></text></g><g><title>local_file_transfer`once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.62%)</title><rect x="54.3750%" y="325" width="0.6250%" height="15" fill="rgb(210,75,36)" fg:x="87" fg:w="1"/><text x="54.6250%" y="335.50"></text></g><g><title>local_file_transfer`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (1 samples, 0.62%)</title><rect x="54.3750%" y="309" width="0.6250%" height="15" fill="rgb(229,88,21)" fg:x="87" fg:w="1"/><text x="54.6250%" y="319.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::unwrap_unchecked (1 samples, 0.62%)</title><rect x="54.3750%" y="293" width="0.6250%" height="15" fill="rgb(252,204,47)" fg:x="87" fg:w="1"/><text x="54.6250%" y="303.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (1 samples, 0.62%)</title><rect x="55.0000%" y="549" width="0.6250%" height="15" fill="rgb(208,77,27)" fg:x="88" fg:w="1"/><text x="55.2500%" y="559.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (1 samples, 0.62%)</title><rect x="55.0000%" y="533" width="0.6250%" height="15" fill="rgb(221,76,26)" fg:x="88" fg:w="1"/><text x="55.2500%" y="543.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (1 samples, 0.62%)</title><rect x="55.0000%" y="517" width="0.6250%" height="15" fill="rgb(225,139,18)" fg:x="88" fg:w="1"/><text x="55.2500%" y="527.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.62%)</title><rect x="55.0000%" y="501" width="0.6250%" height="15" fill="rgb(230,137,11)" fg:x="88" fg:w="1"/><text x="55.2500%" y="511.50"></text></g><g><title>local_file_transfer`core::task::wake::Waker::wake (1 samples, 0.62%)</title><rect x="55.0000%" y="485" width="0.6250%" height="15" fill="rgb(212,28,1)" fg:x="88" fg:w="1"/><text x="55.2500%" y="495.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::waker::wake_by_val (1 samples, 0.62%)</title><rect x="55.0000%" y="469" width="0.6250%" height="15" fill="rgb(248,164,17)" fg:x="88" fg:w="1"/><text x="55.2500%" y="479.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::harness::_&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.62%)</title><rect x="55.0000%" y="453" width="0.6250%" height="15" fill="rgb(222,171,42)" fg:x="88" fg:w="1"/><text x="55.2500%" y="463.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.62%)</title><rect x="55.0000%" y="437" width="0.6250%" height="15" fill="rgb(243,84,45)" fg:x="88" fg:w="1"/><text x="55.2500%" y="447.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::raw::schedule (1 samples, 0.62%)</title><rect x="55.0000%" y="421" width="0.6250%" height="15" fill="rgb(252,49,23)" fg:x="88" fg:w="1"/><text x="55.2500%" y="431.50"></text></g><g><title>local_file_transfer`tokio::runtime::task::Task&lt;S&gt;::new (1 samples, 0.62%)</title><rect x="55.0000%" y="405" width="0.6250%" height="15" fill="rgb(215,19,7)" fg:x="88" fg:w="1"/><text x="55.2500%" y="415.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}}::_{{closure}} (52 samples, 32.50%)</title><rect x="23.7500%" y="581" width="32.5000%" height="15" fill="rgb(238,81,41)" fg:x="38" fg:w="52"/><text x="24.0000%" y="591.50">local_file_transfer`adrnaln::server::Server::process_..</text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (2 samples, 1.25%)</title><rect x="55.0000%" y="565" width="1.2500%" height="15" fill="rgb(210,199,37)" fg:x="88" fg:w="2"/><text x="55.2500%" y="575.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::_{{closure}} (1 samples, 0.62%)</title><rect x="55.6250%" y="549" width="0.6250%" height="15" fill="rgb(244,192,49)" fg:x="89" fg:w="1"/><text x="55.8750%" y="559.50"></text></g><g><title>local_file_transfer`tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::_{{closure}} (1 samples, 0.62%)</title><rect x="55.6250%" y="533" width="0.6250%" height="15" fill="rgb(226,211,11)" fg:x="89" fg:w="1"/><text x="55.8750%" y="543.50"></text></g><g><title>local_file_transfer`tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.62%)</title><rect x="55.6250%" y="517" width="0.6250%" height="15" fill="rgb(236,162,54)" fg:x="89" fg:w="1"/><text x="55.8750%" y="527.50"></text></g><g><title>local_file_transfer`tokio::sync::batch_semaphore::Acquire::new (1 samples, 0.62%)</title><rect x="55.6250%" y="501" width="0.6250%" height="15" fill="rgb(220,229,9)" fg:x="89" fg:w="1"/><text x="55.8750%" y="511.50"></text></g><g><title>local_file_transfer`tokio::util::linked_list::Pointers&lt;T&gt;::new (1 samples, 0.62%)</title><rect x="55.6250%" y="485" width="0.6250%" height="15" fill="rgb(250,87,22)" fg:x="89" fg:w="1"/><text x="55.8750%" y="495.50"></text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 33.12%)</title><rect x="23.7500%" y="597" width="33.1250%" height="15" fill="rgb(239,43,17)" fg:x="38" fg:w="53"/><text x="24.0000%" y="607.50">local_file_transfer`&lt;tracing::instrument::Instrumented..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::enter (1 samples, 0.62%)</title><rect x="56.2500%" y="581" width="0.6250%" height="15" fill="rgb(231,177,25)" fg:x="90" fg:w="1"/><text x="56.5000%" y="591.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="56.2500%" y="565" width="0.6250%" height="15" fill="rgb(219,179,1)" fg:x="90" fg:w="1"/><text x="56.5000%" y="575.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="56.2500%" y="549" width="0.6250%" height="15" fill="rgb(238,219,53)" fg:x="90" fg:w="1"/><text x="56.5000%" y="559.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.62%)</title><rect x="56.2500%" y="533" width="0.6250%" height="15" fill="rgb(232,167,36)" fg:x="90" fg:w="1"/><text x="56.5000%" y="543.50"></text></g><g><title>local_file_transfer`tracing_subscriber::layer::context::Context&lt;S&gt;::span (1 samples, 0.62%)</title><rect x="56.2500%" y="517" width="0.6250%" height="15" fill="rgb(244,19,51)" fg:x="90" fg:w="1"/><text x="56.5000%" y="527.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::LookupSpan::span (1 samples, 0.62%)</title><rect x="56.2500%" y="501" width="0.6250%" height="15" fill="rgb(224,6,22)" fg:x="90" fg:w="1"/><text x="56.5000%" y="511.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.62%)</title><rect x="56.2500%" y="485" width="0.6250%" height="15" fill="rgb(224,145,5)" fg:x="90" fg:w="1"/><text x="56.5000%" y="495.50"></text></g><g><title>local_file_transfer`tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.62%)</title><rect x="56.2500%" y="469" width="0.6250%" height="15" fill="rgb(234,130,49)" fg:x="90" fg:w="1"/><text x="56.5000%" y="479.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.62%)</title><rect x="56.2500%" y="453" width="0.6250%" height="15" fill="rgb(254,6,2)" fg:x="90" fg:w="1"/><text x="56.5000%" y="463.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.62%)</title><rect x="56.2500%" y="437" width="0.6250%" height="15" fill="rgb(208,96,46)" fg:x="90" fg:w="1"/><text x="56.5000%" y="447.50"></text></g><g><title>local_file_transfer`sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (1 samples, 0.62%)</title><rect x="56.2500%" y="421" width="0.6250%" height="15" fill="rgb(239,3,39)" fg:x="90" fg:w="1"/><text x="56.5000%" y="431.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (1 samples, 0.62%)</title><rect x="56.2500%" y="405" width="0.6250%" height="15" fill="rgb(233,210,1)" fg:x="90" fg:w="1"/><text x="56.5000%" y="415.50"></text></g><g><title>local_file_transfer`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.62%)</title><rect x="56.2500%" y="389" width="0.6250%" height="15" fill="rgb(244,137,37)" fg:x="90" fg:w="1"/><text x="56.5000%" y="399.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_compare_exchange (1 samples, 0.62%)</title><rect x="56.2500%" y="373" width="0.6250%" height="15" fill="rgb(240,136,2)" fg:x="90" fg:w="1"/><text x="56.5000%" y="383.50"></text></g><g><title>local_file_transfer`&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.25%)</title><rect x="56.8750%" y="597" width="1.2500%" height="15" fill="rgb(239,18,37)" fg:x="91" fg:w="2"/><text x="57.1250%" y="607.50"></text></g><g><title>local_file_transfer`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.62%)</title><rect x="57.5000%" y="581" width="0.6250%" height="15" fill="rgb(218,185,22)" fg:x="92" fg:w="1"/><text x="57.7500%" y="591.50"></text></g><g><title>local_file_transfer`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.62%)</title><rect x="57.5000%" y="565" width="0.6250%" height="15" fill="rgb(225,218,4)" fg:x="92" fg:w="1"/><text x="57.7500%" y="575.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;adrnaln::server::Server::process_buffer::{{closure}}::{{closure}}&gt;&gt; (2 samples, 1.25%)</title><rect x="58.1250%" y="597" width="1.2500%" height="15" fill="rgb(230,182,32)" fg:x="93" fg:w="2"/><text x="58.3750%" y="607.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 1.25%)</title><rect x="58.1250%" y="581" width="1.2500%" height="15" fill="rgb(242,56,43)" fg:x="93" fg:w="2"/><text x="58.3750%" y="591.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::try_close (2 samples, 1.25%)</title><rect x="58.1250%" y="565" width="1.2500%" height="15" fill="rgb(233,99,24)" fg:x="93" fg:w="2"/><text x="58.3750%" y="575.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 1.25%)</title><rect x="58.1250%" y="549" width="1.2500%" height="15" fill="rgb(234,209,42)" fg:x="93" fg:w="2"/><text x="58.3750%" y="559.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 1.25%)</title><rect x="58.1250%" y="533" width="1.2500%" height="15" fill="rgb(227,7,12)" fg:x="93" fg:w="2"/><text x="58.3750%" y="543.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (2 samples, 1.25%)</title><rect x="58.1250%" y="517" width="1.2500%" height="15" fill="rgb(245,203,43)" fg:x="93" fg:w="2"/><text x="58.3750%" y="527.50"></text></g><g><title>local_file_transfer`opentelemetry::trace::tracer::SpanBuilder::start_with_context (2 samples, 1.25%)</title><rect x="58.1250%" y="501" width="1.2500%" height="15" fill="rgb(238,205,33)" fg:x="93" fg:w="2"/><text x="58.3750%" y="511.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as opentelemetry::trace::tracer::Tracer&gt;::build_with_context (2 samples, 1.25%)</title><rect x="58.1250%" y="485" width="1.2500%" height="15" fill="rgb(231,56,7)" fg:x="93" fg:w="2"/><text x="58.3750%" y="495.50"></text></g><g><title>local_file_transfer`opentelemetry::sdk::trace::evicted_hash_map::EvictedHashMap::new (1 samples, 0.62%)</title><rect x="58.7500%" y="469" width="0.6250%" height="15" fill="rgb(244,186,29)" fg:x="94" fg:w="1"/><text x="59.0000%" y="479.50"></text></g><g><title>local_file_transfer`std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (1 samples, 0.62%)</title><rect x="58.7500%" y="453" width="0.6250%" height="15" fill="rgb(234,111,31)" fg:x="94" fg:w="1"/><text x="59.0000%" y="463.50"></text></g><g><title>local_file_transfer`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.62%)</title><rect x="58.7500%" y="437" width="0.6250%" height="15" fill="rgb(241,149,10)" fg:x="94" fg:w="1"/><text x="59.0000%" y="447.50"></text></g><g><title>local_file_transfer`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.62%)</title><rect x="58.7500%" y="421" width="0.6250%" height="15" fill="rgb(249,206,44)" fg:x="94" fg:w="1"/><text x="59.0000%" y="431.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.62%)</title><rect x="59.3750%" y="197" width="0.6250%" height="15" fill="rgb(251,153,30)" fg:x="95" fg:w="1"/><text x="59.6250%" y="207.50"></text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 2.50%)</title><rect x="60.6250%" y="165" width="2.5000%" height="15" fill="rgb(239,152,38)" fg:x="97" fg:w="4"/><text x="60.8750%" y="175.50">lo..</text></g><g><title>local_file_transfer`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (4 samples, 2.50%)</title><rect x="60.6250%" y="149" width="2.5000%" height="15" fill="rgb(249,139,47)" fg:x="97" fg:w="4"/><text x="60.8750%" y="159.50">lo..</text></g><g><title>local_file_transfer`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (4 samples, 2.50%)</title><rect x="60.6250%" y="133" width="2.5000%" height="15" fill="rgb(244,64,35)" fg:x="97" fg:w="4"/><text x="60.8750%" y="143.50">lo..</text></g><g><title>local_file_transfer`core::fmt::Formatter::pad_integral (1 samples, 0.62%)</title><rect x="62.5000%" y="117" width="0.6250%" height="15" fill="rgb(216,46,15)" fg:x="100" fg:w="1"/><text x="62.7500%" y="127.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.62%)</title><rect x="63.1250%" y="133" width="0.6250%" height="15" fill="rgb(250,74,19)" fg:x="101" fg:w="1"/><text x="63.3750%" y="143.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.62%)</title><rect x="63.1250%" y="117" width="0.6250%" height="15" fill="rgb(249,42,33)" fg:x="101" fg:w="1"/><text x="63.3750%" y="127.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (8 samples, 5.00%)</title><rect x="59.3750%" y="485" width="5.0000%" height="15" fill="rgb(242,149,17)" fg:x="95" fg:w="8"/><text x="59.6250%" y="495.50">local_..</text></g><g><title>local_file_transfer`&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (8 samples, 5.00%)</title><rect x="59.3750%" y="469" width="5.0000%" height="15" fill="rgb(244,29,21)" fg:x="95" fg:w="8"/><text x="59.6250%" y="479.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 5.00%)</title><rect x="59.3750%" y="453" width="5.0000%" height="15" fill="rgb(220,130,37)" fg:x="95" fg:w="8"/><text x="59.6250%" y="463.50">local_..</text></g><g><title>local_file_transfer`&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 5.00%)</title><rect x="59.3750%" y="437" width="5.0000%" height="15" fill="rgb(211,67,2)" fg:x="95" fg:w="8"/><text x="59.6250%" y="447.50">local_..</text></g><g><title>local_file_transfer`tracing_core::span::Attributes::record (8 samples, 5.00%)</title><rect x="59.3750%" y="421" width="5.0000%" height="15" fill="rgb(235,68,52)" fg:x="95" fg:w="8"/><text x="59.6250%" y="431.50">local_..</text></g><g><title>local_file_transfer`tracing_core::field::ValueSet::record (8 samples, 5.00%)</title><rect x="59.3750%" y="405" width="5.0000%" height="15" fill="rgb(246,142,3)" fg:x="95" fg:w="8"/><text x="59.6250%" y="415.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as tracing_core::field::Value&gt;::record (8 samples, 5.00%)</title><rect x="59.3750%" y="389" width="5.0000%" height="15" fill="rgb(241,25,7)" fg:x="95" fg:w="8"/><text x="59.6250%" y="399.50">local_..</text></g><g><title>local_file_transfer`&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (8 samples, 5.00%)</title><rect x="59.3750%" y="373" width="5.0000%" height="15" fill="rgb(242,119,39)" fg:x="95" fg:w="8"/><text x="59.6250%" y="383.50">local_..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (8 samples, 5.00%)</title><rect x="59.3750%" y="357" width="5.0000%" height="15" fill="rgb(241,98,45)" fg:x="95" fg:w="8"/><text x="59.6250%" y="367.50">local_..</text></g><g><title>local_file_transfer`tracing_subscriber::fmt::format::Writer::write_fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="341" width="5.0000%" height="15" fill="rgb(254,28,30)" fg:x="95" fg:w="8"/><text x="59.6250%" y="351.50">local_..</text></g><g><title>local_file_transfer`core::fmt::Write::write_fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="325" width="5.0000%" height="15" fill="rgb(241,142,54)" fg:x="95" fg:w="8"/><text x="59.6250%" y="335.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="309" width="5.0000%" height="15" fill="rgb(222,85,15)" fg:x="95" fg:w="8"/><text x="59.6250%" y="319.50">local_..</text></g><g><title>local_file_transfer`core::fmt::write (8 samples, 5.00%)</title><rect x="59.3750%" y="293" width="5.0000%" height="15" fill="rgb(210,85,47)" fg:x="95" fg:w="8"/><text x="59.6250%" y="303.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="277" width="5.0000%" height="15" fill="rgb(224,206,25)" fg:x="95" fg:w="8"/><text x="59.6250%" y="287.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="261" width="5.0000%" height="15" fill="rgb(243,201,19)" fg:x="95" fg:w="8"/><text x="59.6250%" y="271.50">local_..</text></g><g><title>local_file_transfer`core::array::_&lt;impl core::fmt::Debug for [T (8 samples, 5.00%)</title><rect x="59.3750%" y="245" width="5.0000%" height="15" fill="rgb(236,59,4)" fg:x="95" fg:w="8"/><text x="59.6250%" y="255.50">local_..</text></g><g><title> N]&gt;::fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="229" width="5.0000%" height="15" fill="rgb(254,179,45)" fg:x="95" fg:w="8"/><text x="59.6250%" y="239.50"> N]&gt;::..</text></g><g><title>local_file_transfer`&lt;[T] as core::fmt::Debug&gt;::fmt (8 samples, 5.00%)</title><rect x="59.3750%" y="213" width="5.0000%" height="15" fill="rgb(226,14,10)" fg:x="95" fg:w="8"/><text x="59.6250%" y="223.50">local_..</text></g><g><title>local_file_transfer`core::fmt::builders::DebugList::entries (7 samples, 4.38%)</title><rect x="60.0000%" y="197" width="4.3750%" height="15" fill="rgb(244,27,41)" fg:x="96" fg:w="7"/><text x="60.2500%" y="207.50">local..</text></g><g><title>local_file_transfer`core::fmt::builders::DebugSet::entry (6 samples, 3.75%)</title><rect x="60.6250%" y="181" width="3.7500%" height="15" fill="rgb(235,35,32)" fg:x="97" fg:w="6"/><text x="60.8750%" y="191.50">loca..</text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 1.25%)</title><rect x="63.1250%" y="165" width="1.2500%" height="15" fill="rgb(218,68,31)" fg:x="101" fg:w="2"/><text x="63.3750%" y="175.50"></text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 1.25%)</title><rect x="63.1250%" y="149" width="1.2500%" height="15" fill="rgb(207,120,37)" fg:x="101" fg:w="2"/><text x="63.3750%" y="159.50"></text></g><g><title>local_file_transfer`DYLD-STUB$$memcpy (1 samples, 0.62%)</title><rect x="63.7500%" y="133" width="0.6250%" height="15" fill="rgb(227,98,0)" fg:x="102" fg:w="1"/><text x="64.0000%" y="143.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_trace_id (1 samples, 0.62%)</title><rect x="64.3750%" y="453" width="0.6250%" height="15" fill="rgb(207,7,3)" fg:x="103" fg:w="1"/><text x="64.6250%" y="463.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.62%)</title><rect x="64.3750%" y="437" width="0.6250%" height="15" fill="rgb(206,98,19)" fg:x="103" fg:w="1"/><text x="64.6250%" y="447.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::tracer::Tracer as tracing_opentelemetry::tracer::PreSampledTracer&gt;::new_trace_id::_{{closure}} (1 samples, 0.62%)</title><rect x="64.3750%" y="421" width="0.6250%" height="15" fill="rgb(217,5,26)" fg:x="103" fg:w="1"/><text x="64.6250%" y="431.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::IdGenerator&gt;::new_trace_id (1 samples, 0.62%)</title><rect x="64.3750%" y="405" width="0.6250%" height="15" fill="rgb(235,190,38)" fg:x="103" fg:w="1"/><text x="64.6250%" y="415.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.62%)</title><rect x="64.3750%" y="389" width="0.6250%" height="15" fill="rgb(247,86,24)" fg:x="103" fg:w="1"/><text x="64.6250%" y="399.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.62%)</title><rect x="64.3750%" y="373" width="0.6250%" height="15" fill="rgb(205,101,16)" fg:x="103" fg:w="1"/><text x="64.6250%" y="383.50"></text></g><g><title>local_file_transfer`&lt;opentelemetry::sdk::trace::id_generator::IdGenerator as opentelemetry::trace::IdGenerator&gt;::new_trace_id::_{{closure}} (1 samples, 0.62%)</title><rect x="64.3750%" y="357" width="0.6250%" height="15" fill="rgb(246,168,33)" fg:x="103" fg:w="1"/><text x="64.6250%" y="367.50"></text></g><g><title>local_file_transfer`opentelemetry::trace::span_context::TraceId::from_bytes (1 samples, 0.62%)</title><rect x="64.3750%" y="341" width="0.6250%" height="15" fill="rgb(231,114,1)" fg:x="103" fg:w="1"/><text x="64.6250%" y="351.50"></text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.62%)</title><rect x="65.0000%" y="149" width="0.6250%" height="15" fill="rgb(207,184,53)" fg:x="104" fg:w="1"/><text x="65.2500%" y="159.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.62%)</title><rect x="65.0000%" y="133" width="0.6250%" height="15" fill="rgb(224,95,51)" fg:x="104" fg:w="1"/><text x="65.2500%" y="143.50"></text></g><g><title>local_file_transfer`alloc::raw_vec::finish_grow (1 samples, 0.62%)</title><rect x="65.0000%" y="117" width="0.6250%" height="15" fill="rgb(212,188,45)" fg:x="104" fg:w="1"/><text x="65.2500%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.62%)</title><rect x="65.0000%" y="101" width="0.6250%" height="15" fill="rgb(223,154,38)" fg:x="104" fg:w="1"/><text x="65.2500%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.62%)</title><rect x="65.0000%" y="85" width="0.6250%" height="15" fill="rgb(251,22,52)" fg:x="104" fg:w="1"/><text x="65.2500%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.62%)</title><rect x="65.0000%" y="69" width="0.6250%" height="15" fill="rgb(229,209,22)" fg:x="104" fg:w="1"/><text x="65.2500%" y="79.50"></text></g><g><title>local_file_transfer`&lt;&amp;mut T as core::fmt::Debug&gt;::fmt (2 samples, 1.25%)</title><rect x="65.0000%" y="261" width="1.2500%" height="15" fill="rgb(234,138,34)" fg:x="104" fg:w="2"/><text x="65.2500%" y="271.50"></text></g><g><title>local_file_transfer`&lt;adrnaln::server::Server as core::fmt::Debug&gt;::fmt (2 samples, 1.25%)</title><rect x="65.0000%" y="245" width="1.2500%" height="15" fill="rgb(212,95,11)" fg:x="104" fg:w="2"/><text x="65.2500%" y="255.50"></text></g><g><title>local_file_transfer`core::fmt::Formatter::debug_struct_field1_finish (2 samples, 1.25%)</title><rect x="65.0000%" y="229" width="1.2500%" height="15" fill="rgb(240,179,47)" fg:x="104" fg:w="2"/><text x="65.2500%" y="239.50"></text></g><g><title>local_file_transfer`core::fmt::builders::DebugStruct::field (2 samples, 1.25%)</title><rect x="65.0000%" y="213" width="1.2500%" height="15" fill="rgb(240,163,11)" fg:x="104" fg:w="2"/><text x="65.2500%" y="223.50"></text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 1.25%)</title><rect x="65.0000%" y="197" width="1.2500%" height="15" fill="rgb(236,37,12)" fg:x="104" fg:w="2"/><text x="65.2500%" y="207.50"></text></g><g><title>local_file_transfer`&lt;adrnaln::config::Configuration as core::fmt::Debug&gt;::fmt (2 samples, 1.25%)</title><rect x="65.0000%" y="181" width="1.2500%" height="15" fill="rgb(232,164,16)" fg:x="104" fg:w="2"/><text x="65.2500%" y="191.50"></text></g><g><title>local_file_transfer`core::fmt::Formatter::debug_struct_field2_finish (2 samples, 1.25%)</title><rect x="65.0000%" y="165" width="1.2500%" height="15" fill="rgb(244,205,15)" fg:x="104" fg:w="2"/><text x="65.2500%" y="175.50"></text></g><g><title>local_file_transfer`core::fmt::builders::DebugStruct::field (1 samples, 0.62%)</title><rect x="65.6250%" y="149" width="0.6250%" height="15" fill="rgb(223,117,47)" fg:x="105" fg:w="1"/><text x="65.8750%" y="159.50"></text></g><g><title>local_file_transfer`&lt;adrnaln::config::Addresses as core::fmt::Debug&gt;::fmt (1 samples, 0.62%)</title><rect x="65.6250%" y="133" width="0.6250%" height="15" fill="rgb(244,107,35)" fg:x="105" fg:w="1"/><text x="65.8750%" y="143.50"></text></g><g><title>local_file_transfer`core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.62%)</title><rect x="65.6250%" y="117" width="0.6250%" height="15" fill="rgb(205,140,8)" fg:x="105" fg:w="1"/><text x="65.8750%" y="127.50"></text></g><g><title>local_file_transfer`core::fmt::builders::DebugStruct::field (1 samples, 0.62%)</title><rect x="65.6250%" y="101" width="0.6250%" height="15" fill="rgb(228,84,46)" fg:x="105" fg:w="1"/><text x="65.8750%" y="111.50"></text></g><g><title>local_file_transfer`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (1 samples, 0.62%)</title><rect x="65.6250%" y="85" width="0.6250%" height="15" fill="rgb(254,188,9)" fg:x="105" fg:w="1"/><text x="65.8750%" y="95.50"></text></g><g><title>local_file_transfer`core::fmt::write (1 samples, 0.62%)</title><rect x="65.6250%" y="69" width="0.6250%" height="15" fill="rgb(206,112,54)" fg:x="105" fg:w="1"/><text x="65.8750%" y="79.50"></text></g><g><title>local_file_transfer`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (1 samples, 0.62%)</title><rect x="65.6250%" y="53" width="0.6250%" height="15" fill="rgb(216,84,49)" fg:x="105" fg:w="1"/><text x="65.8750%" y="63.50"></text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.62%)</title><rect x="65.6250%" y="37" width="0.6250%" height="15" fill="rgb(214,194,35)" fg:x="105" fg:w="1"/><text x="65.8750%" y="47.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.62%)</title><rect x="66.2500%" y="213" width="0.6250%" height="15" fill="rgb(249,28,3)" fg:x="106" fg:w="1"/><text x="66.5000%" y="223.50"></text></g><g><title>local_file_transfer`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.62%)</title><rect x="68.1250%" y="149" width="0.6250%" height="15" fill="rgb(222,56,52)" fg:x="109" fg:w="1"/><text x="68.3750%" y="159.50"></text></g><g><title>local_file_transfer`core::fmt::Formatter::pad_integral (1 samples, 0.62%)</title><rect x="68.7500%" y="149" width="0.6250%" height="15" fill="rgb(245,217,50)" fg:x="110" fg:w="1"/><text x="69.0000%" y="159.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (9 samples, 5.62%)</title><rect x="64.3750%" y="469" width="5.6250%" height="15" fill="rgb(213,201,24)" fg:x="103" fg:w="9"/><text x="64.6250%" y="479.50">local_f..</text></g><g><title>local_file_transfer`tracing_core::span::Attributes::record (8 samples, 5.00%)</title><rect x="65.0000%" y="453" width="5.0000%" height="15" fill="rgb(248,116,28)" fg:x="104" fg:w="8"/><text x="65.2500%" y="463.50">local_..</text></g><g><title>local_file_transfer`tracing_core::field::ValueSet::record (8 samples, 5.00%)</title><rect x="65.0000%" y="437" width="5.0000%" height="15" fill="rgb(219,72,43)" fg:x="104" fg:w="8"/><text x="65.2500%" y="447.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as tracing_core::field::Value&gt;::record (8 samples, 5.00%)</title><rect x="65.0000%" y="421" width="5.0000%" height="15" fill="rgb(209,138,14)" fg:x="104" fg:w="8"/><text x="65.2500%" y="431.50">local_..</text></g><g><title>local_file_transfer`&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (8 samples, 5.00%)</title><rect x="65.0000%" y="405" width="5.0000%" height="15" fill="rgb(222,18,33)" fg:x="104" fg:w="8"/><text x="65.2500%" y="415.50">local_..</text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::SpanAttributeVisitor as tracing_core::field::Visit&gt;::record_debug (8 samples, 5.00%)</title><rect x="65.0000%" y="389" width="5.0000%" height="15" fill="rgb(213,199,7)" fg:x="104" fg:w="8"/><text x="65.2500%" y="399.50">local_..</text></g><g><title>local_file_transfer`alloc::fmt::format (8 samples, 5.00%)</title><rect x="65.0000%" y="373" width="5.0000%" height="15" fill="rgb(250,110,10)" fg:x="104" fg:w="8"/><text x="65.2500%" y="383.50">local_..</text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map_or_else (8 samples, 5.00%)</title><rect x="65.0000%" y="357" width="5.0000%" height="15" fill="rgb(248,123,6)" fg:x="104" fg:w="8"/><text x="65.2500%" y="367.50">local_..</text></g><g><title>local_file_transfer`alloc::fmt::format::_{{closure}} (8 samples, 5.00%)</title><rect x="65.0000%" y="341" width="5.0000%" height="15" fill="rgb(206,91,31)" fg:x="104" fg:w="8"/><text x="65.2500%" y="351.50">local_..</text></g><g><title>local_file_transfer`alloc::fmt::format::format_inner (8 samples, 5.00%)</title><rect x="65.0000%" y="325" width="5.0000%" height="15" fill="rgb(211,154,13)" fg:x="104" fg:w="8"/><text x="65.2500%" y="335.50">local_..</text></g><g><title>local_file_transfer`core::fmt::write (8 samples, 5.00%)</title><rect x="65.0000%" y="309" width="5.0000%" height="15" fill="rgb(225,148,7)" fg:x="104" fg:w="8"/><text x="65.2500%" y="319.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 5.00%)</title><rect x="65.0000%" y="293" width="5.0000%" height="15" fill="rgb(220,160,43)" fg:x="104" fg:w="8"/><text x="65.2500%" y="303.50">local_..</text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 5.00%)</title><rect x="65.0000%" y="277" width="5.0000%" height="15" fill="rgb(213,52,39)" fg:x="104" fg:w="8"/><text x="65.2500%" y="287.50">local_..</text></g><g><title>local_file_transfer`core::array::_&lt;impl core::fmt::Debug for [T (6 samples, 3.75%)</title><rect x="66.2500%" y="261" width="3.7500%" height="15" fill="rgb(243,137,7)" fg:x="106" fg:w="6"/><text x="66.5000%" y="271.50">loca..</text></g><g><title> N]&gt;::fmt (6 samples, 3.75%)</title><rect x="66.2500%" y="245" width="3.7500%" height="15" fill="rgb(230,79,13)" fg:x="106" fg:w="6"/><text x="66.5000%" y="255.50"> N]&gt;..</text></g><g><title>local_file_transfer`&lt;[T] as core::fmt::Debug&gt;::fmt (6 samples, 3.75%)</title><rect x="66.2500%" y="229" width="3.7500%" height="15" fill="rgb(247,105,23)" fg:x="106" fg:w="6"/><text x="66.5000%" y="239.50">loca..</text></g><g><title>local_file_transfer`core::fmt::builders::DebugList::entries (5 samples, 3.12%)</title><rect x="66.8750%" y="213" width="3.1250%" height="15" fill="rgb(223,179,41)" fg:x="107" fg:w="5"/><text x="67.1250%" y="223.50">loc..</text></g><g><title>local_file_transfer`core::fmt::builders::DebugSet::entry (4 samples, 2.50%)</title><rect x="67.5000%" y="197" width="2.5000%" height="15" fill="rgb(218,9,34)" fg:x="108" fg:w="4"/><text x="67.7500%" y="207.50">lo..</text></g><g><title>local_file_transfer`&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 1.88%)</title><rect x="68.1250%" y="181" width="1.8750%" height="15" fill="rgb(222,106,8)" fg:x="109" fg:w="3"/><text x="68.3750%" y="191.50">l..</text></g><g><title>local_file_transfer`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (3 samples, 1.88%)</title><rect x="68.1250%" y="165" width="1.8750%" height="15" fill="rgb(211,220,0)" fg:x="109" fg:w="3"/><text x="68.3750%" y="175.50">l..</text></g><g><title>local_file_transfer`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.62%)</title><rect x="69.3750%" y="149" width="0.6250%" height="15" fill="rgb(229,52,16)" fg:x="111" fg:w="1"/><text x="69.6250%" y="159.50"></text></g><g><title>local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (76 samples, 47.50%)</title><rect x="23.1250%" y="645" width="47.5000%" height="15" fill="rgb(212,155,18)" fg:x="37" fg:w="76"/><text x="23.3750%" y="655.50">local_file_transfer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}}::_{{closure}} (75 samples, 46.88%)</title><rect x="23.7500%" y="629" width="46.8750%" height="15" fill="rgb(242,21,14)" fg:x="38" fg:w="75"/><text x="24.0000%" y="639.50">local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}..</text></g><g><title>local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}} (75 samples, 46.88%)</title><rect x="23.7500%" y="613" width="46.8750%" height="15" fill="rgb(222,19,48)" fg:x="38" fg:w="75"/><text x="24.0000%" y="623.50">local_file_transfer`adrnaln::server::Server::process_buffer::_{{closure}}</text></g><g><title>local_file_transfer`tracing::span::Span::new (18 samples, 11.25%)</title><rect x="59.3750%" y="597" width="11.2500%" height="15" fill="rgb(232,45,27)" fg:x="95" fg:w="18"/><text x="59.6250%" y="607.50">local_file_transf..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::get_default (18 samples, 11.25%)</title><rect x="59.3750%" y="581" width="11.2500%" height="15" fill="rgb(249,103,42)" fg:x="95" fg:w="18"/><text x="59.6250%" y="591.50">local_file_transf..</text></g><g><title>local_file_transfer`tracing::span::Span::new::_{{closure}} (18 samples, 11.25%)</title><rect x="59.3750%" y="565" width="11.2500%" height="15" fill="rgb(246,81,33)" fg:x="95" fg:w="18"/><text x="59.6250%" y="575.50">local_file_transf..</text></g><g><title>local_file_transfer`tracing::span::Span::new_with (18 samples, 11.25%)</title><rect x="59.3750%" y="549" width="11.2500%" height="15" fill="rgb(252,33,42)" fg:x="95" fg:w="18"/><text x="59.6250%" y="559.50">local_file_transf..</text></g><g><title>local_file_transfer`tracing::span::Span::make_with (18 samples, 11.25%)</title><rect x="59.3750%" y="533" width="11.2500%" height="15" fill="rgb(209,212,41)" fg:x="95" fg:w="18"/><text x="59.6250%" y="543.50">local_file_transf..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::new_span (18 samples, 11.25%)</title><rect x="59.3750%" y="517" width="11.2500%" height="15" fill="rgb(207,154,6)" fg:x="95" fg:w="18"/><text x="59.6250%" y="527.50">local_file_transf..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (18 samples, 11.25%)</title><rect x="59.3750%" y="501" width="11.2500%" height="15" fill="rgb(223,64,47)" fg:x="95" fg:w="18"/><text x="59.6250%" y="511.50">local_file_transf..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (10 samples, 6.25%)</title><rect x="64.3750%" y="485" width="6.2500%" height="15" fill="rgb(211,161,38)" fg:x="103" fg:w="10"/><text x="64.6250%" y="495.50">local_fi..</text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.62%)</title><rect x="70.0000%" y="469" width="0.6250%" height="15" fill="rgb(219,138,40)" fg:x="112" fg:w="1"/><text x="70.2500%" y="479.50"></text></g><g><title>local_file_transfer`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (1 samples, 0.62%)</title><rect x="70.0000%" y="453" width="0.6250%" height="15" fill="rgb(241,228,46)" fg:x="112" fg:w="1"/><text x="70.2500%" y="463.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;sharded_slab::pool::RefMut&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (1 samples, 0.62%)</title><rect x="70.0000%" y="437" width="0.6250%" height="15" fill="rgb(223,209,38)" fg:x="112" fg:w="1"/><text x="70.2500%" y="447.50"></text></g><g><title>local_file_transfer`&lt;sharded_slab::pool::RefMut&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.62%)</title><rect x="70.0000%" y="421" width="0.6250%" height="15" fill="rgb(236,164,45)" fg:x="112" fg:w="1"/><text x="70.2500%" y="431.50"></text></g><g><title>local_file_transfer`sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release (1 samples, 0.62%)</title><rect x="70.0000%" y="405" width="0.6250%" height="15" fill="rgb(231,15,5)" fg:x="112" fg:w="1"/><text x="70.2500%" y="415.50"></text></g><g><title>local_file_transfer`sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release2 (1 samples, 0.62%)</title><rect x="70.0000%" y="389" width="0.6250%" height="15" fill="rgb(252,35,15)" fg:x="112" fg:w="1"/><text x="70.2500%" y="399.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.62%)</title><rect x="70.6250%" y="645" width="0.6250%" height="15" fill="rgb(248,181,18)" fg:x="113" fg:w="1"/><text x="70.8750%" y="655.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::sequence_reassemble::_{{closure}} (1 samples, 0.62%)</title><rect x="70.6250%" y="629" width="0.6250%" height="15" fill="rgb(233,39,42)" fg:x="113" fg:w="1"/><text x="70.8750%" y="639.50"></text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.62%)</title><rect x="70.6250%" y="613" width="0.6250%" height="15" fill="rgb(238,110,33)" fg:x="113" fg:w="1"/><text x="70.8750%" y="623.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::sequence_reassemble::_{{closure}}::_{{closure}} (1 samples, 0.62%)</title><rect x="70.6250%" y="597" width="0.6250%" height="15" fill="rgb(233,195,10)" fg:x="113" fg:w="1"/><text x="70.8750%" y="607.50"></text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.62%)</title><rect x="70.6250%" y="581" width="0.6250%" height="15" fill="rgb(254,105,3)" fg:x="113" fg:w="1"/><text x="70.8750%" y="591.50"></text></g><g><title>local_file_transfer`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.62%)</title><rect x="70.6250%" y="565" width="0.6250%" height="15" fill="rgb(221,225,9)" fg:x="113" fg:w="1"/><text x="70.8750%" y="575.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.62%)</title><rect x="70.6250%" y="549" width="0.6250%" height="15" fill="rgb(224,227,45)" fg:x="113" fg:w="1"/><text x="70.8750%" y="559.50"></text></g><g><title>local_file_transfer`adrnaln::client::Client::build_sequence_from_file::_{{closure}} (1 samples, 0.62%)</title><rect x="71.2500%" y="629" width="0.6250%" height="15" fill="rgb(229,198,43)" fg:x="114" fg:w="1"/><text x="71.5000%" y="639.50"></text></g><g><title>local_file_transfer`std::io::Read::read_to_end (1 samples, 0.62%)</title><rect x="71.2500%" y="613" width="0.6250%" height="15" fill="rgb(206,209,35)" fg:x="114" fg:w="1"/><text x="71.5000%" y="623.50"></text></g><g><title>local_file_transfer`std::io::default_read_to_end (1 samples, 0.62%)</title><rect x="71.2500%" y="597" width="0.6250%" height="15" fill="rgb(245,195,53)" fg:x="114" fg:w="1"/><text x="71.5000%" y="607.50"></text></g><g><title>local_file_transfer`&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (1 samples, 0.62%)</title><rect x="71.2500%" y="581" width="0.6250%" height="15" fill="rgb(240,92,26)" fg:x="114" fg:w="1"/><text x="71.5000%" y="591.50"></text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.62%)</title><rect x="71.2500%" y="565" width="0.6250%" height="15" fill="rgb(207,40,23)" fg:x="114" fg:w="1"/><text x="71.5000%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.62%)</title><rect x="71.2500%" y="549" width="0.6250%" height="15" fill="rgb(223,111,35)" fg:x="114" fg:w="1"/><text x="71.5000%" y="559.50"></text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.62%)</title><rect x="71.8750%" y="453" width="0.6250%" height="15" fill="rgb(229,147,28)" fg:x="115" fg:w="1"/><text x="72.1250%" y="463.50"></text></g><g><title>local_file_transfer`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.25%)</title><rect x="72.5000%" y="453" width="1.2500%" height="15" fill="rgb(211,29,28)" fg:x="116" fg:w="2"/><text x="72.7500%" y="463.50"></text></g><g><title>local_file_transfer`bincode::byteorder::WriteBytesExt::write_u8 (4 samples, 2.50%)</title><rect x="76.2500%" y="325" width="2.5000%" height="15" fill="rgb(228,72,33)" fg:x="122" fg:w="4"/><text x="76.5000%" y="335.50">lo..</text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 2.50%)</title><rect x="76.2500%" y="309" width="2.5000%" height="15" fill="rgb(205,214,31)" fg:x="122" fg:w="4"/><text x="76.5000%" y="319.50">lo..</text></g><g><title>local_file_transfer`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 2.50%)</title><rect x="76.2500%" y="293" width="2.5000%" height="15" fill="rgb(224,111,15)" fg:x="122" fg:w="4"/><text x="76.5000%" y="303.50">lo..</text></g><g><title>local_file_transfer`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 2.50%)</title><rect x="76.2500%" y="277" width="2.5000%" height="15" fill="rgb(253,21,26)" fg:x="122" fg:w="4"/><text x="76.5000%" y="287.50">lo..</text></g><g><title>local_file_transfer`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 1.88%)</title><rect x="76.8750%" y="261" width="1.8750%" height="15" fill="rgb(245,139,43)" fg:x="123" fg:w="3"/><text x="77.1250%" y="271.50">l..</text></g><g><title>local_file_transfer`bincode::internal::serialize_into (14 samples, 8.75%)</title><rect x="71.8750%" y="549" width="8.7500%" height="15" fill="rgb(252,170,7)" fg:x="115" fg:w="14"/><text x="72.1250%" y="559.50">local_file_t..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::ser::Serialize for adrnaln::packet::Packet&gt;::serialize (14 samples, 8.75%)</title><rect x="71.8750%" y="533" width="8.7500%" height="15" fill="rgb(231,118,14)" fg:x="115" fg:w="14"/><text x="72.1250%" y="543.50">local_file_t..</text></g><g><title>local_file_transfer`&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 8.75%)</title><rect x="71.8750%" y="517" width="8.7500%" height="15" fill="rgb(238,83,0)" fg:x="115" fg:w="14"/><text x="72.1250%" y="527.50">local_file_t..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (14 samples, 8.75%)</title><rect x="71.8750%" y="501" width="8.7500%" height="15" fill="rgb(221,39,39)" fg:x="115" fg:w="14"/><text x="72.1250%" y="511.50">local_file_t..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq (14 samples, 8.75%)</title><rect x="71.8750%" y="485" width="8.7500%" height="15" fill="rgb(222,119,46)" fg:x="115" fg:w="14"/><text x="72.1250%" y="495.50">local_file_t..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each (14 samples, 8.75%)</title><rect x="71.8750%" y="469" width="8.7500%" height="15" fill="rgb(222,165,49)" fg:x="115" fg:w="14"/><text x="72.1250%" y="479.50">local_file_t..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_fold (11 samples, 6.88%)</title><rect x="73.7500%" y="453" width="6.8750%" height="15" fill="rgb(219,113,52)" fg:x="118" fg:w="11"/><text x="74.0000%" y="463.50">local_fil..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (10 samples, 6.25%)</title><rect x="74.3750%" y="437" width="6.2500%" height="15" fill="rgb(214,7,15)" fg:x="119" fg:w="10"/><text x="74.6250%" y="447.50">local_fi..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq::_{{closure}} (8 samples, 5.00%)</title><rect x="75.6250%" y="421" width="5.0000%" height="15" fill="rgb(235,32,4)" fg:x="121" fg:w="8"/><text x="75.8750%" y="431.50">local_..</text></g><g><title>local_file_transfer`&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (8 samples, 5.00%)</title><rect x="75.6250%" y="405" width="5.0000%" height="15" fill="rgb(238,90,54)" fg:x="121" fg:w="8"/><text x="75.8750%" y="415.50">local_..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 4.38%)</title><rect x="76.2500%" y="389" width="4.3750%" height="15" fill="rgb(213,208,19)" fg:x="122" fg:w="7"/><text x="76.5000%" y="399.50">local..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for u8&gt;::serialize (7 samples, 4.38%)</title><rect x="76.2500%" y="373" width="4.3750%" height="15" fill="rgb(233,156,4)" fg:x="122" fg:w="7"/><text x="76.5000%" y="383.50">local..</text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (7 samples, 4.38%)</title><rect x="76.2500%" y="357" width="4.3750%" height="15" fill="rgb(207,194,5)" fg:x="122" fg:w="7"/><text x="76.5000%" y="367.50">local..</text></g><g><title>local_file_transfer`bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (7 samples, 4.38%)</title><rect x="76.2500%" y="341" width="4.3750%" height="15" fill="rgb(206,111,30)" fg:x="122" fg:w="7"/><text x="76.5000%" y="351.50">local..</text></g><g><title>local_file_transfer`core::result::Result&lt;T,E&gt;::map_err (3 samples, 1.88%)</title><rect x="78.7500%" y="325" width="1.8750%" height="15" fill="rgb(243,70,54)" fg:x="126" fg:w="3"/><text x="79.0000%" y="335.50">l..</text></g><g><title>local_file_transfer`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.62%)</title><rect x="83.1250%" y="341" width="0.6250%" height="15" fill="rgb(242,28,8)" fg:x="133" fg:w="1"/><text x="83.3750%" y="351.50"></text></g><g><title>local_file_transfer`adrnaln::packet::Packet::to_bytes (20 samples, 12.50%)</title><rect x="71.8750%" y="597" width="12.5000%" height="15" fill="rgb(219,106,18)" fg:x="115" fg:w="20"/><text x="72.1250%" y="607.50">local_file_transfer..</text></g><g><title>local_file_transfer`bincode::serialize (20 samples, 12.50%)</title><rect x="71.8750%" y="581" width="12.5000%" height="15" fill="rgb(244,222,10)" fg:x="115" fg:w="20"/><text x="72.1250%" y="591.50">local_file_transfer..</text></g><g><title>local_file_transfer`bincode::internal::serialize (20 samples, 12.50%)</title><rect x="71.8750%" y="565" width="12.5000%" height="15" fill="rgb(236,179,52)" fg:x="115" fg:w="20"/><text x="72.1250%" y="575.50">local_file_transfer..</text></g><g><title>local_file_transfer`bincode::internal::serialized_size (6 samples, 3.75%)</title><rect x="80.6250%" y="549" width="3.7500%" height="15" fill="rgb(213,23,39)" fg:x="129" fg:w="6"/><text x="80.8750%" y="559.50">loca..</text></g><g><title>local_file_transfer`adrnaln::packet::_::_&lt;impl serde::ser::Serialize for adrnaln::packet::Packet&gt;::serialize (6 samples, 3.75%)</title><rect x="80.6250%" y="533" width="3.7500%" height="15" fill="rgb(238,48,10)" fg:x="129" fg:w="6"/><text x="80.8750%" y="543.50">loca..</text></g><g><title>local_file_transfer`&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 3.75%)</title><rect x="80.6250%" y="517" width="3.7500%" height="15" fill="rgb(251,196,23)" fg:x="129" fg:w="6"/><text x="80.8750%" y="527.50">loca..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 3.75%)</title><rect x="80.6250%" y="501" width="3.7500%" height="15" fill="rgb(250,152,24)" fg:x="129" fg:w="6"/><text x="80.8750%" y="511.50">loca..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq (6 samples, 3.75%)</title><rect x="80.6250%" y="485" width="3.7500%" height="15" fill="rgb(209,150,17)" fg:x="129" fg:w="6"/><text x="80.8750%" y="495.50">loca..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each (6 samples, 3.75%)</title><rect x="80.6250%" y="469" width="3.7500%" height="15" fill="rgb(234,202,34)" fg:x="129" fg:w="6"/><text x="80.8750%" y="479.50">loca..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_fold (6 samples, 3.75%)</title><rect x="80.6250%" y="453" width="3.7500%" height="15" fill="rgb(253,148,53)" fg:x="129" fg:w="6"/><text x="80.8750%" y="463.50">loca..</text></g><g><title>local_file_transfer`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (5 samples, 3.12%)</title><rect x="81.2500%" y="437" width="3.1250%" height="15" fill="rgb(218,129,16)" fg:x="130" fg:w="5"/><text x="81.5000%" y="447.50">loc..</text></g><g><title>local_file_transfer`serde::ser::Serializer::collect_seq::_{{closure}} (4 samples, 2.50%)</title><rect x="81.8750%" y="421" width="2.5000%" height="15" fill="rgb(216,85,19)" fg:x="131" fg:w="4"/><text x="82.1250%" y="431.50">lo..</text></g><g><title>local_file_transfer`&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (4 samples, 2.50%)</title><rect x="81.8750%" y="405" width="2.5000%" height="15" fill="rgb(235,228,7)" fg:x="131" fg:w="4"/><text x="82.1250%" y="415.50">lo..</text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 1.25%)</title><rect x="83.1250%" y="389" width="1.2500%" height="15" fill="rgb(245,175,0)" fg:x="133" fg:w="2"/><text x="83.3750%" y="399.50"></text></g><g><title>local_file_transfer`serde::ser::impls::_&lt;impl serde::ser::Serialize for u8&gt;::serialize (2 samples, 1.25%)</title><rect x="83.1250%" y="373" width="1.2500%" height="15" fill="rgb(208,168,36)" fg:x="133" fg:w="2"/><text x="83.3750%" y="383.50"></text></g><g><title>local_file_transfer`&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_u8 (2 samples, 1.25%)</title><rect x="83.1250%" y="357" width="1.2500%" height="15" fill="rgb(246,171,24)" fg:x="133" fg:w="2"/><text x="83.3750%" y="367.50"></text></g><g><title>local_file_transfer`bincode::ser::SizeChecker&lt;O&gt;::add_raw (1 samples, 0.62%)</title><rect x="83.7500%" y="341" width="0.6250%" height="15" fill="rgb(215,142,24)" fg:x="134" fg:w="1"/><text x="84.0000%" y="351.50"></text></g><g><title>local_file_transfer`tokio::net::udp::UdpSocket::connect::_{{closure}} (1 samples, 0.62%)</title><rect x="84.3750%" y="597" width="0.6250%" height="15" fill="rgb(250,187,7)" fg:x="135" fg:w="1"/><text x="84.6250%" y="607.50"></text></g><g><title>local_file_transfer`mio::net::udp::UdpSocket::connect (1 samples, 0.62%)</title><rect x="84.3750%" y="581" width="0.6250%" height="15" fill="rgb(228,66,33)" fg:x="135" fg:w="1"/><text x="84.6250%" y="591.50"></text></g><g><title>local_file_transfer`std::net::udp::UdpSocket::connect (1 samples, 0.62%)</title><rect x="84.3750%" y="565" width="0.6250%" height="15" fill="rgb(234,215,21)" fg:x="135" fg:w="1"/><text x="84.6250%" y="575.50"></text></g><g><title>local_file_transfer`std::net::each_addr (1 samples, 0.62%)</title><rect x="84.3750%" y="549" width="0.6250%" height="15" fill="rgb(222,191,20)" fg:x="135" fg:w="1"/><text x="84.6250%" y="559.50"></text></g><g><title>local_file_transfer`std::net::udp::UdpSocket::connect::_{{closure}} (1 samples, 0.62%)</title><rect x="84.3750%" y="533" width="0.6250%" height="15" fill="rgb(245,79,54)" fg:x="135" fg:w="1"/><text x="84.6250%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__connect (1 samples, 0.62%)</title><rect x="84.3750%" y="517" width="0.6250%" height="15" fill="rgb(240,10,37)" fg:x="135" fg:w="1"/><text x="84.6250%" y="527.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (102 samples, 63.75%)</title><rect x="22.5000%" y="901" width="63.7500%" height="15" fill="rgb(214,192,32)" fg:x="36" fg:w="102"/><text x="22.7500%" y="911.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (102 samples, 63.75%)</title><rect x="22.5000%" y="885" width="63.7500%" height="15" fill="rgb(209,36,54)" fg:x="36" fg:w="102"/><text x="22.7500%" y="895.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::task::LocalNotified&lt;S&gt;::run (102 samples, 63.75%)</title><rect x="22.5000%" y="869" width="63.7500%" height="15" fill="rgb(220,10,11)" fg:x="36" fg:w="102"/><text x="22.7500%" y="879.50">local_file_transfer`tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::RawTask::poll (102 samples, 63.75%)</title><rect x="22.5000%" y="853" width="63.7500%" height="15" fill="rgb(221,106,17)" fg:x="36" fg:w="102"/><text x="22.7500%" y="863.50">local_file_transfer`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::poll (102 samples, 63.75%)</title><rect x="22.5000%" y="837" width="63.7500%" height="15" fill="rgb(251,142,44)" fg:x="36" fg:w="102"/><text x="22.7500%" y="847.50">local_file_transfer`tokio::runtime::task::raw::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (102 samples, 63.75%)</title><rect x="22.5000%" y="821" width="63.7500%" height="15" fill="rgb(238,13,15)" fg:x="36" fg:w="102"/><text x="22.7500%" y="831.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (101 samples, 63.12%)</title><rect x="23.1250%" y="805" width="63.1250%" height="15" fill="rgb(208,107,27)" fg:x="37" fg:w="101"/><text x="23.3750%" y="815.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future (101 samples, 63.12%)</title><rect x="23.1250%" y="789" width="63.1250%" height="15" fill="rgb(205,136,37)" fg:x="37" fg:w="101"/><text x="23.3750%" y="799.50">local_file_transfer`tokio::runtime::task::harness::poll_future</text></g><g><title>local_file_transfer`std::panic::catch_unwind (101 samples, 63.12%)</title><rect x="23.1250%" y="773" width="63.1250%" height="15" fill="rgb(250,205,27)" fg:x="37" fg:w="101"/><text x="23.3750%" y="783.50">local_file_transfer`std::panic::catch_unwind</text></g><g><title>local_file_transfer`std::panicking::try (101 samples, 63.12%)</title><rect x="23.1250%" y="757" width="63.1250%" height="15" fill="rgb(210,80,43)" fg:x="37" fg:w="101"/><text x="23.3750%" y="767.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (101 samples, 63.12%)</title><rect x="23.1250%" y="741" width="63.1250%" height="15" fill="rgb(247,160,36)" fg:x="37" fg:w="101"/><text x="23.3750%" y="751.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (101 samples, 63.12%)</title><rect x="23.1250%" y="725" width="63.1250%" height="15" fill="rgb(234,13,49)" fg:x="37" fg:w="101"/><text x="23.3750%" y="735.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101 samples, 63.12%)</title><rect x="23.1250%" y="709" width="63.1250%" height="15" fill="rgb(234,122,0)" fg:x="37" fg:w="101"/><text x="23.3750%" y="719.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::..</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}} (101 samples, 63.12%)</title><rect x="23.1250%" y="693" width="63.1250%" height="15" fill="rgb(207,146,38)" fg:x="37" fg:w="101"/><text x="23.3750%" y="703.50">local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (101 samples, 63.12%)</title><rect x="23.1250%" y="677" width="63.1250%" height="15" fill="rgb(207,177,25)" fg:x="37" fg:w="101"/><text x="23.3750%" y="687.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (101 samples, 63.12%)</title><rect x="23.1250%" y="661" width="63.1250%" height="15" fill="rgb(211,178,42)" fg:x="37" fg:w="101"/><text x="23.3750%" y="671.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}}::_{{closure}} (24 samples, 15.00%)</title><rect x="71.2500%" y="645" width="15.0000%" height="15" fill="rgb(230,69,54)" fg:x="114" fg:w="24"/><text x="71.5000%" y="655.50">local_file_transfer`loc..</text></g><g><title>local_file_transfer`adrnaln::client::Client::send_sequence::_{{closure}} (23 samples, 14.38%)</title><rect x="71.8750%" y="629" width="14.3750%" height="15" fill="rgb(214,135,41)" fg:x="115" fg:w="23"/><text x="72.1250%" y="639.50">local_file_transfer`ad..</text></g><g><title>local_file_transfer`adrnaln::client::Client::send_packet::_{{closure}} (23 samples, 14.38%)</title><rect x="71.8750%" y="613" width="14.3750%" height="15" fill="rgb(237,67,25)" fg:x="115" fg:w="23"/><text x="72.1250%" y="623.50">local_file_transfer`ad..</text></g><g><title>local_file_transfer`tokio::net::udp::UdpSocket::send::_{{closure}} (2 samples, 1.25%)</title><rect x="85.0000%" y="597" width="1.2500%" height="15" fill="rgb(222,189,50)" fg:x="136" fg:w="2"/><text x="85.2500%" y="607.50"></text></g><g><title>local_file_transfer`tokio::runtime::io::registration::Registration::async_io::_{{closure}} (2 samples, 1.25%)</title><rect x="85.0000%" y="581" width="1.2500%" height="15" fill="rgb(245,148,34)" fg:x="136" fg:w="2"/><text x="85.2500%" y="591.50"></text></g><g><title>local_file_transfer`tokio::net::udp::UdpSocket::send::_{{closure}}::_{{closure}} (2 samples, 1.25%)</title><rect x="85.0000%" y="565" width="1.2500%" height="15" fill="rgb(222,29,6)" fg:x="136" fg:w="2"/><text x="85.2500%" y="575.50"></text></g><g><title>local_file_transfer`mio::net::udp::UdpSocket::send (2 samples, 1.25%)</title><rect x="85.0000%" y="549" width="1.2500%" height="15" fill="rgb(221,189,43)" fg:x="136" fg:w="2"/><text x="85.2500%" y="559.50"></text></g><g><title>local_file_transfer`mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 1.25%)</title><rect x="85.0000%" y="533" width="1.2500%" height="15" fill="rgb(207,36,27)" fg:x="136" fg:w="2"/><text x="85.2500%" y="543.50"></text></g><g><title>local_file_transfer`mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 1.25%)</title><rect x="85.0000%" y="517" width="1.2500%" height="15" fill="rgb(217,90,24)" fg:x="136" fg:w="2"/><text x="85.2500%" y="527.50"></text></g><g><title>local_file_transfer`mio::net::udp::UdpSocket::send::_{{closure}} (2 samples, 1.25%)</title><rect x="85.0000%" y="501" width="1.2500%" height="15" fill="rgb(224,66,35)" fg:x="136" fg:w="2"/><text x="85.2500%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (2 samples, 1.25%)</title><rect x="85.0000%" y="485" width="1.2500%" height="15" fill="rgb(221,13,50)" fg:x="136" fg:w="2"/><text x="85.2500%" y="495.50"></text></g><g><title>local_file_transfer`core::ops::function::FnOnce::call_once{{vtable.shim}} (128 samples, 80.00%)</title><rect x="6.8750%" y="1493" width="80.0000%" height="15" fill="rgb(236,68,49)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1503.50">local_file_transfer`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}} (128 samples, 80.00%)</title><rect x="6.8750%" y="1477" width="80.0000%" height="15" fill="rgb(229,146,28)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1487.50">local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>local_file_transfer`std::panicking::try (128 samples, 80.00%)</title><rect x="6.8750%" y="1461" width="80.0000%" height="15" fill="rgb(225,31,38)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1471.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (128 samples, 80.00%)</title><rect x="6.8750%" y="1445" width="80.0000%" height="15" fill="rgb(250,208,3)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1455.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (128 samples, 80.00%)</title><rect x="6.8750%" y="1429" width="80.0000%" height="15" fill="rgb(246,54,23)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1439.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (128 samples, 80.00%)</title><rect x="6.8750%" y="1413" width="80.0000%" height="15" fill="rgb(243,76,11)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1423.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (128 samples, 80.00%)</title><rect x="6.8750%" y="1397" width="80.0000%" height="15" fill="rgb(245,21,50)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1407.50">local_file_transfer`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 80.00%)</title><rect x="6.8750%" y="1381" width="80.0000%" height="15" fill="rgb(228,9,43)" fg:x="11" fg:w="128"/><text x="7.1250%" y="1391.50">local_file_transfer`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (118 samples, 73.75%)</title><rect x="13.1250%" y="1365" width="73.7500%" height="15" fill="rgb(208,100,47)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1375.50">local_file_transfer`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Inner::run (118 samples, 73.75%)</title><rect x="13.1250%" y="1349" width="73.7500%" height="15" fill="rgb(232,26,8)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1359.50">local_file_transfer`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>local_file_transfer`tokio::runtime::blocking::pool::Task::run (118 samples, 73.75%)</title><rect x="13.1250%" y="1333" width="73.7500%" height="15" fill="rgb(216,166,38)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1343.50">local_file_transfer`tokio::runtime::blocking::pool::Task::run</text></g><g><title>local_file_transfer`tokio::runtime::task::UnownedTask&lt;S&gt;::run (118 samples, 73.75%)</title><rect x="13.1250%" y="1317" width="73.7500%" height="15" fill="rgb(251,202,51)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1327.50">local_file_transfer`tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::RawTask::poll (118 samples, 73.75%)</title><rect x="13.1250%" y="1301" width="73.7500%" height="15" fill="rgb(254,216,34)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1311.50">local_file_transfer`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::raw::poll (118 samples, 73.75%)</title><rect x="13.1250%" y="1285" width="73.7500%" height="15" fill="rgb(251,32,27)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1295.50">local_file_transfer`tokio::runtime::task::raw::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (118 samples, 73.75%)</title><rect x="13.1250%" y="1269" width="73.7500%" height="15" fill="rgb(208,127,28)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1279.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (118 samples, 73.75%)</title><rect x="13.1250%" y="1253" width="73.7500%" height="15" fill="rgb(224,137,22)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1263.50">local_file_transfer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future (118 samples, 73.75%)</title><rect x="13.1250%" y="1237" width="73.7500%" height="15" fill="rgb(254,70,32)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1247.50">local_file_transfer`tokio::runtime::task::harness::poll_future</text></g><g><title>local_file_transfer`std::panic::catch_unwind (118 samples, 73.75%)</title><rect x="13.1250%" y="1221" width="73.7500%" height="15" fill="rgb(229,75,37)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1231.50">local_file_transfer`std::panic::catch_unwind</text></g><g><title>local_file_transfer`std::panicking::try (118 samples, 73.75%)</title><rect x="13.1250%" y="1205" width="73.7500%" height="15" fill="rgb(252,64,23)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1215.50">local_file_transfer`std::panicking::try</text></g><g><title>local_file_transfer`__rust_try (118 samples, 73.75%)</title><rect x="13.1250%" y="1189" width="73.7500%" height="15" fill="rgb(232,162,48)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1199.50">local_file_transfer`__rust_try</text></g><g><title>local_file_transfer`std::panicking::try::do_call (118 samples, 73.75%)</title><rect x="13.1250%" y="1173" width="73.7500%" height="15" fill="rgb(246,160,12)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1183.50">local_file_transfer`std::panicking::try::do_call</text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (118 samples, 73.75%)</title><rect x="13.1250%" y="1157" width="73.7500%" height="15" fill="rgb(247,166,0)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1167.50">local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}} (118 samples, 73.75%)</title><rect x="13.1250%" y="1141" width="73.7500%" height="15" fill="rgb(249,219,21)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1151.50">local_file_transfer`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (118 samples, 73.75%)</title><rect x="13.1250%" y="1125" width="73.7500%" height="15" fill="rgb(205,209,3)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1135.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (118 samples, 73.75%)</title><rect x="13.1250%" y="1109" width="73.7500%" height="15" fill="rgb(243,44,1)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1119.50">local_file_transfer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>local_file_transfer`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (118 samples, 73.75%)</title><rect x="13.1250%" y="1093" width="73.7500%" height="15" fill="rgb(206,159,16)" fg:x="21" fg:w="118"/><text x="13.3750%" y="1103.50">local_file_transfer`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (117 samples, 73.12%)</title><rect x="13.7500%" y="1077" width="73.1250%" height="15" fill="rgb(244,77,30)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1087.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run (117 samples, 73.12%)</title><rect x="13.7500%" y="1061" width="73.1250%" height="15" fill="rgb(218,69,12)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1071.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>local_file_transfer`tokio::runtime::context::runtime::enter_runtime (117 samples, 73.12%)</title><rect x="13.7500%" y="1045" width="73.1250%" height="15" fill="rgb(212,87,7)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1055.50">local_file_transfer`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (117 samples, 73.12%)</title><rect x="13.7500%" y="1029" width="73.1250%" height="15" fill="rgb(245,114,25)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1039.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::context::set_scheduler (117 samples, 73.12%)</title><rect x="13.7500%" y="1013" width="73.1250%" height="15" fill="rgb(210,61,42)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1023.50">local_file_transfer`tokio::runtime::context::set_scheduler</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with (117 samples, 73.12%)</title><rect x="13.7500%" y="997" width="73.1250%" height="15" fill="rgb(211,52,33)" fg:x="22" fg:w="117"/><text x="14.0000%" y="1007.50">local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (117 samples, 73.12%)</title><rect x="13.7500%" y="981" width="73.1250%" height="15" fill="rgb(234,58,33)" fg:x="22" fg:w="117"/><text x="14.0000%" y="991.50">local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>local_file_transfer`tokio::runtime::context::set_scheduler::_{{closure}} (117 samples, 73.12%)</title><rect x="13.7500%" y="965" width="73.1250%" height="15" fill="rgb(220,115,36)" fg:x="22" fg:w="117"/><text x="14.0000%" y="975.50">local_file_transfer`tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (117 samples, 73.12%)</title><rect x="13.7500%" y="949" width="73.1250%" height="15" fill="rgb(243,153,54)" fg:x="22" fg:w="117"/><text x="14.0000%" y="959.50">local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (117 samples, 73.12%)</title><rect x="13.7500%" y="933" width="73.1250%" height="15" fill="rgb(251,47,18)" fg:x="22" fg:w="117"/><text x="14.0000%" y="943.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run (117 samples, 73.12%)</title><rect x="13.7500%" y="917" width="73.1250%" height="15" fill="rgb(242,102,42)" fg:x="22" fg:w="117"/><text x="14.0000%" y="927.50">local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 0.62%)</title><rect x="86.2500%" y="901" width="0.6250%" height="15" fill="rgb(234,31,38)" fg:x="138" fg:w="1"/><text x="86.5000%" y="911.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.62%)</title><rect x="86.2500%" y="885" width="0.6250%" height="15" fill="rgb(221,117,51)" fg:x="138" fg:w="1"/><text x="86.5000%" y="895.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.62%)</title><rect x="86.2500%" y="869" width="0.6250%" height="15" fill="rgb(212,20,18)" fg:x="138" fg:w="1"/><text x="86.5000%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (129 samples, 80.62%)</title><rect x="6.8750%" y="1541" width="80.6250%" height="15" fill="rgb(245,133,36)" fg:x="11" fg:w="129"/><text x="7.1250%" y="1551.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (129 samples, 80.62%)</title><rect x="6.8750%" y="1525" width="80.6250%" height="15" fill="rgb(212,6,19)" fg:x="11" fg:w="129"/><text x="7.1250%" y="1535.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>local_file_transfer`std::sys::unix::thread::Thread::new::thread_start (129 samples, 80.62%)</title><rect x="6.8750%" y="1509" width="80.6250%" height="15" fill="rgb(218,1,36)" fg:x="11" fg:w="129"/><text x="7.1250%" y="1519.50">local_file_transfer`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>local_file_transfer`std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.62%)</title><rect x="86.8750%" y="1493" width="0.6250%" height="15" fill="rgb(246,84,54)" fg:x="139" fg:w="1"/><text x="87.1250%" y="1503.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="88.1250%" y="1429" width="0.6250%" height="15" fill="rgb(242,110,6)" fg:x="141" fg:w="1"/><text x="88.3750%" y="1439.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (2 samples, 1.25%)</title><rect x="88.7500%" y="1413" width="1.2500%" height="15" fill="rgb(214,47,5)" fg:x="142" fg:w="2"/><text x="89.0000%" y="1423.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::CONTEXT::__getit (1 samples, 0.62%)</title><rect x="90.0000%" y="1333" width="0.6250%" height="15" fill="rgb(218,159,25)" fg:x="144" fg:w="1"/><text x="90.2500%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::runtime::coop::poll_proceed (2 samples, 1.25%)</title><rect x="90.0000%" y="1381" width="1.2500%" height="15" fill="rgb(215,211,28)" fg:x="144" fg:w="2"/><text x="90.2500%" y="1391.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::budget (2 samples, 1.25%)</title><rect x="90.0000%" y="1365" width="1.2500%" height="15" fill="rgb(238,59,32)" fg:x="144" fg:w="2"/><text x="90.2500%" y="1375.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 1.25%)</title><rect x="90.0000%" y="1349" width="1.2500%" height="15" fill="rgb(226,82,3)" fg:x="144" fg:w="2"/><text x="90.2500%" y="1359.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::budget::_{{closure}} (1 samples, 0.62%)</title><rect x="90.6250%" y="1333" width="0.6250%" height="15" fill="rgb(240,164,32)" fg:x="145" fg:w="1"/><text x="90.8750%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.62%)</title><rect x="90.6250%" y="1317" width="0.6250%" height="15" fill="rgb(232,46,7)" fg:x="145" fg:w="1"/><text x="90.8750%" y="1327.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::StateCell::poll (1 samples, 0.62%)</title><rect x="91.2500%" y="1365" width="0.6250%" height="15" fill="rgb(229,129,53)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1375.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.62%)</title><rect x="91.2500%" y="1349" width="0.6250%" height="15" fill="rgb(234,188,29)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1359.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.62%)</title><rect x="91.2500%" y="1333" width="0.6250%" height="15" fill="rgb(246,141,4)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (1 samples, 0.62%)</title><rect x="91.2500%" y="1317" width="0.6250%" height="15" fill="rgb(229,23,39)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1327.50"></text></g><g><title>local_file_transfer`std::panic::catch_unwind (1 samples, 0.62%)</title><rect x="91.2500%" y="1301" width="0.6250%" height="15" fill="rgb(206,12,3)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1311.50"></text></g><g><title>local_file_transfer`std::panicking::try (1 samples, 0.62%)</title><rect x="91.2500%" y="1285" width="0.6250%" height="15" fill="rgb(252,226,20)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1295.50"></text></g><g><title>local_file_transfer`__rust_try (1 samples, 0.62%)</title><rect x="91.2500%" y="1269" width="0.6250%" height="15" fill="rgb(216,123,35)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1279.50"></text></g><g><title>local_file_transfer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.62%)</title><rect x="91.2500%" y="1253" width="0.6250%" height="15" fill="rgb(212,68,40)" fg:x="146" fg:w="1"/><text x="91.5000%" y="1263.50"></text></g><g><title>local_file_transfer`tokio::runtime::driver::IoHandle::unpark (2 samples, 1.25%)</title><rect x="91.8750%" y="1333" width="1.2500%" height="15" fill="rgb(254,125,32)" fg:x="147" fg:w="2"/><text x="92.1250%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::runtime::io::driver::Handle::unpark (2 samples, 1.25%)</title><rect x="91.8750%" y="1317" width="1.2500%" height="15" fill="rgb(253,97,22)" fg:x="147" fg:w="2"/><text x="92.1250%" y="1327.50"></text></g><g><title>local_file_transfer`mio::waker::Waker::wake (2 samples, 1.25%)</title><rect x="91.8750%" y="1301" width="1.2500%" height="15" fill="rgb(241,101,14)" fg:x="147" fg:w="2"/><text x="92.1250%" y="1311.50"></text></g><g><title>local_file_transfer`mio::sys::unix::waker::kqueue::Waker::wake (2 samples, 1.25%)</title><rect x="91.8750%" y="1285" width="1.2500%" height="15" fill="rgb(238,103,29)" fg:x="147" fg:w="2"/><text x="92.1250%" y="1295.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 1.25%)</title><rect x="91.8750%" y="1269" width="1.2500%" height="15" fill="rgb(233,195,47)" fg:x="147" fg:w="2"/><text x="92.1250%" y="1279.50"></text></g><g><title>local_file_transfer`tokio::time::sleep::Sleep::poll_elapsed (6 samples, 3.75%)</title><rect x="90.0000%" y="1397" width="3.7500%" height="15" fill="rgb(246,218,30)" fg:x="144" fg:w="6"/><text x="90.2500%" y="1407.50">loca..</text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::poll_elapsed (4 samples, 2.50%)</title><rect x="91.2500%" y="1381" width="2.5000%" height="15" fill="rgb(219,145,47)" fg:x="146" fg:w="4"/><text x="91.5000%" y="1391.50">lo..</text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::reset (3 samples, 1.88%)</title><rect x="91.8750%" y="1365" width="1.8750%" height="15" fill="rgb(243,12,26)" fg:x="147" fg:w="3"/><text x="92.1250%" y="1375.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (3 samples, 1.88%)</title><rect x="91.8750%" y="1349" width="1.8750%" height="15" fill="rgb(214,87,16)" fg:x="147" fg:w="3"/><text x="92.1250%" y="1359.50">l..</text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.62%)</title><rect x="93.1250%" y="1333" width="0.6250%" height="15" fill="rgb(208,99,42)" fg:x="149" fg:w="1"/><text x="93.3750%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::level::Level::add_entry (1 samples, 0.62%)</title><rect x="93.1250%" y="1317" width="0.6250%" height="15" fill="rgb(253,99,2)" fg:x="149" fg:w="1"/><text x="93.3750%" y="1327.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::wheel::level::occupied_bit (1 samples, 0.62%)</title><rect x="93.1250%" y="1301" width="0.6250%" height="15" fill="rgb(220,168,23)" fg:x="149" fg:w="1"/><text x="93.3750%" y="1311.50"></text></g><g><title>local_file_transfer`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (7 samples, 4.38%)</title><rect x="90.0000%" y="1413" width="4.3750%" height="15" fill="rgb(242,38,24)" fg:x="144" fg:w="7"/><text x="90.2500%" y="1423.50">local..</text></g><g><title>local_file_transfer`tokio::time::sleep::_::_&lt;impl tokio::time::sleep::Sleep&gt;::project (1 samples, 0.62%)</title><rect x="93.7500%" y="1397" width="0.6250%" height="15" fill="rgb(225,182,9)" fg:x="150" fg:w="1"/><text x="94.0000%" y="1407.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::net::udp::UdpSocket&gt; (1 samples, 0.62%)</title><rect x="94.3750%" y="1413" width="0.6250%" height="15" fill="rgb(243,178,37)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1423.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::sys_common::net::UdpSocket&gt; (1 samples, 0.62%)</title><rect x="94.3750%" y="1397" width="0.6250%" height="15" fill="rgb(232,139,19)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1407.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (1 samples, 0.62%)</title><rect x="94.3750%" y="1381" width="0.6250%" height="15" fill="rgb(225,201,24)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1391.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.62%)</title><rect x="94.3750%" y="1365" width="0.6250%" height="15" fill="rgb(221,47,46)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1375.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.62%)</title><rect x="94.3750%" y="1349" width="0.6250%" height="15" fill="rgb(249,23,13)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1359.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.62%)</title><rect x="94.3750%" y="1333" width="0.6250%" height="15" fill="rgb(219,9,5)" fg:x="151" fg:w="1"/><text x="94.6250%" y="1343.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.62%)</title><rect x="95.0000%" y="1413" width="0.6250%" height="15" fill="rgb(254,171,16)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1423.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (1 samples, 0.62%)</title><rect x="95.0000%" y="1397" width="0.6250%" height="15" fill="rgb(230,171,20)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1407.50"></text></g><g><title>local_file_transfer`&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1 samples, 0.62%)</title><rect x="95.0000%" y="1381" width="0.6250%" height="15" fill="rgb(210,71,41)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1391.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::entry::TimerEntry::cancel (1 samples, 0.62%)</title><rect x="95.0000%" y="1365" width="0.6250%" height="15" fill="rgb(206,173,20)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1375.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (1 samples, 0.62%)</title><rect x="95.0000%" y="1349" width="0.6250%" height="15" fill="rgb(233,88,34)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1359.50"></text></g><g><title>local_file_transfer`tokio::runtime::time::Inner::lock (1 samples, 0.62%)</title><rect x="95.0000%" y="1333" width="0.6250%" height="15" fill="rgb(223,209,46)" fg:x="152" fg:w="1"/><text x="95.2500%" y="1343.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.62%)</title><rect x="95.6250%" y="1349" width="0.6250%" height="15" fill="rgb(250,43,18)" fg:x="153" fg:w="1"/><text x="95.8750%" y="1359.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}}::_{{closure}} (13 samples, 8.12%)</title><rect x="88.7500%" y="1429" width="8.1250%" height="15" fill="rgb(208,13,10)" fg:x="142" fg:w="13"/><text x="89.0000%" y="1439.50">local_file_..</text></g><g><title>local_file_transfer`tokio::task::spawn::spawn (2 samples, 1.25%)</title><rect x="95.6250%" y="1413" width="1.2500%" height="15" fill="rgb(212,200,36)" fg:x="153" fg:w="2"/><text x="95.8750%" y="1423.50"></text></g><g><title>local_file_transfer`tokio::task::spawn::spawn_inner (2 samples, 1.25%)</title><rect x="95.6250%" y="1397" width="1.2500%" height="15" fill="rgb(225,90,30)" fg:x="153" fg:w="2"/><text x="95.8750%" y="1407.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::current::with_current (2 samples, 1.25%)</title><rect x="95.6250%" y="1381" width="1.2500%" height="15" fill="rgb(236,182,39)" fg:x="153" fg:w="2"/><text x="95.8750%" y="1391.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 1.25%)</title><rect x="95.6250%" y="1365" width="1.2500%" height="15" fill="rgb(212,144,35)" fg:x="153" fg:w="2"/><text x="95.8750%" y="1375.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::current::with_current::_{{closure}} (1 samples, 0.62%)</title><rect x="96.2500%" y="1349" width="0.6250%" height="15" fill="rgb(228,63,44)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1359.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::map (1 samples, 0.62%)</title><rect x="96.2500%" y="1333" width="0.6250%" height="15" fill="rgb(228,109,6)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1343.50"></text></g><g><title>local_file_transfer`tokio::task::spawn::spawn_inner::_{{closure}} (1 samples, 0.62%)</title><rect x="96.2500%" y="1317" width="0.6250%" height="15" fill="rgb(238,117,24)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1327.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::Handle::spawn (1 samples, 0.62%)</title><rect x="96.2500%" y="1301" width="0.6250%" height="15" fill="rgb(242,26,26)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1311.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1 samples, 0.62%)</title><rect x="96.2500%" y="1285" width="0.6250%" height="15" fill="rgb(221,92,48)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1295.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 0.62%)</title><rect x="96.2500%" y="1269" width="0.6250%" height="15" fill="rgb(209,209,32)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1279.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (1 samples, 0.62%)</title><rect x="96.2500%" y="1253" width="0.6250%" height="15" fill="rgb(221,70,22)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1263.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.62%)</title><rect x="96.2500%" y="1237" width="0.6250%" height="15" fill="rgb(248,145,5)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1247.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::with_current (1 samples, 0.62%)</title><rect x="96.2500%" y="1221" width="0.6250%" height="15" fill="rgb(226,116,26)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1231.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::with_scheduler (1 samples, 0.62%)</title><rect x="96.2500%" y="1205" width="0.6250%" height="15" fill="rgb(244,5,17)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1215.50"></text></g><g><title>local_file_transfer`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.62%)</title><rect x="96.2500%" y="1189" width="0.6250%" height="15" fill="rgb(252,159,33)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1199.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::with_scheduler::_{{closure}} (1 samples, 0.62%)</title><rect x="96.2500%" y="1173" width="0.6250%" height="15" fill="rgb(206,71,0)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1183.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.62%)</title><rect x="96.2500%" y="1157" width="0.6250%" height="15" fill="rgb(233,118,54)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1167.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (1 samples, 0.62%)</title><rect x="96.2500%" y="1141" width="0.6250%" height="15" fill="rgb(234,83,48)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1151.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.62%)</title><rect x="96.2500%" y="1125" width="0.6250%" height="15" fill="rgb(228,3,54)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1135.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (1 samples, 0.62%)</title><rect x="96.2500%" y="1109" width="0.6250%" height="15" fill="rgb(226,155,13)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1119.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.62%)</title><rect x="96.2500%" y="1093" width="0.6250%" height="15" fill="rgb(241,28,37)" fg:x="154" fg:w="1"/><text x="96.5000%" y="1103.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.62%)</title><rect x="96.8750%" y="1429" width="0.6250%" height="15" fill="rgb(233,93,10)" fg:x="155" fg:w="1"/><text x="97.1250%" y="1439.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::exit (1 samples, 0.62%)</title><rect x="96.8750%" y="1413" width="0.6250%" height="15" fill="rgb(225,113,19)" fg:x="155" fg:w="1"/><text x="97.1250%" y="1423.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.62%)</title><rect x="96.8750%" y="1397" width="0.6250%" height="15" fill="rgb(241,2,18)" fg:x="155" fg:w="1"/><text x="97.1250%" y="1407.50"></text></g><g><title>local_file_transfer`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.62%)</title><rect x="97.5000%" y="1317" width="0.6250%" height="15" fill="rgb(228,207,21)" fg:x="156" fg:w="1"/><text x="97.7500%" y="1327.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (18 samples, 11.25%)</title><rect x="87.5000%" y="1541" width="11.2500%" height="15" fill="rgb(213,211,35)" fg:x="140" fg:w="18"/><text x="87.7500%" y="1551.50">local_file_transf..</text></g><g><title>local_file_transfer`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (18 samples, 11.25%)</title><rect x="87.5000%" y="1525" width="11.2500%" height="15" fill="rgb(209,83,10)" fg:x="140" fg:w="18"/><text x="87.7500%" y="1535.50">local_file_transf..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on (18 samples, 11.25%)</title><rect x="87.5000%" y="1509" width="11.2500%" height="15" fill="rgb(209,164,1)" fg:x="140" fg:w="18"/><text x="87.7500%" y="1519.50">local_file_transf..</text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (18 samples, 11.25%)</title><rect x="87.5000%" y="1493" width="11.2500%" height="15" fill="rgb(213,184,43)" fg:x="140" fg:w="18"/><text x="87.7500%" y="1503.50">local_file_transf..</text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}} (18 samples, 11.25%)</title><rect x="87.5000%" y="1477" width="11.2500%" height="15" fill="rgb(231,61,34)" fg:x="140" fg:w="18"/><text x="87.7500%" y="1487.50">local_file_transf..</text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}} (17 samples, 10.62%)</title><rect x="88.1250%" y="1461" width="10.6250%" height="15" fill="rgb(235,75,3)" fg:x="141" fg:w="17"/><text x="88.3750%" y="1471.50">local_file_trans..</text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 10.62%)</title><rect x="88.1250%" y="1445" width="10.6250%" height="15" fill="rgb(220,106,47)" fg:x="141" fg:w="17"/><text x="88.3750%" y="1455.50">local_file_trans..</text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::enter (2 samples, 1.25%)</title><rect x="97.5000%" y="1429" width="1.2500%" height="15" fill="rgb(210,196,33)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1439.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 1.25%)</title><rect x="97.5000%" y="1413" width="1.2500%" height="15" fill="rgb(229,154,42)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1423.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 1.25%)</title><rect x="97.5000%" y="1397" width="1.2500%" height="15" fill="rgb(228,114,26)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1407.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 1.25%)</title><rect x="97.5000%" y="1381" width="1.2500%" height="15" fill="rgb(208,144,1)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1391.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or_default (2 samples, 1.25%)</title><rect x="97.5000%" y="1365" width="1.2500%" height="15" fill="rgb(239,112,37)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1375.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or (2 samples, 1.25%)</title><rect x="97.5000%" y="1349" width="1.2500%" height="15" fill="rgb(210,96,50)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1359.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_or_try (2 samples, 1.25%)</title><rect x="97.5000%" y="1333" width="1.2500%" height="15" fill="rgb(222,178,2)" fg:x="156" fg:w="2"/><text x="97.7500%" y="1343.50"></text></g><g><title>local_file_transfer`thread_local::ThreadLocal&lt;T&gt;::get_inner (1 samples, 0.62%)</title><rect x="98.1250%" y="1317" width="0.6250%" height="15" fill="rgb(226,74,18)" fg:x="157" fg:w="1"/><text x="98.3750%" y="1327.50"></text></g><g><title>local_file_transfer`core::sync::atomic::atomic_load (1 samples, 0.62%)</title><rect x="98.1250%" y="1301" width="0.6250%" height="15" fill="rgb(225,67,54)" fg:x="157" fg:w="1"/><text x="98.3750%" y="1311.50"></text></g><g><title>local_file_transfer`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.62%)</title><rect x="98.7500%" y="1413" width="0.6250%" height="15" fill="rgb(251,92,32)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1423.50"></text></g><g><title>local_file_transfer`tracing_core::dispatcher::Dispatch::enter (1 samples, 0.62%)</title><rect x="98.7500%" y="1397" width="0.6250%" height="15" fill="rgb(228,149,22)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1407.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="98.7500%" y="1381" width="0.6250%" height="15" fill="rgb(243,54,13)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1391.50"></text></g><g><title>local_file_transfer`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.62%)</title><rect x="98.7500%" y="1365" width="0.6250%" height="15" fill="rgb(243,180,28)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1375.50"></text></g><g><title>local_file_transfer`&lt;tracing_opentelemetry::layer::OpenTelemetryLayer&lt;S,T&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.62%)</title><rect x="98.7500%" y="1349" width="0.6250%" height="15" fill="rgb(208,167,24)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1359.50"></text></g><g><title>local_file_transfer`core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (1 samples, 0.62%)</title><rect x="98.7500%" y="1333" width="0.6250%" height="15" fill="rgb(245,73,45)" fg:x="158" fg:w="1"/><text x="99.0000%" y="1343.50"></text></g><g><title>all (160 samples, 100%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(237,203,48)" fg:x="0" fg:w="160"/><text x="0.2500%" y="1567.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (2 samples, 1.25%)</title><rect x="98.7500%" y="1541" width="1.2500%" height="15" fill="rgb(211,197,16)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1551.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::runtime::enter_runtime (2 samples, 1.25%)</title><rect x="98.7500%" y="1525" width="1.2500%" height="15" fill="rgb(243,99,51)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1535.50"></text></g><g><title>local_file_transfer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (2 samples, 1.25%)</title><rect x="98.7500%" y="1509" width="1.2500%" height="15" fill="rgb(215,123,29)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1519.50"></text></g><g><title>local_file_transfer`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (2 samples, 1.25%)</title><rect x="98.7500%" y="1493" width="1.2500%" height="15" fill="rgb(239,186,37)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1503.50"></text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on (2 samples, 1.25%)</title><rect x="98.7500%" y="1477" width="1.2500%" height="15" fill="rgb(252,136,39)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1487.50"></text></g><g><title>local_file_transfer`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (2 samples, 1.25%)</title><rect x="98.7500%" y="1461" width="1.2500%" height="15" fill="rgb(223,213,32)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1471.50"></text></g><g><title>local_file_transfer`local_file_transfer::main::_{{closure}} (2 samples, 1.25%)</title><rect x="98.7500%" y="1445" width="1.2500%" height="15" fill="rgb(233,115,5)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1455.50"></text></g><g><title>local_file_transfer`adrnaln::server::Server::start::_{{closure}} (2 samples, 1.25%)</title><rect x="98.7500%" y="1429" width="1.2500%" height="15" fill="rgb(207,226,44)" fg:x="158" fg:w="2"/><text x="99.0000%" y="1439.50"></text></g><g><title>local_file_transfer`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.62%)</title><rect x="99.3750%" y="1413" width="0.6250%" height="15" fill="rgb(208,126,0)" fg:x="159" fg:w="1"/><text x="99.6250%" y="1423.50"></text></g></svg></svg>